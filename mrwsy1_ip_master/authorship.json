[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "D | true | hellotest2 | tonight"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "E | false | hellotest3 | night"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | false | moretest"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | false | testafteroop"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "D | false | tell me how u feel | tonight"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Duke is a personal Chatbot that helps you manage and keep track of your tasks through a Command Line Interface."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [List all tasks: `list`](#1-list---list-all-tasks)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Add new Todo: `todo`](#2-todo---add-new-todo)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Add new Deadline: `deadline`](#3-deadline---add-new-deadline)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Add new Event: `event`](#4-event---add-new-event)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Mark a task as done: `done`](#5-done---mark-a-task-as-done)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Delete a task: `delete`](#6-delete---delete-a-task)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Find tasks based on keyword: `find`](#7-find---find-tasks-based-on-keyword)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    * [Exit program: `bye`](#8-bye---exit-program)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "1. Ensure you have Java 11 or above installed on your computer."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "2. Download the latest version of `CS2113_IP.jar`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "3. Copy the file to a folder you want to use as the root directory for Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "4. Open a Command Prompt from that folder, and run the following commands:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "   chcp 65001"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "   java -Dfile.encoding\u003dUTF-8 -jar CS2113_IP.jar"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "   "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "5. Refer to Features for more details on the available commands and their usage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 1. `list` - List all tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Displays an indexed list of all tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "1.[T][✘] some task 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "2.[D][✓] some task 2 (by: monday)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "3.[E][✓] some task 3 (at: sunday night)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 2. `todo` - Add new Todo"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Adds a todo task to the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`todo do some coding`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "\t[T][✘] do some coding"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 3. `deadline` - Add new Deadline"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Adds a deadline to the list. The time can be specified after a `/by` separator."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`deadline do math homework /by tuesday`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "\t[D][✘] do math homework (by: tuesday)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 4. `event` - Add new Event"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Adds an event to the list. The time can be specified after a `/at` separator."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`event attend zoom lecture /at friday 4pm`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "\t[E][✘] attend zoom lecture (at: friday 4pm)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 5. `done` - Mark a task as done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Marks a task in the list as done, based on the given index."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "\t[T][✓] some task 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 6. `delete` - Delete a task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Deletes a task from the list, based on the given index."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "\t[T][✓] some task 1"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 7. `find` - Find tasks based on keyword"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Finds all tasks in the list that contain the given keyword or string."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`find coding`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "1.[T][✘] do some coding"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "### 8. `bye` - Exit program"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Terminates the Command Line Interface."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Example of usage: "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "##### Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "Command | Format | Example"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "------- | ---------- | ------------"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list | `list` | -"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "todo | `todo [description]` | `todo do some coding`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "deadline | `deadline [description] /by [time]`| `deadline do math homework /by tuesday`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "event | `event [description] /at [time]` | `attend zoom lecture /at friday 4pm` "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "done | `done [index]`  | `done 1`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "delete | `delete [index]` | `delete 1`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "find | `find [keyword or string]` | `find coding`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "bye | `bye` | -"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 137,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"D\" + \" | \" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected static TaskList array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Duke(String directory) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        Ui.displayWelcomeMsg();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        storage \u003d new Storage(directory);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        array \u003d new TaskList(storage, directory);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        boolean looper \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        while (looper) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                line \u003d Parser.readCmd();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                looper \u003d Parser.executeCmd(line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 27,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Prints out error message according to type of exception."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * type1: invalid cmd"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * type2: invalid input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * type3: invalid deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * type4: invalid event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void getException() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        switch (this.error) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case \"type1\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\u003cERROR\u003e Please enter a valid command.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case \"type2\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\u003cERROR\u003e Please enter a valid input.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case \"type3\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\u003cERROR\u003e Please enter a valid input.\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    \"Format: (Task) /by (time)\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case \"type4\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\u003cERROR\u003e Please enter a valid input.\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    \"Format: (Task) /at (time)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 35
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"E\" + \" | \" + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 20
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected static Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected static String line;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @return the input from user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static String readCmd() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Determines the action to take based on user input,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * and returns a boolean for the while loop condition."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line the input from user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @return a boolean"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static boolean executeCmd(String line) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String lineCmd \u003d line.trim().toLowerCase().split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            switch (lineCmd) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                Ui.displayByeMsg();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdDone(line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdTodo(line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdDeadline(line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdEvent(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdDelete(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                TaskList.cmdFind(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Invalid command.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String directory;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Storage(String directory) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.directory \u003d directory;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Reads saved data from file in the specified directory, then fills the ArrayList with the data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Creates a save file if it does not exist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param directory path to saved data"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void readFile(String directory) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            File f \u003d new File(directory);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Scanner inF \u003d new Scanner(f);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            while (inF.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String lineF \u003d inF.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String[] lineFSplit \u003d lineF.trim().split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                /* lineFSplit is split into 4 parts"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 0: task type"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 1: completion status"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 2: contents"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 3: conditions"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                switch (lineFSplit[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Todo newTodo \u003d new Todo(lineFSplit[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newTodo.isDone \u003d Boolean.parseBoolean(lineFSplit[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    TaskList.restoreSaved(newTodo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(lineFSplit[2], lineFSplit[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newDeadline.isDone \u003d Boolean.parseBoolean(lineFSplit[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    TaskList.restoreSaved(newDeadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Event newEvent \u003d new Event(lineFSplit[2], lineFSplit[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newEvent.isDone \u003d Boolean.parseBoolean(lineFSplit[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    TaskList.restoreSaved(newEvent);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Overwrites old saved data in the file using new data from the ArrayList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param array ArrayList containing all tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @throws IOException thrown if write fails"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void writeWholeFile(ArrayList\u003cTask\u003e array) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(directory);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getSize(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String textToAdd \u003d array.get(i).toFile();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method to add new task into the file */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Appends new task to the saved data."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param newTask contains task data"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @throws IOException thrown if write fails"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void writeFile(Task newTask) throws IOException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(directory, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String textToAdd \u003d newTask.toFile();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 92
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return isDone + \" | \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 31
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected static Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    private static ArrayList\u003cTask\u003e array;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public TaskList(Storage dupe, String directory) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        array \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        storage \u003d dupe;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        storage.readFile(directory);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Adds saved data from file to the ArrayList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param savedTask saved data from file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void restoreSaved(Task savedTask) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        array.add(savedTask);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Finds the number of tasks currently in the ArrayList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @return size of the ArrayList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static int getSize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return array.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Finds all tasks in the ArrayList that contains a keyword."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdFind(String line) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String key \u003d line.trim().substring(5);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int matched \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                Task temp \u003d array.get(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                if (temp.description.contains(key)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    matched++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    if (matched \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    System.out.println(matched + \".\" + temp.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (matched \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"No matching tasks found.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Invalid keyword.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Deletes a task from the ArrayList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDelete(String line) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String taskIndexStr \u003d line.trim().substring(7);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskIndexStr);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"You do not have any tasks available.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (taskIndex \u003d\u003d 0 || taskIndex \u003e array.size()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Please input an index within range (1~\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                        + array.size() + \").\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String temp \u003d array.get(taskIndex - 1).toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                array.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                storage.writeWholeFile(array);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"\\t\" + temp);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Invalid input.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Adds an event to the ArrayList."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdEvent(String line) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int atPos \u003d line.indexOf(\"/at\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String eventContent \u003d line.trim().substring(6, atPos - 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String eventAt \u003d line.trim().split(\"/at \")[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Event newEvent \u003d new Event(eventContent, eventAt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newEvent);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            storage.writeFile(newEvent);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Ui.displayAddMsg(3, eventContent, eventAt);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid event.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Adds a deadline to the ArrayList"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDeadline(String line) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int byPos \u003d line.indexOf(\"/by\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String dlContent \u003d line.trim().substring(9, byPos - 1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String dlBy \u003d line.trim().split(\"/by \")[1];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(dlContent, dlBy);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newDeadline);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            storage.writeFile(newDeadline);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Ui.displayAddMsg(2, dlContent, dlBy);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid deadline.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Adds a to-do to the ArrayList."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdTodo(String line) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String todoContent \u003d line.trim().substring(5);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Todo newTodo \u003d new Todo(todoContent);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newTodo);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            storage.writeFile(newTodo);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Ui.displayAddMsg(1, todoContent, null);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid task.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Marks a task in the ArrayList as done."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param line contains user input"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDone(String line) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String taskIndexStr \u003d line.trim().substring(5);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskIndexStr);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"You do not have any tasks available.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (taskIndex \u003d\u003d 0 || taskIndex \u003e array.size()) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Please input an index within range (1~\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                        + array.size() + \").\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (array.get(taskIndex - 1).isDone) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"duke.Task is already done.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                array.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"\\t\" + array.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Invalid input.\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Lists out all tasks in the ArrayList."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdList() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"No tasks recorded.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            displayList();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Prints out all tasks in the ArrayList in order."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(i + 1 + \".\" + array.get(i).toString());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 187
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"T\" + \" | \" + super.toFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 17
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Displays the DUKE logo and greeting message."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayWelcomeMsg() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke!\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Displays the exit message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayByeMsg() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * Prints task added message depending on the type of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param taskType  specifies the type of task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param content   contains the description of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     * @param condition contains a date or time"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayAddMsg(int taskType, String content, String condition) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[T][\\u2718] \" + content);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[D][\\u2718] \" + content + \" (by: \" + condition + \")\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[E][\\u2718] \" + content + \" (at: \" + condition + \")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Now you have \" + TaskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 50
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | false | some task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "D | true | some task2 | tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "E | true | some task3 | sunday night"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "todo testing1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "deadline testing2 /by now"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "event testing3 /at later"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "find testing1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "find legend of the sky"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    echo **** BUILD FAILURE ****"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 2,
      "-": 36
    }
  }
]
