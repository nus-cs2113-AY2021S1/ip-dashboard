[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | true | hellotest1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "D | false | hellotest2 | tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "E | false | hellotest3 | night"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | false | hello0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "T | false | moretest"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 5
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"D\" + \" | \" + super.toFile() + \" | \" + by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    private static ArrayList\u003cTask\u003e array \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        displayWelcomeMsg();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        boolean looper \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        readFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        while (looper) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String lineCmd \u003d line.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                switch (lineCmd) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    writeWholeFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    displayByeMsg();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    looper \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdDone(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdTodo(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdDeadline(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdEvent(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    cmdDelete(line);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    System.out.println(\"Invalid command.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                } //end switch statement"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } //end while loop"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method to read from file */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void readFile() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            File f \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                f.getParentFile().mkdir();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Scanner inf \u003d new Scanner(f);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            while (inf.hasNext()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String linef \u003d inf.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String[] linefSplit \u003d linef.trim().split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                /* linefSplit is split into 4 parts"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 0: task type"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 1: completion status"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 2: contents"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * 3: conditions"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                 * */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                switch (linefSplit[0]) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Todo newTodo \u003d new Todo(linefSplit[2]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newTodo.isDone \u003d Boolean.parseBoolean(linefSplit[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    array.add(newTodo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Deadline newDeadline \u003d new Deadline(linefSplit[2], linefSplit[3]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newDeadline.isDone \u003d Boolean.parseBoolean(linefSplit[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    array.add(newDeadline);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    Event newEvent \u003d new Event(linefSplit[2], linefSplit[3]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    newEvent.isDone \u003d Boolean.parseBoolean(linefSplit[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    array.add(newEvent);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method to overwrite the file with all tasks in the array */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void writeWholeFile() throws IOException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String textToAdd \u003d array.get(i).toFile();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method to add new task into the file */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void writeFile(Task newTask) throws IOException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/tasks.txt\", true);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String textToAdd \u003d newTask.toFile();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.write(textToAdd + \"\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for delete command */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDelete(String line) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String taskIndexStr \u003d line.trim().substring(7);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskIndexStr);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"You do not have any tasks available.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (taskIndex \u003d\u003d 0 || taskIndex \u003e array.size()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Please input an index within range (1~\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                        + array.size() + \").\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                String temp \u003d array.get(taskIndex - 1).toString();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                array.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                writeWholeFile();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"\\t\" + temp);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Invalid input.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for event command */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdEvent(String line) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int atPos \u003d line.indexOf(\"/at\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String eventContent \u003d line.trim().substring(6, atPos - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String eventAt \u003d line.trim().split(\"/at \")[1];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Event newEvent \u003d new Event(eventContent, eventAt);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newEvent);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            writeFile(newEvent);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            displayAddMsg(3, eventContent, eventAt);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid event.\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for deadline command */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDeadline(String line) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int byPos \u003d line.indexOf(\"/by\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String dlContent \u003d line.trim().substring(9, byPos - 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String dlBy \u003d line.trim().split(\"/by \")[1];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(dlContent, dlBy);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newDeadline);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            writeFile(newDeadline);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            displayAddMsg(2, dlContent, dlBy);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid deadline.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for todo command */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdTodo(String line) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String todoContent \u003d line.trim().substring(5);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            Todo newTodo \u003d new Todo(todoContent);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            array.add(newTodo);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            writeFile(newTodo);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            displayAddMsg(1, todoContent, null);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Please enter a valid task.\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for done command */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdDone(String line) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            String taskIndexStr \u003d line.trim().substring(5);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskIndexStr);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"You do not have any tasks available.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (taskIndex \u003d\u003d 0 || taskIndex \u003e array.size()) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Please input an index within range (1~\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                        + array.size() + \").\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else if (array.get(taskIndex - 1).isDone) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"duke.Task is already done.\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                array.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                System.out.println(\"\\t\" + array.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Invalid input.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* method for list command */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void cmdList() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        if (array.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"No tasks recorded.\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            displayList();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* displays exit message */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayByeMsg() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* displays DUKE logo and welcome message */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayWelcomeMsg() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\n\" +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "                \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* prints out added task message depending on type of task */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayAddMsg(int taskType, String content, String condition) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[T][\\u2718] \" + content);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[D][\\u2718] \" + content + \" (by: \" + condition + \")\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(\"\\t[E][\\u2718] \" + content + \" (at: \" + condition + \")\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        System.out.println(\"Now you have \" + array.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    /* prints out contents of task array in order */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        for (int i \u003d 0; i \u003c array.size(); i++) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "            System.out.println(i + 1 + \".\" + array.get(i).toString());"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 253,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"E\" + \" | \" + super.toFile() + \" | \" + at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 20
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return isDone + \" | \" + getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 31
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "        return \"T\" + \" | \" + super.toFile();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "testing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "todo some task1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "deadline some task2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "deadline some task2 /by tuesday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "event some task3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "event some task3 /at sunday night"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "    echo **** BUILD FAILURE ****"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mrwsy1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mrwsy1": 2,
      "-": 36
    }
  }
]
