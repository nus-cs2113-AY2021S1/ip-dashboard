[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static int numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            openFile(); //try to open the txt file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (FileNotFoundException e) { // if the file does not exist create one"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                File f \u003d new File(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                if (f.createNewFile()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    System.out.println(\"New file created.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } catch (IOException g) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                System.out.println(\"Unable to create file.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            parse(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void openFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        File f \u003d new File(\"data/tasks.txt\"); // create a File for the given file path"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        while (s.hasNext()) { // read in input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            parse(s.nextLine());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    private static void writeToFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            fw.write(tasks.get(i).toString()+System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void parse (String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        // parses the user input"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                list(numOfTasks, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"done(.*)\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                markDone(input, tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"todo.*\")||input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    addTodo(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    numOfTasks++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"deadline.*\")||input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                addDeadline(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"event.*\")||input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                addEvent(input, tasks, numOfTasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                numOfTasks++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"delete.*\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                deleteTask(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                throw new UnkownCommandException();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (UnkownCommandException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            writeToFile(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Unable to write to file.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        isTerminated \u003d true;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void list(int numOfTasks, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Your list is empty.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            for (int j \u003d 0; j \u003c numOfTasks; j++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                System.out.println((j + 1) + \".\" + tasks.get(j).toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void markDone(String in, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        String number \u003d in.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int i \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        i \u003d i - 1; //the user counts from 1 instead of 0"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.get(i).setAsDone();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Sorry, I can\u0027t find such a task.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void addTask (String input, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.add(new Task(input));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"added: \" + tasks.get(numOfTasks).getDescription());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void deleteTask (String input) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(dividerPosition+1)) - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(tasks.get(index).toString());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks--;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks) +\" task(s) in the list.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void addTodo(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (dividerPosition \u003c\u003d 0) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (in.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.add(new Todo(in.substring(dividerPosition + 1)));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.get(numOfTasks).setAsDone();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(tasks, numOfTasks);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void addDeadline(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isFromFile \u003d in.startsWith(\"[D]\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\":\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.add(new Deadline(in.substring((dividerPosition1 + 1), dividerPosition2-3),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 2, in.length()-1)));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\"/\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.add(new Deadline(in.substring((dividerPosition1 + 1), dividerPosition2),"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 4)));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.get(numOfTasks).setAsDone();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(tasks, numOfTasks);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void addEvent(String in, ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (in.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\":\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.add(new Event(in.substring((dividerPosition1+1),dividerPosition2-3),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 2,in.length()-1)));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\"/\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.add(new Event(in.substring((dividerPosition1 + 1), dividerPosition2),"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 4)));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.get(numOfTasks).setAsDone();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(tasks, numOfTasks);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static void printTask (ArrayList\u003cTask\u003e tasks, int numOfTasks) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(tasks.get(numOfTasks).toString());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks+1) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 211,
      "-": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class EmptyDescriptionException extends java.lang.Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 2
    }
  },
  {
    "path": "src/main/java/UnkownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class UnkownCommandException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 2
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    //constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[\"+this.getStatusIcon()+\"] \"+this.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "javac  -cp ..\\src\\main\\java -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 2,
      "-": 19
    }
  }
]
