[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Add task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Let us add a task into our reminder list. There are three types of tasks:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "2. Deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "3. Event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Todo is a simple reminder while deadline and event can help you keep track of the time."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "By default a new task added is uncompleted and is marked by `[N]`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Remove a task from our reminder list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Mark Done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Mark a task in our list as completed. A completed task is marked as `[Y]`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Find "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Find a regular expression in the task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Allows the user to enter a date and parses it into a LocalDate."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### Help"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Display help options."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `todo` - Add a new todo task into our list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Add a simple todo task into our list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`todo DESCRIPTION`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Got it. I\u0027ve added this task: `"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`[T][N] DESCRIPTION`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Now you have NUMBER task(s) in the list.`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `event` - Add a new event task into our list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Add an event task and the time when the task occurs. The time format should be DD-MM-YYYY."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Got it. I\u0027ve added this task: `"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`[E][N] DESCRIPTION (at: TIME)`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Now you have NUMBER task(s) in the list.`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `deadline` - Add a new deadline task into our list"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Add a task with a deadline and the time of the deadline. The time format should be DD-MM-YYYY."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`deadline DESCRIPTION /by TIME`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Got it. I\u0027ve added this task: `"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`[D][N] DESCRIPTION (by: TIME)`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Now you have NUMBER task(s) in the list.`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `list` - List all entries in our Task List"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`1.[T][Y] borrow book`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`2.[E][N] project meeting (at: Mon 2-4pm)`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`3.[D][N] do homework (by: no idea :-p)`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `done` - Mark a task as completed"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`done INDEX`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Nice! I\u0027ve marked this task as done: `"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`[T][Y] DESCRIPTION`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `delete` - Delete a task from list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`delete INDEX`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Noted. I\u0027ve removed this task: `"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`[E][Y] project meeting (at: Mon 2-4pm)`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Now you have NUMBER task(s) in the list.`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `find` - Find a task in the list that matches a keyword"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "A simple find function that lets you find tasks which have descriptions that matches your keyword. Find is case-sensitive."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`find KEYWORD`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`INDEX.[T][N] keyword`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `help` - Display help options"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Here are all the valid commands:`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`todo DESCRIPTION`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`event DESCRIPTION /at TIME`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`deadline DESCRIPTION /by TIME`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`done INDEX`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`find KEYWORD`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Quits the program after saving the current list in a .txt file"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 140,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.classes.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.classes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.classes.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.classes.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static boolean isTerminated \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            storage.openFile(); //try to open the txt file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (FileNotFoundException e) { // if the file does not exist create one"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //run the program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        ui.welcome();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        while (!isTerminated) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            isTerminated \u003d p.parse(input, tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 41,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/classes/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.exceptions.UnkownCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public boolean parse (String input, TaskList tasks) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        // parses the user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                ui.exit(tasks);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                tasks.writeToFile(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                tasks.list();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"done(.*)\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                tasks.markDone(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"todo.*\")||input.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    tasks.addTodo(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a tasks cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"deadline.*\")||input.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    tasks.addDeadline(input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a tasks cannot be empty.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"event.*\")||input.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    tasks.addEvent(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a tasks cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.matches(\"delete.*\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                tasks.deleteTask(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                tasks.findTask(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else if (input.startsWith(\"help\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                ui.help();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                throw new UnkownCommandException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (UnkownCommandException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            ui.help();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 55
    }
  },
  {
    "path": "src/main/java/duke/classes/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    private static File f;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Storage (String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        filePath \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void openFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        // create a File for the given file path"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public TaskList load() throws FileNotFoundException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //load the contents of the file into the tasklist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        while (s.hasNext()) { // read in input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            p.parse(s.nextLine(), tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 28
    }
  },
  {
    "path": "src/main/java/duke/classes/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static int numOfTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public TaskList () {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void deleteTask (String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //remove task from list by index"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(dividerPosition+1)) - 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(tasks.get(index).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks--;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks) +\" task(s) in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //prints out all tasks in ArrayList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Your list is empty.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            for (int j \u003d 0; j \u003c tasks.size(); j++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                System.out.println((j + 1) + \".\" + tasks.get(j).toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void addTodo(String in) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //add a new todo task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (dividerPosition \u003c\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (in.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"Y\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Todo t \u003d new Todo(in.substring(dividerPosition + 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t.setAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void addDeadline (String in) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //add a new deadline task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Deadline t;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isFromFile \u003d in.startsWith(\"[D]\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (dividerPosition1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isFromFile) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"Y\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\":\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t \u003d new Deadline(in.substring((dividerPosition1 + 1), dividerPosition2-3),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 2, in.length()-1));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\"/\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t \u003d new Deadline(in.substring((dividerPosition1 + 1), dividerPosition2),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 4));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t.setAsDone();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(t);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void addEvent(String in) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //add a new event task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Event t;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition1 \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (dividerPosition1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (in.startsWith(\"[E]\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            String c \u003d Character.toString(in.charAt(4));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (c.equals(\"Y\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                isDone \u003d true;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\":\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t \u003d new Event(in.substring((dividerPosition1+1),dividerPosition2-3),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 2,in.length()-1));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            int dividerPosition2 \u003d in.indexOf(\"/\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t \u003d new Event(in.substring((dividerPosition1 + 1), dividerPosition2),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    in.substring(dividerPosition2 + 4));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            t.setAsDone();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        printTask(t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void markDone(String in) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //set the task as completed"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d in.indexOf(\" \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        String number \u003d in.substring(dividerPosition+1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int i \u003d Integer.parseInt(number);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        i--; //the user counts from 1 instead of 0"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            tasks.get(i).setAsDone();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            System.out.println(\"Sorry, I can\u0027t find such a task.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(tasks.get(i).toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void printTask (Task task) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //prints out the task"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Now you have \" + (numOfTasks) + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void writeToFile(String filePath) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //writes the tasklist to the file to persist data for future use"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        File f \u003d new File(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (f.createNewFile()) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                System.out.println(\"New file created.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                ui.showLoadingError();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                fw.write(tasks.get(i).toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void findTask (String input) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //find all tasks that contains user inputted string"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        int dividerPosition \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        Pattern searchPattern \u003d Pattern.compile(input.substring(dividerPosition));"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            Matcher matcher \u003d searchPattern.matcher((tasks.get(i).toString()));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            if (matcher.find()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                System.out.println((i + 1) + \".\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 189
    }
  },
  {
    "path": "src/main/java/duke/classes/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.classes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void welcome () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //prints welcome message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void exit (TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //writes current tasks to file and exit program"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        tasks.writeToFile(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void help () {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Here are all the valid commands:\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"todo DESCRIPTION\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"event DESCRIPTION /at TIME\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"deadline DESCRIPTION /by TIME\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"list\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"done INDEX\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"find KEYWORD\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"bye\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        System.out.println(\"Error Loading File\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 35
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class EmptyDescriptionException extends java.lang.Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnkownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class UnkownCommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected boolean isDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        // create formatter (use English Locale to parse month names)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder().parseCaseInsensitive().appendPattern(\"dd-MMM-yyyy\")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                .toFormatter(Locale.ENGLISH);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            this.date \u003d LocalDate.parse(by, formatter);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            isDate \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            isDate \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                (isDate?date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")):by) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected boolean isDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Event (String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            // create formatter (use English Locale to parse month names)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder().parseCaseInsensitive()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                    .appendPattern(\"dd-MMM-yyyy\").toFormatter(Locale.ENGLISH);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            this.date \u003d LocalDate.parse(at, formatter);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            isDate \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "            isDate \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "                (isDate?date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")):at) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        //constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return Y or N symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[\"+this.getStatusIcon()+\"] \"+this.getDescription();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "javac  -cp ..\\src\\main\\java -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shikai-zhou"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e\u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shikai-zhou": 2,
      "-": 19
    }
  }
]
