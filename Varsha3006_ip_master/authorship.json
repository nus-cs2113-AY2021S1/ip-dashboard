[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "1. Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "2. Quick Start"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "3. Features \u003cbr/\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.1 Help `help` \u003cbr/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.2 Adding a \u0027todo\u0027 task: `todo` \u003cbr/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.3 Adding an \u0027event\u0027: `event` \u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.4 Adding a \u0027deadline\u0027: `deadline` \u003cbr/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.5 Listing all tasks: `list` \u003cbr/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.6 Finding tasks by keywords: `find` \u003cbr/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.7 Deleting a task: `delete` \u003cbr/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.8 Marking a task as done: `done` \u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.9 Saving the data \u003cbr/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "   3.10 Exiting the program: `bye` \u003cbr/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "4. Command Summary"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Duke is a desktop application for task management, optimized for use via a Command Line Interface (CLI). If you like typing, Duke is the perfect task management application for you. Duke can manage your todo tasks, deadlines and events quickly"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "2. Download the latest Duke.jar."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "3. Launch the program by double clicking the downloaded jar file, or run command java -jar Duke.jar ."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "4. Type the command and press \u0027Enter\u0027 on the keyboard to execute it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "5. Refer to Section 3, \"Features\" for details of each command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "#### Command Format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* Command word is case-sensitive e.g. `todo` must be entered as `todo`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Description of feature."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* Words in UPPER_CASE are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.1 Help `help`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Shows the available commands, and their respective formats"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.2 Adding a \u0027todo\u0027 task: `todo`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Adds a \u0027todo\u0027 task to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `todo TASK` \u003cbr/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example:  `todo homework`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.3 Adding an \u0027event\u0027: `event`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Adds an \u0027event\u0027 to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `event TASK /at TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example: `event project meeting /at 2020-06-30`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.4 Adding a \u0027deadline\u0027: `deadline`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Adds a \u0027deadline\u0027 to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `deadline TASK /by TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example: `deadline submit homework /by 2020-06-30`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.5 List all tasks: `list`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Shows a list of tasks in the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.6 Finding tasks by keywords: `find`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "To find tasks using keywords.\u003cbr/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `find KEYWORD` \u003cbr/\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example: `find book`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.7 Deleting a task: `delete`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Deletes the specified task from the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `delete INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example: `delete 3`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.8 Marking a task as done: `done`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Marks the specified task from the task list as done. \u003cbr/\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `done INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Example: `done 2` \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.9 Saving the data"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Changes made to the task list will be automatically be saved to a txt file named `duke.txt`\u003cbr/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "### 3.10 Exiting the program: `bye`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Exits the program. \u003cbr/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `help` \u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `todo TASK` \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `todo homework`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `event TASK /at EVENT_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `event project meeting /at 2020-06-30`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `deadline TASK /by DUE_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `deadline submit homework /by 2020-06-30`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `find KEYWORD` \u003cbr/\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `find book`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `delete INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `delete 3`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `done INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  e.g. `done 2`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "* `bye`"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 89,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Duke/Command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Exception;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.Ui.emptyDescriptionErr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.Ui.notValidNumberErr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Adds a task to the TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param line input by user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public AddTaskCommand (String line, TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String[] input \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        switch (input[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                line \u003d line.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "               TaskList.addTodo(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                emptyDescriptionErr(\"todo\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                notValidNumberErr();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                line \u003d line.substring(9);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                TaskList.addDeadline(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                emptyDescriptionErr(\"deadline\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                notValidNumberErr();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                line \u003d line.substring(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                TaskList.addEvent(line);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                emptyDescriptionErr(\"event\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                notValidNumberErr();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            new Exception(\"not valid\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Ui.itemAddedMessage(tasks.getTask(tasks.getSize() -1), tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 70
    }
  },
  {
    "path": "src/main/java/Duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command to be executed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 10
    }
  },
  {
    "path": "src/main/java/Duke/Command/CompleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which marks a task as done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class CompleteCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param list Current TaskList."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param s To mark s as done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public CompleteCommand(String s, TaskList list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        list.isCompleted(s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 17
    }
  },
  {
    "path": "src/main/java/Duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which deletes a task from the TaskList."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Deletes a task from the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param list Current TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param s To delete s from list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public DeleteCommand(String s, TaskList list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        list.deleteTask(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 18
    }
  },
  {
    "path": "src/main/java/Duke/Command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which exits the program."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class ExitCommand extends Command { public ExitCommand(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    Ui.printExitMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 16
    }
  },
  {
    "path": "src/main/java/Duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which finds tasks based on the keyword input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class FindCommand extends Command  {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private String key;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Finds tasks with the corresponding keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param command input by user to find the keyword"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public FindCommand(String command)  {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.key \u003d command.substring(5);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d TaskList.find(key);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Ui.printFindList(tasks,key);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 31
    }
  },
  {
    "path": "src/main/java/Duke/Command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which lists out the available commands for the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public HelpCommand(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Ui.listAllCommands();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 11
    }
  },
  {
    "path": "src/main/java/Duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents a command which lists the current TaskList to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the entire list of tasks to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param list Current TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public ListCommand(TaskList list){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "       Ui.printList(list);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 18
    }
  },
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.SYMBOL \u003d \"[D]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.setDate(LocalDate.parse(by));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the Symbol of the deadline: [D]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Symbol of deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String getSYMBOL() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns a string format of the deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + \" | \" + (this.isDone ? \"1 | \" : \"0 | \") + this.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns a string format of searching a deadline."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format for searching deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toFindString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the deadline in the format:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * [D][status] description (by: deadline)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.print(\"  \" + SYMBOL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.print(this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 57
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.zip.DataFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Runs Duke instance."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        new Duke(\"duke.txt\").run(\"duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Instantiates a Duke instance."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param filePath is the File path of the file which the data is to be saved into."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        list \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Runs the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void run(String filePath) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                Command c \u003d Parser.runCommand(list);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                Ui.printDateTimeErr();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 49
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.SYMBOL \u003d \"[E]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.setDate(LocalDate.parse(at));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the symbol for event: [E]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Symbol of event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String getSYMBOL() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the string format of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + \" | \" + (this.isDone ? \"1 | \" : \"0 | \") + this.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the string format for finding an event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of finding an event."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toFindString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the event in the format:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * [E][status] description (at: date)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.print(\"  \" + SYMBOL);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.print(this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 57
    }
  },
  {
    "path": "src/main/java/Duke/Exception.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Exception (String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"not valid\":"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Please input a valid command\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"empty list\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but there is no tasks in list\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 14
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import Duke.Command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Represents a parser to parse command inputs by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static Command runCommand(TaskList list) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String[]splitInput \u003d  userInput.split(\" \",2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        switch(splitInput[0]) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case\"bye\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "           return new ListCommand(list);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case\"done\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return new CompleteCommand(userInput, list);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return new DeleteCommand(userInput, list);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return new FindCommand(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "           return new AddTaskCommand(userInput, list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 38
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.TaskList.addEvent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.TaskList.addDeadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.TaskList.addTodo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import static Duke.Ui.printFileError;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Storage(String input) throws IOException{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        filePath \u003d input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "          try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "         } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              printFileError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "          }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Loads data from the file \"duke.txt\"."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Creates a new file if the file does not exist."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public  void createFile()  {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "          try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              if (!file.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                  file.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                  System.out.println(\"File already exists.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "              Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                String[] taskDescription \u003d s.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                switch (taskDescription[0]) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                case \"[T]\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    addTodo(taskDescription[2]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                case \"[D]\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    addDeadline(taskDescription[2] + \" /by \" + taskDescription[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                case \"[E]\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    addEvent(taskDescription[2] + \" /at \" + taskDescription[3]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                s.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            printFileError();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * writes data into file \"duke.txt\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param tasks ArrayList of Task objects."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e tasks)  {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                String fileInput \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                fw.write(System.lineSeparator() + fileInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            printFileError();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * adds new data into file \"duke.txt\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param input add different tasks to file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void appendToFile(Task input) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String fileInput \u003d input.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        fw.write(System.lineSeparator() + fileInput);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 98
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    protected String SYMBOL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns a tick or cross depending on whether a task is marked done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Tick or Cross"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the date associated with the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Either the deadline of the date of occurrence of task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Sets the date of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public abstract String getSYMBOL();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toFindString(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(this.getStatusIcon() + \" \" + this.description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 69
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents the TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public TaskList(Storage inStorage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        storage \u003d inStorage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Size of task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the task based on the index."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param index Index of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return Task with the corresponding index."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Task getTask(Integer index) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the entire task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.print(tasks.indexOf(task) + 1 + \".\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            task.printTask();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param line task to be deleted from list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void deleteTask(String line){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        int size \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Ui.printLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            size \u003d Integer.parseInt(line.substring(7));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.emptyDescriptionErr(\"delete command\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.notValidNumberErr();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Task task \u003d tasks.get(size - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"I\u0027ll delete this:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        task.printTask();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param command task to be marked as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void isCompleted(String command) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        command \u003d command.replace(\"done\", \" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        command \u003d command.strip(); //removes white space"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            index \u003d Integer.parseInt(command);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.notValidNumberErr();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            task.isDone \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.print(index + \".\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            task.printTask();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            Ui.notValidNumberErr();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Adds a todo task to the TaskList."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param line User command input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void addTodo(String line) throws IOException{"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Todo newTodo \u003d new Todo(line);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.add(newTodo);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Storage.appendToFile(newTodo);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Adds a deadline task to the TaskList."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param line User command input."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void addDeadline(String line) throws IOException{"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String[] description \u003d line.split(\" /by \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description[0], description[1]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.add(newDeadline);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Storage.appendToFile(newDeadline);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Adds an event task to the TaskList."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param line User command input."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void addEvent(String line) throws IOException{"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        String[] description \u003d line.split(\" /at \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Event newEvent \u003d new Event(description[0], description[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.add(newEvent);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        Storage.appendToFile(newEvent);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static ArrayList\u003cTask\u003e find(String line) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                .filter(t -\u003e t.description.toLowerCase().contains(line))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns a list of tasks which has deadlines on a specific date or"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * events which occur on that specific date."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Filters the task list by the date."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param date Date to be filtered by."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return List of tasks which are filtered by the date."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static ArrayList\u003cTask\u003e filterByDate(LocalDate date) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "      return (ArrayList\u003cTask\u003e)tasks.stream()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                .filter((t) -\u003e !(t instanceof Todo))"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                .filter((t) -\u003e t.getDate().equals(date))"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 166
    }
  },
  {
    "path": "src/main/java/Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        this.SYMBOL \u003d \"[T]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the todo\u0027s symbol: [T]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return symbol of Todo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String getSYMBOL() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the string format of the Todo."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of Todo."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + \" | \" + (this.isDone ? \"1 | \" : \"0 | \") + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Returns the string format for searching a Todo."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @return String format of searching a Todo."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public String toFindString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        return SYMBOL + getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the Todo in the format:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * [T][status] description"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.print(\"  \" + SYMBOL);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        super.printTask();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 51
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " * Represents interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    private static int NUMBER_DASHES \u003d 50;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the logo at the start of the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printLogo() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println( \"    ____   ____ \" + System.lineSeparator()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"   |  __| |  _ \\\\ \" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"   | |__  | | | |    \" + System.lineSeparator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"   |  __| | | | |    \" + System.lineSeparator()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"   | |__  | |_| |  \" + System.lineSeparator()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "                + \"   |____| |____/  \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the welcome message at the start of the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    Hi! I am easy\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the exit message before the program exits."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printLine(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println( \"   \" + \"_\".repeat(NUMBER_DASHES));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the list of command and their respective formats"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void listAllCommands(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    Hi there! Here are all the available commands and their respective formats:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To add a deadline: \\\"deadline {Name of task} /by {time} \\\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To add an event: \\\"event {Name of task} /at {time} \\\" \\\");\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To add an item in todo: \\\"todo {Name of task}\\\" \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To list out all tasks that you have entered: \\\"list\\\"\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To mark a task as completed: \\\"done {index of task in list}\\\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    To delete a task: \\\"delete {index of task in list}\\\"\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the list of tasks and indicates whether they are done."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            new Exception(\"empty list\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"    Here are the current tasks in your list:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.print();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints the list of tasks that contain the keyword."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param Key To find the keyword"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printFindList(ArrayList\u003cTask\u003e tasks, String Key) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.println(\" No matching tasks in your list (search: \" + Key + \")\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list (search: \" + Key + \"):\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            System.out.println((i + 1) + \".\" + tasks.get(i).toFindString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints success message when the task is added successfully."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * @param tasks Current TaskList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void itemAddedMessage(Task task, TaskList tasks){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        tasks.getTask(tasks.getSize()-1).printTask();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints error message when there is something wrong with the format of the date entered"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printDateTimeErr() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Oops! Please enter your date in the yyyy-mm-dd format\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints error message when there is something wrong with \"duke.txt\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void printFileError() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\" Oops! Something went wrong with duke.txt\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints error message when the description is not specified."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void emptyDescriptionErr(String line){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"OOPS!!! The description of a \" + line + \" cannot be empty☹ Please try again!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     * Prints error message when user did not input the index number"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    public static void notValidNumberErr(){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "        System.out.println(\"Oh no! Please enter a valid task number :(\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 143
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Varsha3006"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "Varsha3006": 2
    }
  }
]
