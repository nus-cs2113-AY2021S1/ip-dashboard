[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        return \"  [D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcursor"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcursor": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    // constant for number of maximum tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static final int MAXIMUM_TASKS \u003d 100;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        Task[] taskList \u003d new Task[MAXIMUM_TASKS];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        int taskCount \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            // take in user input from command line"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // if command \"bye\" is entered, stop asking for commands and exit"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // prints the task list if command \"list\" is given"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                printTaskList(taskList, taskCount);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            } else if (userInput.contains(\"done\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // if input contains \"done\", find the corresponding task and update its status in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int donePosition \u003d userInput.indexOf(\"done\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int doneTaskIndex \u003d Integer.parseInt(userInput.substring(donePosition + 5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                if (doneTaskIndex \u003e taskCount) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                    // if task indicated exceeds current task list, indicate an error"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                    printInvalidTaskDoneMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                Task doneTask \u003d taskList[doneTaskIndex - 1];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                doneTask.markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                printTaskCompletedMessage(doneTask);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            } else if (userInput.contains(\"todo\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // adds input as a \"Todo\" task to the task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int todoPosition \u003d userInput.indexOf(\"todo\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                String todoTask \u003d userInput.substring(todoPosition + 5);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                Task newTaskToAdd \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskList[taskCount] \u003d newTaskToAdd;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                printTaskAddedMessage(taskCount, newTaskToAdd);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            } else if (userInput.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // adds input as a \"Deadline\" task to the task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int deadlinePosition \u003d userInput.indexOf(\"deadline\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int byPosition \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                String deadlineTask \u003d userInput.substring(deadlinePosition + 9, byPosition);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                String deadline \u003d userInput.substring(byPosition + 4);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                Task newTaskToAdd \u003d new Deadline(deadlineTask, deadline);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskList[taskCount] \u003d newTaskToAdd;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                printTaskAddedMessage(taskCount, newTaskToAdd);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            } else if (userInput.contains(\"event\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                // adds input as an \"Event\" task to the task list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int eventPosition \u003d userInput.indexOf(\"event\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                int atPosition \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                String eventTask \u003d userInput.substring(eventPosition + 6, atPosition);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                String eventDate \u003d userInput.substring(atPosition + 4);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                Task newTaskToAdd \u003d new Event(eventTask, eventDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskList[taskCount] \u003d newTaskToAdd;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                taskCount++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcursor"
        },
        "content": "                printTaskAddedMessage(taskCount, newTaskToAdd);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        printGoodbyeMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"Botty McBotface, at your service.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"Your wish is my command.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printTaskList(Task[] taskList, int taskCount) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.printf(\"Here is your list of %s:%n\", (taskCount \u003d\u003d 1) ? \"task\":\"tasks\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            System.out.print((i+1) + \".\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcursor"
        },
        "content": "            System.out.println(taskList[i]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printInvalidTaskDoneMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"That task is not on the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printTaskCompletedMessage(Task doneTask) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"I have noted the completion of this task: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.printf(\"  [%s] %s%n\", doneTask.getStatusIcon(), doneTask.description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printTaskAddedMessage(int taskCount, Task newTaskToAdd) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"I have added the following to your list of tasks:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(newTaskToAdd);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.printf(\"You now have %d %s in the list.%n\", taskCount, (taskCount \u003d\u003d 1) ? \"task\":\"tasks\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public static void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"Very well. Goodbye.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcursor": 119,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        return \"  [E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcursor"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcursor": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        String message \u003d (String.format(\"[%s] %s\", getStatusIcon(), description));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcursor"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcursor": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": "        return \"  [T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcursor": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcursor"
        },
        "content": "todo everything"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcursor"
        },
        "content": "deadline submit increments /by tonight"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcursor"
        },
        "content": "event party /at everyday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcursor"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcursor"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcursor"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcursor"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcursor"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcursor"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcursor"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcursor"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "marcursor": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcursor"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "marcursor": 1,
      "-": 37
    }
  }
]
