[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.error.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    static final int TASK_COUNT \u003d 100;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        Task taskList[] \u003d new Task[TASK_COUNT];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        // Echo loops until \"bye\" is inputted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            Scanner echo \u003d new Scanner(System.in); // Scan user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            input \u003d echo.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            // Exit program if \"bye\" is inputted"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    throw new IllegalInputException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                } if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    System.out.println(\"Goodbye. See you soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    printList(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    markAsDone(input, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    count \u003d addTask(count, input, taskList); // Add input as new task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } catch (IllegalInputException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(\"Input cannot be empty!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private static int addTask(int count, String input, Task[] taskList) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                int slashLocation \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList[count] \u003d new Deadline(input.substring(input.indexOf(\"n\") + 3, slashLocation), input.substring(slashLocation + 1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                int slashLocation \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList[count] \u003d new Event(input.substring(input.indexOf(\"t\") + 2, slashLocation), input.substring(slashLocation + 1));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList[count] \u003d new Todo(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"I\u0027ve added:\" + System.lineSeparator() + \"  \" + taskList[count]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (count \u003e 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(\"Now you have \" + count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(\"Now you have \" + count + \" task in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Please put a slash in between the description and the date.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private static void markAsDone(String input, Task[] taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        // The number of the task that is done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            int doneTask \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            taskList[doneTask].markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + \"  \" + taskList[doneTask]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"You must enter the number of the task you want to mark as done.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private static void printList(Task[] taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        int listCount \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        for (Task item: taskList){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (item \u003d\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                if (listCount \u003d\u003d 1) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    System.out.println(\"The list is empty.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(listCount + \".\" + item);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            listCount++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Hi! My name is Duke!\\n\" + \"How can I help you?\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 102,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/error/IllegalInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class IllegalInputException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 3
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "boo"
      }
    ],
    "authorContributionMap": {
      "madbeez": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d C:\\Users\\Brendan\\Documents\\cs2113t\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "java -classpath C:\\Users\\Brendan\\Documents\\cs2113t\\ip\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "madbeez": 2,
      "-": 19
    }
  }
]
