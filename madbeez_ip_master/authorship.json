[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Duke is an **app for scheduling and keeping track of various tasks, using a Command Line Interface** (CLI). "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Adding a Todo task: `todo`](#adding-a-todo-task-todo)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Adding a Deadline task: `deadline`](#adding-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Adding an Event task: `event`](#adding-an-event-task-event)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Listing all tasks: `list`](#listing-all-tasks-list)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Marking a task as done: `done`](#marking-a-task-as-done-done)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Deleting a task: `delete`](#deleting-a-task-delete)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Finding a task: `find`](#finding-a-task-find)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Exiting the program: `bye`](#exiting-the-program-bye)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    * [Saving the list](#saving-the-list)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "2. Download the latest ip.jar."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "4. Using the terminal, navigate to the location of the .jar file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "5. Type \"java -jar ip.jar\" into the terminal and press enter."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "6. If you have followed the above steps correctly, you should see a welcome message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Adding a Todo task: `todo`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Adds a new Todo task to the task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`todo read textbook`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "I\u0027ve added:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "  [T][✘] read textbook"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Adding a Deadline task: `deadline`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Adds a new Deadline task to the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `deadline TASK_DESCRIPTION /yyyy-MM-dd`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`deadline CS1010 assignment /2020-12-12`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madbeez"
        },
        "content": "I\u0027ve added:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madbeez"
        },
        "content": "  [D][✘] CS1010 assignment (by:Dec 12 2020)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Adding an Event task: `event`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Adds a new Event task to the task list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `event TASK_DESCRIPTION /yyyy-MM-dd`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`event Watch movie /2020-12-12`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madbeez"
        },
        "content": "I\u0027ve added:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madbeez"
        },
        "content": "  [E][✘] Watch movie (at:Dec 12 2020)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Now you have 7 tasks in the list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Listing all tasks: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Shows a list of all tasks."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madbeez"
        },
        "content": "1.[T][✘] read textbook"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madbeez"
        },
        "content": "2.[D][✘] CS1010 assignment (by:Dec 12 2020)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madbeez"
        },
        "content": "3.[E][✘] Watch movie (at:Dec 12 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `done TASK_INDEX`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "madbeez"
        },
        "content": "  [D][✓] CS1010 assignment (by:Dec 12 2020)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Deleting a task: `delete`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `delete TASK_INDEX`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`delete 5`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Understood. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "madbeez"
        },
        "content": "  [D][✘] finish homework (by:Nov 11 2021)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Now you have 6 tasks in the list."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Finding a task: `find`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Finds task which description contains any of the given keywords."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "madbeez"
        },
        "content": "`find assignment`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Here are the matching tasks for your search. "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "madbeez"
        },
        "content": "1.[D][✘] CS1010 assignment (by:Dec 12 2020)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Exiting the program: `bye`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Expected output:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "madbeez"
        },
        "content": "Goodbye! See you soon!"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "madbeez"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "madbeez"
        },
        "content": "### Saving the list:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "madbeez"
        },
        "content": "The list of tasks is automatically saved in the hard disk after any changes are made."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "madbeez"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "madbeez"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**todo**|`todo TASK_DESCRIPTION` e.g., `todo study for exams`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**deadline**|`deadline TASK_DESCRIPTION /yyyy-MM-dd` e.g., `deadline CS1010 assignment /2020-12-06`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**event**|`event TASK_DESCRIPTION /yyyy-MM-dd`\u003cbr\u003ee.g., `event Birthday party /2020-09-11`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**done**|`done TASK_INDEX` e.g., `done 5`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**delete**|`delete TASK_INDEX` e.g., `delete 2`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**find**|`find KEYWORD`e.g., `find test`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "madbeez"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "madbeez": 150,
      "-": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            ui.printLoadSuccess();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                ui.printLine(); // show the divider line"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                Storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                ui.printError(e.getErrorMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 47,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.error.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Parses the input entered by the user and returns the command corresponding to the input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @param fullCommand The input entered by the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @return the relevant command based on the input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        if (fullCommand.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            throw new DukeException(\"Input cannot be empty!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else if (fullCommand.contains(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else if (fullCommand.contains(\"delete\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else if (fullCommand.contains(\"todo\") | fullCommand.contains(\"deadline\") | fullCommand.contains(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else if (fullCommand.contains(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return new FindCommand((fullCommand));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            throw new DukeException(\"Please enter a valid command!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 33
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public static final String DEFAULT_FILEPATH \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        if (filePath.isEmpty()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.filePath \u003d DEFAULT_FILEPATH;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        if (!file.exists()){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Loads a list of tasks from the chosen filepath"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        File data \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        Scanner text \u003d new Scanner(data);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        while (text.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            String input \u003d text.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            Task newTask \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (input.charAt(1) \u003d\u003d \u0027T\u0027){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                newTask \u003d new Todo(input.substring(input.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                String description \u003d input.substring(input.indexOf(\" \") + 1, input.indexOf(\"(\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(input.substring(input.indexOf(\":\") + 1, input.indexOf(\")\")), DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                String parsedDate \u003d date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                if (input.charAt(1) \u003d\u003d \u0027D\u0027){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    newTask \u003d new Deadline(description, parsedDate);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                } else if (input.charAt(1) \u003d\u003d \u0027E\u0027){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    newTask \u003d new Event(description, parsedDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            taskList.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (input.charAt(4) \u003d\u003d \u0027\\u2713\u0027){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                newTask.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Saves the current list of tasks to the chosen filepath"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @param taskList The list of tasks to be saved"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            FileWriter save \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            for (Task item : taskList){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                save.write(item.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                save.flush();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            save.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 93
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " *Stores the task list and contains operations on the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Returns a task based on the provided index"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @param index The index of the desired task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @return the task with the corresponding index"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 47
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void printWelcome(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Hi! My name is Duke!\\n\" + \"How can I help you?\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public static void printGoodbye(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Goodbye! See you soon!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void printLine(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Prints the list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @param taskList The list meant to be printed"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"The list is empty.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            for (Task item : taskList.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(index++ + \".\" + item);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Reads the input from the user and returns it as a string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        Scanner echo \u003d new Scanner(System.in); // Scan user input"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        String input \u003d echo.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void printLoadSuccess(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Save file loaded successfully.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * Prints the relevant error message for the encountered error"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     * @param errorMessage The error message"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madbeez"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void printError(String errorMessage){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        System.out.println(\"Error loading from filepath.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 64
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This command adds the relevant tasks to the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public AddCommand(String fullCommand){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.input \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                int slashLocation \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList.addTask(new Deadline(input.substring(input.indexOf(\"n\") + 3, slashLocation), input.substring(slashLocation + 1)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                int slashLocation \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList.addTask(new Event(input.substring(input.indexOf(\"t\") + 2, slashLocation), input.substring(slashLocation + 1)));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                taskList.addTask(new Todo(input.substring(input.indexOf(\" \") + 1)));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"I\u0027ve added:\" + System.lineSeparator() + \"  \" + taskList.getTask(taskList.getSize()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (taskList.getSize() \u003e 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.getSize() + \" task in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Please enter your input in the correct format.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 46
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void setExit(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This command deletes the selected task from the task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public DeleteCommand(String fullCommand){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.input \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            int chosenTask \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Understood. I\u0027ve removed this task:\" + System.lineSeparator() + \"  \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                    + taskList.getTask(chosenTask));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            taskList.removeTask(chosenTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Now you have \" + (taskList.getSize()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"You must enter the number of the task you want to delete.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This commands marks the selected task as done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public DoneCommand(String fullCommand){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.input \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            int doneTask \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            taskList.getTask(doneTask).markAsDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + \"  \" + taskList.getTask(doneTask));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"You must enter the number of the task you want to mark as done.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This command prints a goodbye message and exits the program"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        Ui.printGoodbye();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        setExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 17
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This command prints a list of tasks matching the keyword provided by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public FindCommand(String fullCommand){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.input \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        String searchTerm \u003d input.substring(input.indexOf(\"d\") + 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        for (Task item: tasklist.getTasks()){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            if (item.getDescription().contains(searchTerm)){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                matches.add(item);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        if (matches.isEmpty()){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"No matches found.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(\"Here are the matching tasks for your search.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            for (Task item : matches){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "madbeez"
        },
        "content": "                System.out.println(++index + \". \" + item);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This command prints the entire list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 15
    }
  },
  {
    "path": "src/main/java/duke/error/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This exception is for non-standard exceptions related to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public DukeException(String errorMessage){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 14
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This represents a deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * Contains both description and the deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.date \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by:\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by:Jan 1 2099)\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This represents an event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * Contains both description and the event\u0027s date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            this.date \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at:\" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at:Jan 1 2099)\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This represents a basic task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 30
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madbeez"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madbeez"
        },
        "content": " * This represents a Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madbeez"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madbeez"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madbeez"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madbeez"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madbeez"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madbeez": 14
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "[D][✘] bear (by:Dec 12 2020)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madbeez"
        },
        "content": "[E][✘] e (at:Jan 1 2020)"
      }
    ],
    "authorContributionMap": {
      "madbeez": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madbeez"
        },
        "content": "boo"
      }
    ],
    "authorContributionMap": {
      "madbeez": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madbeez"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d C:\\Users\\Brendan\\Documents\\cs2113t\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madbeez"
        },
        "content": "java -classpath C:\\Users\\Brendan\\Documents\\cs2113t\\ip\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "madbeez": 2,
      "-": 19
    }
  }
]
