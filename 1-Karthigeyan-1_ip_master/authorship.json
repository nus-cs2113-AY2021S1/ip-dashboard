[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 1.  Adding a todo task: `Todo`  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Todo task  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `todo \u003cdescription\u003e`  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `todo homework`  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[T][✘] homework"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 2. Adding a event task: `Event`  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Event task  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `event \u003cdescription\u003e /at \u003cdate time\u003e`  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Supported date time formats: `dd/MM/yyyy HHmm` `MMM dd yyy HH:mm`  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `event party /at 31/12/2020 2300`  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[E][✘] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 3. Adding a Deadline task: `Deadline`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Deadline task  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `deadline \u003cdescription\u003e /at \u003cdate time\u003e`  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Supported date time formats: `dd/MM/yyyy HHmm` `MMM dd yyy HH:mm`  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `deadline assignment /by 03/03/2020 2200`  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 4. Listing current tasks: `List`  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Shows a list of tasks in Duke  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `list`  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✘] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 5. Complete task: `Done`  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Marks a task as completed  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `done \u003cnumber\u003e`  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `done 2`  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 6. Find task: `Find`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Finds a list of tasks matching the keyword  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `find \u003ckeyword\u003e`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `find home`  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [T][✘] clean home"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 7. Remove task from list: `Delete`  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Deletes a task from list  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `delete \u003cnumber\u003e`  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "List before deletion  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "4. [T][✘] clean home"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "`delete 4`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "  [T][✘] clean home"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "List after deletion  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 8. Exit the Duke program: `bye`  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Safely exits the Duke program  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `bye`  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Bye. Hope to see you again soon!  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 9. Saving data  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Tasks data is saved in the hard disk automatically.  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This includes commands that change or edit the data.  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 10. Loading data  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Tasks data is stored in `data/tasks.txt` file.   "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "If no such file or directory is found, a new `data/tasks.txt` is created.  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Action** | **Format** "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "--- | --- "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Todo** | `todo \u003cdescription\u003e`  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Event** | `event \u003cdescription\u003e /at \u003cdate time\u003e`  "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Deadline** | `deadline \u003cdescription\u003e /at \u003cdate time\u003e`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**List** | `list`  "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Done** | `done \u003cnumber\u003e` "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Find** | `find \u003ckeyword\u003e`  "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Delete** | `delete \u003cnumber\u003e` "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "**Exit** | `bye`  "
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "1-Karthigeyan-1": 112
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 1.  Adding a Todo task: `Todo`  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Todo task  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `todo \u003cdescription\u003e`  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `todo homework`  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[T][✘] homework"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 2. Adding an Event task: `Event`  "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Event task  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `event \u003cdescription\u003e /at \u003cdate time\u003e`  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Supported date time formats: `dd/MM/yyyy HHmm` `MMM dd yyy HH:mm`  "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `event party /at 31/12/2020 2300` or `Dec 31 2020 23:00`    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[E][✘] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 3. Adding a Deadline task: `Deadline`  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Adds a Deadline task  "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `deadline \u003cdescription\u003e /at \u003cdate time\u003e`  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Supported date time formats: `dd/MM/yyyy HHmm` `MMM dd yyy HH:mm`  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `deadline assignment /by 03/03/2020 2200` or `Mar 03 2020 22:00`    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 4. Listing current tasks: `List`  "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Shows a list of tasks in Duke  "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `list`  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `list`  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✘] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 5. Completing task: `Done`  "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Marks a task as completed  "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `done \u003cnumber\u003e`  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `done 2`  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "[E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 6. Finding task: `Find`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Finds a list of tasks matching the keyword  "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `find \u003ckeyword\u003e`  "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `find home`  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [T][✘] clean home"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 7. Removing task from list: `Delete`  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Deletes a task from list  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `delete \u003cnumber\u003e`  "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example:  "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "List before deletion  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "4. [T][✘] clean home"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "`delete 4`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "  [T][✘] clean home"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "`List` after deletion  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "1. [T][✘] homework"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "2. [E][✓] party (at: Dec 31 2020 23:00)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "3. [D][✘] assignment (by: Mar 03 2020 22:00)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 8. Exiting the Duke program: `bye`  "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Safely exits the Duke program  "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Format: `bye`  "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Example: `bye`  "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Bye. Hope to see you again soon!  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 9. Saving data  "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Tasks data is saved in the hard disk automatically.  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "This includes commands that change or edit the data.  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "### 10. Loading data  "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "Tasks data is stored in `data/tasks.txt` file.   "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "If no such file or directory is found, a new `data/tasks.txt` is created.  "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "## Command Summary  "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "|**Action** | **Format** |"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "|--------|--------|"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Todo** | `todo \u003cdescription\u003e` | "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Event** | `event \u003cdescription\u003e /at \u003cdate time\u003e` | "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Deadline** | `deadline \u003cdescription\u003e /at \u003cdate time\u003e` |"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **List** | `list` |"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Done** | `done \u003cnumber\u003e` |"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Find** | `find \u003ckeyword\u003e` |"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Delete** | `delete \u003cnumber\u003e` |"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "| **Exit** | `bye` |"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 13,
      "1-Karthigeyan-1": 120
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.dataStorage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the main program of Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Creates instances of classes needed for the program to run."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param filePath filepath of storage file in hard drive"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storage.loadFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Runs an instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prints greeting and runs the user inputs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String userInput \u003d Duke.getUi().readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Parser.filterInput(userInput);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static Storage getStorage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static Ui getUi() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static TaskList getTaskList() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "1-Karthigeyan-1": 55
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Handles error exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"empty list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String ILLEGAL_NUMBER \u003d \"illegal number\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String INVALID_TYPE \u003d \"invalid type\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String INVALID_DATETIME \u003d \"invalid DateTime\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String ARGUMENT_SIZE \u003d \"invalid number of arguments\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String INVALID_DESCRIPTION \u003d \"invalid description\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * prints out the appropriate error based on the state of error."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param error State of the error"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch(error) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"List is empty!!\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case ILLEGAL_NUMBER:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Please input a valid number\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case INVALID_TYPE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Invalid Task type!\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case INVALID_DATETIME:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Invalid Date or Time.\\n Please enter in the following format:\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    \"dd/MM/yyyy HHmm\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case ARGUMENT_SIZE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Check the number of arguments!\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case INVALID_DESCRIPTION:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Description should not be blank!\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Error Unknown\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 44
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Deals with interaction with the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Reads the user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Prints border around the text."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param displayText text to be displayed to the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printBorder(String displayText) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        System.out.print(line + displayText + line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * prints greeting message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(welcomeMessage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * prints exit message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(exitMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Tells the user that a number is to be expected."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param Argument the argument that causes the error"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printNumberFormatError(String Argument) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String invalidNumber \u003d Argument + \" is not a valid number!\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(invalidNumber);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Tells the user that a valid number in range is to be expected."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printIndexError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String invalidNumber \u003d \"Please enter a number in range!\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(invalidNumber);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Tells the user that the Object is empty"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void printNullError() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String nullErrorMessage \u003d \"Object is empty!\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(nullErrorMessage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 73
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the bye command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD\u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public ByeCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the bye command by exiting the program with error 0."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for bye command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the Command keyword that is used in the user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Command(String[] arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            execute(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the command by doing an action with respect to the commands in its subclass."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for commands"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            checkSize(arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Checks the size limit of arguments for every command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if number of arguments is not equal to intended number of arguments"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void checkSize(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (arguments.length !\u003d getLimit()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(DukeException.ARGUMENT_SIZE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Gets the limit of arguments for specific command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return the inteded argument a command is supposed to have"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public abstract int getLimit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the deadline command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DeadlineCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the deadline command by adding Deadlines to the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for deadline command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Deadline.addDeadline(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the delete command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DeleteCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the deadline command by deleting specific task in the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for delete command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().deleteTask(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the done command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DoneCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the done command by marking the specific task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for done command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().markTaskinList(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //The DukeException class prints out the error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printNumberFormatError(arguments[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the event command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public EventCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the event command by adding the event task to the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for event command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Event.addEvent(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the find command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public FindCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the find command by showing the list of matching tasks in program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for find command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().lookupTask(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the list command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public ListCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the list command by showing the list of tasks in program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for list command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().showList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //The DukeException class prints out the error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the todo command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int MAX_LIMIT \u003d 2;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public TodoCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Executes the todo command by adding the todo task to the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param arguments parsed arguments for todo command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Todo.addTodo(arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error shown in DukeException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getLimit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return MAX_LIMIT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 37
    }
  },
  {
    "path": "src/main/java/duke/dataStorage/CompilableData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.dataStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Handles the data that is to be compiled into storage file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class CompilableData {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private Task item;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Stores the item details in this class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param item A task object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public CompilableData(Task item) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.item \u003d item;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.description \u003d item.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.taskType \u003d item.getTaskType();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.done \u003d item.getStatusIcon();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return data of the task in the form of string"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if the type of task is invalid"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String CompileData() throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String formattedData \u003d String.format(\"%s , %s , %s\", taskType, done, description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.TODO_TYPE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            formattedData +\u003d \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.EVENT_TYPE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String date \u003d ((Event) item).getDate();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            formattedData \u003d String.format(\"%s , %s\\n\", formattedData, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.DEADLINE_TYPE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String by \u003d ((Deadline) item).getDate();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            formattedData \u003d String.format(\"%s , %s\\n\", formattedData, by);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(DukeException.INVALID_TYPE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return formattedData;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 54
    }
  },
  {
    "path": "src/main/java/duke/dataStorage/DataType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.dataStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the data types that exist in the storage file"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public abstract class DataType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String TODO_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String EVENT_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String DEADLINE_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 11
    }
  },
  {
    "path": "src/main/java/duke/dataStorage/ExtractableData.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.dataStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Handles data that is to be extracted from the storage file into the program"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class ExtractableData {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String DIVIDER \u003d \" , \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final int DIVIDER_LIMIT \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private TaskList Tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String Data;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private Task item;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *Stores item in the class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param Data Information of a task in storage"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    ExtractableData(String Data) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.Tasks \u003d Duke.getTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.Data \u003d Data;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Extracts data from the compiled version and adds it to tasklist"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * in the program."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if type of task is invalid"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void ExtractData() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d Parser.parseArgument(Data, DIVIDER, DIVIDER_LIMIT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch (arguments[0]) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.TODO_TYPE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            item \u003d new Todo(arguments[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.EVENT_TYPE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            item \u003d new Event(arguments[2], arguments[3]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DataType.DEADLINE_TYPE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            item \u003d new Deadline(arguments[2], arguments[3]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(DukeException.INVALID_TYPE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (arguments[1].equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                item.completeTask();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printNullError();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Tasks.addTask(item, true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 65
    }
  },
  {
    "path": "src/main/java/duke/dataStorage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.dataStorage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Handles the file in hard drive that is needed for storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private File storageText;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Creates a reference to the file in the filepath"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param filePath path of storage file in hard drive"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.storageText \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Attempts to find file in the hard drive"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return reference to the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public File findFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (!storageText.exists()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            storageText \u003d createFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return storageText;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * creates a new file and a directory if file does not"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * exist in the directory or the directory does not exist"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return reference to the file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public File createFile() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (!storageText.getParentFile().exists()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                storageText.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            storageText.createNewFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Unable to create file...\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return storageText;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Attempts to load data from the storage file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * into the program"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void loadFile() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        File storage \u003d findFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Scanner storageData;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            storageData \u003d new Scanner(storage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            while (storageData.hasNext()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                String data \u003d storageData.nextLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                new ExtractableData(data).ExtractData();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Error has occurred! File not found!\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //DukeException has its own error message"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            System.out.println(\"Invalid number of Arguments\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Saves any task that has been added into the hard drive"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param item task item that had been added into the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void saveData(Task item) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            FileWriter appendWrite \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String data \u003d  new CompilableData(item).CompileData();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            appendWrite.write(data);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            appendWrite.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Unable to Save!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //DukeException has its own error message"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Overwrites the data in storage file with the data currently in the program"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void writeFile() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            FileWriter overWrite \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String data \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            for (int i \u003d 0; i \u003c Duke.getTaskList().getSize(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Task item \u003d Duke.getTaskList().getTask(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                data +\u003d new CompilableData(item).CompileData();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            overWrite.write(data);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            overWrite.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Unable to Save!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //DukeException has its own error message"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 123
    }
  },
  {
    "path": "src/main/java/duke/parse/DateTimeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Parses Date and Time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DateTimeParser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static String[] inputFormats \u003d {\"dd/MM/yyyy HHmm\", \"MMM dd yyy HH:mm\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Parses the date time format from String to DateTime type"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return date in date time format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException for invalid date and time"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (String Format : inputFormats) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                LocalDateTime date \u003d LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(Format));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                //Ignore to cycle through the formats"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        throw new DukeException(DukeException.INVALID_DATETIME);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * converts date from datetime type to String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param dateTime"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static String convertDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String date \u003d dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyy HH:mm\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 44
    }
  },
  {
    "path": "src/main/java/duke/parse/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.parse;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Parses the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Filters the user input bu sorting out the appropriate  command keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void filterInput(String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d parseArgument(userInput, \" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new ListCommand(arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new DoneCommand(arguments);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new TodoCommand(arguments);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new DeadlineCommand(arguments);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new EventCommand(arguments);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case ByeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new ByeCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            new FindCommand(arguments);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Invalid command. Please try again.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Splits the arguments in acoordance with the divider and limit used."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument argument that is to be parsed"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param divider string used to parse the arguments"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param limit number of times to parse the arguments"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return a list of parsed arguments"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static String[] parseArgument (String argument, String divider, int limit) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d argument.split(divider, limit);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the properties of deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Stores details of deadline in the instance"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param by date and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if blank arguments is given"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Deadline(String description, String by) throws DukeException{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d DateTimeParser.parseDateTime(by);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.printDescription() + \" (by: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * gets the date and time of object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return date and time of object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return DateTimeParser.convertDateTime(date);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Add deadline task to the tasklist by parsing the arguments"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument raw description of deadline"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addDeadline(String argument) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String[] arguments \u003d Parser.parseArgument(argument, \" /by \", 0);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Task deadlineObject \u003d new Deadline(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().addTask(deadlineObject, false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error printed in Duke exception"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Missing \\\"/by\\\" argument.\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.DateTimeParser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.parse.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the properties of event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected LocalDateTime date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Stores details of event in the instance."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param at date and time"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws IndexOutOfBoundsException if blank arguments is given"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d DateTimeParser.parseDateTime(at);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.printDescription() + \" (at: \" + getDate() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * gets the date and time of object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return date and time of object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return DateTimeParser.convertDateTime(date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Add event task to the tasklist by parsing the arguments."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument raw description of event"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addEvent(String argument) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String[] arguments \u003d Parser.parseArgument(argument, \" /at \", 0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Task eventObject \u003d new Event(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getTaskList().addTask(eventObject, false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //Error already printed out"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Missing \\\"/at\\\" argument.\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the properties of a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Stores details of task in the instance."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(DukeException.INVALID_DESCRIPTION);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Gets the status of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Changes the status of task to done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * gets description of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * returns details of task in a certain format."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return details of task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String output \u003d \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Gets the appropriate task type of each task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return the string used to represent the task type"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 68
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the list of tasks stored in the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private ArrayList\u003cTask\u003e Tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Creates new instacne of array list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * mark the specific task in list as completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument index number of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if number is invalid"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void markTaskinList(String argument) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if ((taskNumber \u003e this.getSize()) || (taskNumber \u003c\u003d 0)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(\"illegal number\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task taskItem \u003d this.getTask(taskNumber-1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        taskItem.completeTask();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.getStorage().writeFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.getUi().printBorder(\"Nice! I\u0027ve marked this task as done:\\n\" + taskItem.printDescription() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Shows the list of tasks in program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws DukeException if the list is empty"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void showList() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (Tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(\"empty list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String itemList \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int item \u003d 0 ; item \u003c this.getSize() ; item++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            itemList +\u003d (item + 1) + \". \"  +  Tasks.get(item).printDescription() + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.getUi().printBorder(\"Here are the tasks in your list:\\n\" + itemList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param item task item to be added"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param isReadOnly boolean to check if the task is to be saved in storage file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void addTask(Task item, boolean isReadOnly) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Tasks.add(item);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if(!isReadOnly) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getStorage().saveData(item);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(\"Got it. I\u0027ve added this task:\\n\" + item.printDescription() + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * delete task in that index."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument the index of task to be deleted"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void deleteTask(String argument) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String removalNotice \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Task deletedObject \u003d this.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getStorage().writeFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String remainingTask \u003d \"Now you have \" + this.getSize() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printBorder(removalNotice + \"  \" + deletedObject.printDescription() + \"\\n\" + remainingTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printNumberFormatError(argument);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.getUi().printIndexError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * get task by its index"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return task in that index"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return Tasks.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * gets size of tasklist"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @return size number"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return Tasks.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void lookupTask(String keyword) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        TaskList matchItems \u003d new TaskList();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (Task item : this.Tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String description \u003d item.getDescription();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                matchItems.addTask(item, true);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            matchItems.showList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            //The duke exception class prints out the error"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 124
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " * Represents the properties of todo task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Stores details of todo in the instance"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.printDescription();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * Add tpdo task to the tasklist by parsing the arguments."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @param argument raw description of event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     * @throws IndexOutOfBoundsException if argument is blank"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addTodo(String argument) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task item \u003d new Todo(argument);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.getTaskList().addTask(item, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "todo wash laundry"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "event meeting /at Sunday 3am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "deadline homework /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "1-Karthigeyan-1": 1
    }
  }
]
