[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void filterInput() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task[] storeTask \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            command \u003d in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            String[] arguments \u003d parseArgument(command, \" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Task.showList(Arrays.copyOf(storeTask, Task.taskCount));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Task.completeTask(storeTask, arguments[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Todo.addTodo(storeTask, arguments[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Deadline.addDeadline(storeTask, arguments[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    Event.addEvent(storeTask, arguments[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    //fall through"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    printInvalidCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Duke.printBorder(\"The description of \" + arguments[0] + \" cannot be empty\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "                Duke.printBorder(\"Please input a number for \" + arguments[0] + \"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static String[] parseArgument (String argument, String divider, int limit) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d argument.split(divider, limit);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.printBorder(\"Invalid command. Please try again.\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 63
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String ICON \u003d \"[D]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Deadline(String description, String by) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (by.isBlank()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return ICON + super.printDescription() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addDeadline(Task[] storeTask, String argument) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (argument.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d Command.parseArgument(argument, \"/by\", 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storeTask[Task.taskCount] \u003d new Deadline(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (arguments[1].isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task.addTask(storeTask[Task.taskCount]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Command.filterInput();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void printBorder(String displayText) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String line \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        System.out.print(line + displayText + line);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String greet \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(greet);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void printExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String exit \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        printBorder(exit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "1-Karthigeyan-1": 20
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String EMPTY_LIST \u003d \"empty list\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected static final String ILLEGAL_NUMBER \u003d \"illegal number\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        switch(error) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.printBorder(\"List is empty!!\\n\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        case ILLEGAL_NUMBER:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            Duke.printBorder(\"Please input a valid number\\n\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 15
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String ICON \u003d \"[E]\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Event(String description, String date) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (date.isBlank()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return ICON + super.printDescription() + \" (at:\" + date + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addEvent(Task[] storeTask, String argument) throws IndexOutOfBoundsException{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (argument.isBlank()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String[] arguments \u003d Command.parseArgument(argument, \"/at\", 0);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storeTask[Task.taskCount] \u003d new Event(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (arguments[1].isBlank()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task.addTask(storeTask[Task.taskCount]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 29
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public void isCompleted() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String output \u003d \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addTask(Task item) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task.taskCount++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.printBorder(\"Got it. I\u0027ve added this task:\\n\" + item.printDescription() + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void completeTask(Task[] storeTask,String argument) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(argument) ;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if ((taskNumber \u003e taskCount) || (taskNumber \u003c\u003d 0)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(\"illegal number\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task taskItem \u003d storeTask[taskNumber-1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        taskItem.isCompleted();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.printBorder(\"Nice! I\u0027ve marked this task as done:\\n\" + taskItem.printDescription() + \"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void showList(Task[] storeText) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new DukeException(\"empty list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        String itemList \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        for (int item \u003d 0 ; item \u003c taskCount ; item++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            itemList +\u003d Integer.toString(item+1) + \". \"  +  storeText[item].printDescription() + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Duke.printBorder(\"Here are the tasks in your list:\\n\" + itemList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 56
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    private static final String ICON \u003d \"[T]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        return ICON + super.printDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    public static void addTodo(Task[] storeTask, String argument) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        if (argument.isBlank()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "            throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        storeTask[Task.taskCount] \u003d new Todo(argument);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "        Task.addTask(storeTask[Task.taskCount]);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "todo wash laundry"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "event meeting /at Sunday 3am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "deadline homework /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "1-Karthigeyan-1": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "1-Karthigeyan-1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "1-Karthigeyan-1": 1
    }
  }
]
