[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.exception.DoNotHaveException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int MAX_TASK \u003d 100;                 // maximum amount of task input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int TODO_CMD_LEN \u003d 5;               // length of \"todo\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int DEADLINE_CMD_LEN \u003d 9;           // length of \"deadline\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int EVENT_CMD_LEN \u003d 6;              // length of \"event\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int REMOVE_CMD_LEN \u003d 7;             // length of \"remove\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int DONE_CMD_LEN \u003d 5;               // length of \"done\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        greetWords();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task[] tasks \u003d new Task[MAX_TASK];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        int countTask \u003d 0;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String words \u003d \" \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        while(!words.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            words \u003d in.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            words \u003d words.trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                countTask \u003d Commands(tasks, countTask, words);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }//end main"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // different commands user give"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static int Commands(Task[] tasks, int countTask, String words) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (words.equals(\"list\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            listTasks(tasks, countTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask \u003d addTodo(tasks, countTask, words);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask \u003d addDeadline(tasks, countTask, words);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask \u003d addEvent(tasks, countTask, words);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"remove\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask \u003d removeTask(tasks, countTask, words);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            doTask(tasks, words);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (!words.equals(\"bye\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return countTask;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // print the horizontal line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.print(\"     -\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for(int i\u003d0; i\u003c60; i++) System.out.print(\u0027-\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"-\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // greet word for duke.Duke"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void greetWords() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // method to list the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void listTasks(Task[] tasks,int countTask) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if(countTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     You have not added any task into your list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int taskIndex \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            for (int i \u003d 0; i \u003c countTask; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.print(\"\\n     \" + taskIndex + \".\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.println(tasks[i].toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                taskIndex++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // print the add task message"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void addTask(Task t, int count) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        count++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Now you have \" +  count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // method to add todo task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static int addTodo(Task[] tasks, int countTask, String words) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks[countTask] \u003d new Todo(words.substring(TODO_CMD_LEN));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            addTask(tasks[countTask], countTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask++;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return countTask;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // method to add deadline task"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static int addDeadline(Task[] tasks, int countTask, String words) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String[] detail \u003d words.split(\"/by\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            detail[0] \u003d detail[0].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            detail[1] \u003d detail[1].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks[countTask] \u003d new Deadline(detail[0].substring(DEADLINE_CMD_LEN),detail[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            addTask(tasks[countTask], countTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask++;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a task with deadline cannot be empty.\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return countTask;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // method to add event task"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static int addEvent(Task[] tasks, int countTask, String words) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String[] detail \u003d words.split(\"/at\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            detail[0] \u003d detail[0].trim();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            detail[1] \u003d detail[1].trim();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks[countTask] \u003d new Event(detail[0].substring(EVENT_CMD_LEN), detail[1]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            addTask(tasks[countTask], countTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            countTask++;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return countTask;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // remove the task the user don\u0027t want to keep"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static int removeTask(Task[] tasks, int countTask, String words) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String task \u003d words.substring(REMOVE_CMD_LEN);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int totalNum \u003d countTask;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            for (int i \u003d 0; i \u003c countTask; i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                String t \u003d tasks[i].description;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                if(t.equals(task)) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    System.out.println(\"     I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    System.out.println(\"       \" + tasks[i]);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    tasks[i] \u003d tasks[countTask -1];"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    tasks[countTask -1] \u003d null;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    countTask--;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    System.out.println(\"     Now you have \" + countTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            if (totalNum \u003d\u003d countTask) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                throw new DoNotHaveException();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, I don\u0027t know which task you want to remove.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (DoNotHaveException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     I can\u0027t find this task in your list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return countTask;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // do the task and mark it as done"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void doTask(Task[] tasks, String words) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String taskIndex \u003d words.substring(DONE_CMD_LEN);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int index \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            //mark as done"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            finishTask(tasks[index - 1]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, I don\u0027t know which task you have finished.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, there must a number after \\\"done\\\".\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    // print finish task message"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void finishTask(Task t) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.print(\"       \");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(t.toString());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 189,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/DoNotHaveException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class DoNotHaveException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 17
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \u0027[\u0027 + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 2,
      "-": 19
    }
  }
]
