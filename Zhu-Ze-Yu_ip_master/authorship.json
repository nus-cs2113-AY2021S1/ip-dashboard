[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Message in round brackets are explanations, no need to type in when using Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Use the # symbol to indicate number"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `todo xxxx(task_name)`"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `deadline xxxx(task_name) /by yyyy-mm-dd(date)`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `event xxxx(task_name] /at yyyy-mm-dd(date)`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `done #(task_index)`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `undone #(task_index)`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `delete #(task_index)`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `find keyword`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `clear`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `group`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `help`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `list`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `restore`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "1. `bye`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `todo` - Add Todo tasks into the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command adds Todo task into the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`todo xxxx(task_name)` "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Now you have # tasks in the list.`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `deadline` - Add Deadline tasks into the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command adds Deadline task into the list, "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "accept dates in a format such as yyyy-mm-dd format (e.g., 2020-10-15) "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "and print in a different format such as MMM dd yyyy e.g., (Oct 15 2020)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`deadline xxxx(task_name) /by yyyy-mm-dd(date)` "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[D][âœ˜] xxxx(task_name) (by: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Now you have # tasks in the list.`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `event` - Add Event tasks into the list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command adds Event task into the list, "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "accept dates in a format such as yyyy-mm-dd format (e.g., 2020-10-15) "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "and print in a different format such as MMM dd yyyy e.g., (Oct 15 2020)."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`event xxxx(task_name) /at yyyy-mm-dd(date)` "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Got it. I\u0027ve added this task:`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[E][âœ˜] xxxx(task_name) (at: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Now you have # tasks in the list.`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `done` - mark one task as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command marks the task at position `#(task_index)` as done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`done #(task_index)` "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Nice! I\u0027ve marked this task as done:`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[T][âœ“] xxxx(task_name)`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `undone` - mark one task as undone"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command marks the task at position `#(task_index)` as undone"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`undone #(task_index)` "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Noted! I\u0027ve marked this task as undone:`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `delete` - delete the task user want to remove"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command deletes the task at position `#(task_index)`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`delete #(task_index)` "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Noted. I\u0027ve removed this task:`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Now you have # tasks in the list.`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `find` - find the task with the keyword"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command finds tasks that contain `keyword`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`find keyword` "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Here are the matching tasks in your list:`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`1.[T][âœ˜] xxxx(task_name contains keyword)`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`2.[T][âœ˜] xxxx(task_name contains keyword)`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`... (omit part)`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `clear` - clear the taskslist"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command remove all tasks in the list"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`clear` "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Good job! You have finished all tasks in the list`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `group` - group tasks in the list"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command group all tasks in Todo-Deadline-Event order."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "In other words, tasks in the list will be rearranged, "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "and Todo tasks in the first part, "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Deadline tasks in the second part,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Event tasks in the last part."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`group` "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Got it. I have group tasks in the Todo-Deadline-Event order`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome after `group` and `list`:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`1.[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`2.[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`3.[D][âœ˜] xxxx(task_name) (by: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`4.[D][âœ˜] xxxx(task_name) (by: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`5.[E][âœ˜] xxxx(task_name) (at: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`6.[E][âœ˜] xxxx(task_name) (at: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `help` - print help list"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command prints the help list"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`help` "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Here is the Help List (words in round brackets are explanations no need to type)`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`1.  add command: you can add three types of tasks by following these format`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`i)   Todo task: todo xxxx(task description)`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`ii)  Deadline task: deadline xxxx(task description) /by yyyy-mm-dd`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`iii) Event task: event xxxx(task description) /at yyyy-mm-dd`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`... (omit part)`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`10. restore command: you can list all removed tasks in the backupList by following this format`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`e.g. restore`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `list` - list tasks in the list"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command list all tasks in the list"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`list` "
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Here are the tasks in your list:`"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`1.[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`2.[D][âœ˜] xxxx(task_name) (by: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`3.[E][âœ˜] xxxx(task_name) (at: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `restore` - list deleted tasks "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command list all tasks in the backupList which contains all deleted tasks,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "this command will not store any deleted tasks into list"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`restore` "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Here are all tasks you have removed:`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`1.[T][âœ˜] xxxx(task_name)`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`2.[D][âœ˜] xxxx(task_name) (by: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`3.[E][âœ˜] xxxx(task_name) (at: MMM dd yyyy(date))`"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "### `bye` - terminate the program"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "This command prints bye message and terminate the program"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`bye` "
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "`Bye. Hope to see you again soon!`"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 225,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.storage.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Duke program stores Todo Deadline and Event three types of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Add new tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Delete tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Do tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Find tasks with keyword"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * List tasks in the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Taskslist is used for storing tasks inside program e.g., \u003ccode\u003e[T][âœ“] a\u003c/code\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Textlist is used for storing tasks inside TXT file e.g., \u003ccode\u003eT - 1 - a\u003c/code\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-08-21"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method makes use of getFileContents to load tasks from the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and saving tasks in the file by using writeToFile method"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Run the whole program by using Commands method"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Ui.greetWords();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();      // store tasks the user is adding"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cString\u003e texts \u003d new ArrayList\u003c\u003e();    // store text format of each task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cTask\u003e backupList \u003d new ArrayList\u003c\u003e(); // store tasks removed by the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        File.getFileContents(File.FILE_PATHWAY,tasks, texts);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        // if the user say bye then exit become true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        while(!exit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String words \u003d in.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            words \u003d words.trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                exit \u003d Commands(tasks, texts, backupList, words);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                File.writeToFile(File.FILE_PATHWAY, texts);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.println(\"     â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.println(\"     Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }//end main"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method distinguishes different kinds of command user typed in"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static boolean Commands(ArrayList\u003cTask\u003e tasks,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                   ArrayList\u003cString\u003e texts,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                   ArrayList\u003cTask\u003e backupList,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                   String words) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (words.equals(\"list\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            ListCommand.listTasks(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            AddCommand.addTodo(tasks, texts, words);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            AddCommand.addDeadline(tasks, texts, words);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            AddCommand.addEvent(tasks, texts, words);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            DeleteCommand.removeTask(tasks, texts, backupList,words);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            DoCommand.doTask(tasks, texts, words);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"undone\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            UndoCommand.undoTask(tasks, texts, words);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            FindCommand.findName(tasks, words);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.equals(\"group\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            GroupCommand.group(tasks, texts);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.equals(\"clear\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            ClearCommand.clear(tasks, texts, backupList);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.equals(\"help\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            HelpCommand.printHelpList();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.equals(\"restore\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            RestoreCommand.restore(tasks, texts, backupList);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else if (words.equals(\"bye\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Ui.exitMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 105,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * AddCommand program adds three different types of tasks into taskslist and textslist"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-08-21"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class AddCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the message of finishing adding one task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and shows current amount of tasks in the list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param t  Task added"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param amount  Number of tasks in the list currently"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void printMessage (Task t, int amount) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Now you have \" + amount + \" tasks in the list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method stores the Todo task into both taskslist and textslist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and makes use of printMessage method to print the message"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void addTodo (ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, String words) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Todo task \u003d Parser.parseTodo(words);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            texts.add(\"T - 0 - \" + task.description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(task, tasks.size());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method stores the Deadline task into both taskslist and textslist"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and makes use of printMessage method to print the message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void addDeadline(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, String words) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Deadline task \u003d Parser.parseDeadline(words);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            texts.add(\"D - 0 - \" + task.description + \" - \" + task.by);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(task, tasks.size());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! The description of a task with deadline cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! The date need to be in the format of yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method stores the Event task into both taskslist and textslist"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and makes use of printMessage method to print the message"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void addEvent(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, String words) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Event task \u003d Parser.parseEvent(words);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            texts.add(\"E - 0 - \" + task.description + \" - \" + task.at);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(task, tasks.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! The date need to be in the format of yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 97
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * ClearCommand program removes all tasks in the list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class ClearCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method removes all tasks in the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void clear(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, ArrayList\u003cTask\u003e backupList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        backupList.addAll(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.clear();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Good job! You have finished all tasks in the list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * DeleteCommand program remove the task from both the taskslist and textslist"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class DeleteCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int DELETE_CMD_LEN \u003d 7;             // length of \"delete \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the message of finishing removing one task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and remove the task in both taskslist and textslist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Shows current amount of tasks in the list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param index  Index of the task user want to remove in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void printMessage(ArrayList\u003cTask\u003e tasks,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                     ArrayList\u003cString\u003e texts,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                     ArrayList\u003cTask\u003e backupList,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                     int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task t \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        backupList.add(t);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.remove(index - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method gets the index of the task user want remove"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Removes the task and shows message by using method printMessage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void removeTask(ArrayList\u003cTask\u003e tasks,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                  ArrayList\u003cString\u003e texts,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                  ArrayList\u003cTask\u003e backupList,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                  String words) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String taskIndex \u003d words.substring(DELETE_CMD_LEN);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int index \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(tasks, texts, backupList, index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, the number of tasks is less than the number you typed, you can list tasks first\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, there must a number after \\\"delete\\\".\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 63
    }
  },
  {
    "path": "src/main/java/duke/command/DoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * DoCommand program finish the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class DoCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int DONE_CMD_LEN \u003d 5;       // length of \"done \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the message of finishing the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and uses method markAsDone to show the task is finished"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param index  Index of the task user want to finish in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void printMessage(ArrayList\u003cTask\u003e tasks,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                     ArrayList\u003cString\u003e texts,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                     int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String text \u003d texts.get(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        // mark the task in the file also as done (e.g., change 0 to 1)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        text \u003d text.substring(0, 4) + \"1\" + text.substring(5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.set(index - 1, text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method gets the index of the task user want finish"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Finishes the task and print the message by using method printMessage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void doTask(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, String words) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String taskIndex \u003d words.substring(DONE_CMD_LEN);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int index \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            //mark as done"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(tasks, texts, index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, I don\u0027t know which task you have finished.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, there must a number after \\\"done\\\".\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 60
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * FindCommand program finds a task by searching for a keyword in the list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-18"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class FindCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int FIND_CMD_LEN \u003d 5;               // length of \"find \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method finds all tasks contain the keyword"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and store these tasks\u0027 index in the ArrayList index"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Makes use of method List to print the qualified tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * If there is not any task contain the keyword then print the cannot find message"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void findName(ArrayList\u003cTask\u003e tasks, String words) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        ArrayList\u003cInteger\u003e index \u003d new ArrayList\u003c\u003e();      // store index of tasks contain keyword"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String keyword \u003d words.substring(FIND_CMD_LEN);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            if (tasks.get(i).description.contains(keyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                index.add(i);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (index.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, none of the task descriptions contain\" + keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            list(tasks, index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the qualified tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param index  Index of qualified tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void list(ArrayList\u003cTask\u003e tasks, ArrayList\u003cInteger\u003e index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d index.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.print(\"\\n     \" + i + \".\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(tasks.get(index.get(i-1)).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 57
    }
  },
  {
    "path": "src/main/java/duke/command/GroupCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * GroupCommand program groups all Todo tasks together in the list,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * then followed by Deadline tasks and finally Event tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class GroupCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method groups different kinds of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * If the task is Todo then move forward to the beginning of the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * If the task is Event then move backward to the end of the list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void group (ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i\u003d0; i \u003c texts.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            if (texts.get(i).startsWith(\"T\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                moveForward(tasks, texts, i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            else if(texts.get(i).startsWith(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                moveBackward(tasks, texts, i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Got it. I have group tasks in the Todo-Deadline-Event order\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method moves the task with the index in the list to the front"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void moveForward(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task tempTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String tempText \u003d texts.get(index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.remove(index);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.add(0,tempTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.add(0,tempText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method moves the task with the index in the list to the end"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void moveBackward(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task tempTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String tempText \u003d texts.get(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.remove(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        tasks.add(tempTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.add(tempText);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 68
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * HelpCommand program prints the help list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-30"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class HelpCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the help list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void printHelpList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Here is the Help List (words in round brackets are explanations no need to type)\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        1.  add command: you can add three types of tasks by following these format\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            i)   Todo task: todo xxxx(task description)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            ii)  Deadline task: deadline xxxx(task description) /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            iii) Event task: event xxxx(task description) /at yyyy-mm-dd\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        2.  delete command: you can remove any task in the list by following this format\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. delete 1 (the first task in the will be deleted)\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        3.  do command: you can mark any task as done by following this format\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. done 1 (the first task in the will be done)\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        4.  undo command: you can mark any task as undone by following this format\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. undone 1 (the first task in the will be done)\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        5.  find command: you can find any task in the list by following this format\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. find xxxx (the tasks that contain the keyword xxxx will be listed)\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        6.  help command: you can ask me to print the help lis by following this format\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. help\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        7.  list command: you can list all tasks in the list by following this format\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. list\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        8.  group command: you can group all tasks in the list by following this format\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. group\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        9.  clear command: you can clear all tasks in the list by following this format\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. clear\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"        10. restore command: you can list all removed tasks in the backupList by following this format\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"            e.g. restore\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * ListCommand program lists all the tasks in the list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-08-21"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class ListCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints all tasks in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     You have not added any task into your list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.print(\"\\n     \" + i + \".\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                System.out.println(tasks.get(i - 1).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 32
    }
  },
  {
    "path": "src/main/java/duke/command/RestoreCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * RestoreCommand program will list all removed tasks from the backupList"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * If user want to restore, they need to type themselves"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class RestoreCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method list all removed tasks from the backupList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void restore(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, ArrayList\u003cTask\u003e backupList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Here are all tasks you have removed:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d backupList.size(); i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.print(\"\\n     \" + i + \".\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(backupList.get(i - 1).toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"\\n     If you want readd these tasks, you need to redo the addcommand\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 32
    }
  },
  {
    "path": "src/main/java/duke/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * UndoCommand program uodo the task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class UndoCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int UNDONE_CMD_LEN \u003d 7;       // length of \"undone \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the message of unfinishing the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * and uses method markAsUndone to show the task is unfinished"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param index  Index of the task user want to unfinish in the list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void printMessage(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Noted! I\u0027ve marked this task as undone:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Task task \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        task.markAsUndone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String text \u003d texts.get(index - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        // mark the task in the file also as done (e.g., change 0 to 1)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        text \u003d text.substring(0, 4) + \"0\" + text.substring(5);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        texts.set(index - 1, text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method gets the index of the task user want unfinish"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * Unfinishes the task and print the message by using method printMessage"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void undoTask(ArrayList\u003cTask\u003e tasks, ArrayList\u003cString\u003e texts, String words) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            String taskIndex \u003d words.substring(UNDONE_CMD_LEN);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            int index \u003d Integer.parseInt(taskIndex);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            //mark as undone"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            printMessage(tasks, texts, index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, I don\u0027t know which task you have unfinished.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     Sorry, there must a number after \\\"undone\\\".\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 58
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 4
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Parser program parse the message user typed in and convert into Task format"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-09-11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int TODO_CMD_LEN \u003d 5;               // length of \"todo \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int DEADLINE_CMD_LEN \u003d 9;           // length of \"deadline \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final int EVENT_CMD_LEN \u003d 6;              // length of \"event \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method parse the Todo task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * e.g., \u003c/code\u003etodo a\u003c/code\u003e to \u003ccode\u003e[T][âœ—] a\u003c/code\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static Todo parseTodo(String words) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String name \u003d words.substring(TODO_CMD_LEN);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Todo task \u003d new Todo(name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method parse the Deadline task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * e.g., \u003c/code\u003edeadline a /by 2000-01-01 \u003c/code\u003e to \u003ccode\u003e[D][âœ—] a (by: Jan 01 2000)\u003c/code\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static Deadline parseDeadline(String words) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String[] detail \u003d words.split(\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        detail[0] \u003d detail[0].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        detail[1] \u003d detail[1].trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(detail[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Deadline task \u003d new Deadline(detail[0].substring(DEADLINE_CMD_LEN), date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method parse the Event task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * e.g., \u003c/code\u003eevent a /at 2000-01-01 \u003c/code\u003e to \u003ccode\u003e[E][âœ—] a (at: Jan 01 2000)\u003c/code\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param words  Words the user typed in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static Event parseEvent(String words) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String[] detail \u003d words.split(\"/at\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        detail[0] \u003d detail[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        detail[1] \u003d detail[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(detail[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        Event task \u003d new Event(detail[0].substring(EVENT_CMD_LEN), date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 65
    }
  },
  {
    "path": "src/main/java/duke/storage/File.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * File program deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-08-21"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class File {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static final String FILE_PATHWAY \u003d \"/Users/zhuzeyu/Desktop/data/task.txt\";   // file pathway"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method gets tasks from the file and stores in the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param filePath  the path way for the file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks  ArrayList of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void getFileContents(java.lang.String filePath,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                       java.util.ArrayList\u003cduke.task.Task\u003e tasks,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                                       java.util.ArrayList\u003cjava.lang.String\u003e texts) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            java.io.File f \u003d new java.io.File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Scanner s \u003d new Scanner(f);                  // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            while(s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                String words \u003d s.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                texts.add(words);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                String[] detail \u003d words.split(\" - \", 4);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                storeTask(tasks, detail);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     File not found\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            System.out.println(\"     â˜¹ OOPS!!! Can you change dates of tasks to be yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            Ui.printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method stores each task list in the file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param tasks   ArrayList of tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param detail  String array for each task in the file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    private static void storeTask(ArrayList\u003cTask\u003e tasks, String[] detail) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        boolean done \u003d false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        if (detail[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            done \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        switch (detail[0]) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                Task t \u003d new Todo(detail[2]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                t.isDone \u003d done;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                LocalDate deadline \u003d LocalDate.parse(detail[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                Task d \u003d new Deadline(detail[2], deadline);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                d.isDone \u003d done;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                tasks.add(d);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                LocalDate event \u003d LocalDate.parse(detail[3]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                Task e \u003d new Event(detail[2], event);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                e.isDone \u003d done;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                tasks.add(e);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method overwrites the file using the text list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param filePath  the path way for the file"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @param texts  ArrayList of tasks in the TXT format"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void writeToFile(String filePath, ArrayList\u003cString\u003e texts) throws IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (String text : texts) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "            fw.write(text + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 106
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String date \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        String date \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \u0027[\u0027 + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    //Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 15
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * Ui program deals with interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @author  Zhu Zeyu"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " * @since   2020-08-21"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints a horizontal line to divide input and output"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.print(\"     -\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        for (int i \u003d 0; i \u003c 100; i++) System.out.print(\u0027-\u0027);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"-\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the greet words"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void greetWords() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     You can ask me to print the help list by saying help\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * This method prints the exit message"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     * @return Nothing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    public static void exitMessage() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 44
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhu-Ze-Yu"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Zhu-Ze-Yu": 2,
      "-": 19
    }
  }
]
