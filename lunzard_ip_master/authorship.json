[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "lunzard": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "E | 1 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.exceptions.InvalidKeywordException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static String userInputLine;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static String command;  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static String description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static String taskName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static String taskTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        //auto load"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        File autoSavedFile \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(\"loading the previous file ...\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if(checkFileExistence(autoSavedFile)){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(\"finished loading!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(\"working on a new file!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isQuit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        //when the program starts"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        showLogo();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        while(!isQuit) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            processInput(in);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            switch (command.toUpperCase()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                listTasks();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                if(checkDescription() \u0026\u0026 checkTaskNum()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    doneTask(Integer.parseInt(description));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                if(checkDescription()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    addTask(new ToDo(description));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                if(checkDescription() \u0026\u0026 checkDeadline()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    addTask(new Deadline(taskName,taskTime));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                if(checkDescription() \u0026\u0026 checkEvent()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    addTask(new Event(taskName, taskTime));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                if (checkDescription() \u0026\u0026 checkTaskNum()){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    deleteTask(Integer.parseInt(description));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                isQuit \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            case \"HELP\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                printHelpInfo();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                printErrorInfo();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        autoSave(autoSavedFile);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static void processInput(Scanner in) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            userInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            command \u003d processCommand();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static void printErrorInfo() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \" pls refer to the commands by typing \u0027help\u0027.\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + HORIZONTAL_LINE );"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    private static void printHelpInfo() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"LIST, DONE, TODO, DEADLINE, EVENT, BYE, HELP\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void showLogo() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE+ \"\\n\" + logo);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m duke.Duke\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                        + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\" + greeting + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String bye_word \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\" + bye_word + \"\\n\" + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void addTask(Task t) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"  \" +t.toString() + \"\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"Now you have \"+ taskCount + \" duke.tasks in the list\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void addTaskSilent(Task t) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"Here are the duke.tasks in your list:\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for (int i \u003d 0; i\u003c taskCount; i++) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println((i+1)+\".\"+tasks.get(i).toString());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static Boolean checkTaskNum() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isNumValid \u003d true;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            int inputNum \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if (inputNum \u003e taskCount || taskCount \u003d\u003d 0 || inputNum \u003d\u003d 0) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isNumValid \u003d false;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE+\"\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The task number of the one you have done is invalid!\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    +HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (DukeException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isNumValid \u003d false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE+\"\\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! You did not set that task!\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    +HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isNumValid;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void doneTask(int taskIndex) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(\"  \" + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void doneTaskSilent(int taskIndex) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + tasks.get(taskIndex - 1).toString());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        taskCount \u003d tasks.size();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        System.out.println(\"Now you have \"+ taskCount +\" tasks in the list.\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static String processCommand() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return userInputLine.split(\" \")[0];"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static boolean checkDescription() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isDescriptionExist \u003d true;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            processDescription(command);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The description of a \" + command.toLowerCase() + \" cannot be empty\\n\""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDescriptionExist \u003d false;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDescriptionExist;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void processDescription(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        description \u003d userInputLine.replace(command, \" \").trim();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static boolean checkDeadline() {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isDescriptionValid \u003d true;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            processDeadline(description);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (InvalidKeywordException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The key word \u0027/by\u0027 is missing or incomplete.\\n\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDescriptionValid \u003d false;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The deadline name or time should not be empty\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDescriptionValid \u003d false;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDescriptionValid;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void processDeadline(String description) throws InvalidKeywordException,EmptyDescriptionException {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskName \u003d description.substring(0, description.indexOf(\"/by\")).trim();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskTime \u003d description.substring(description.indexOf(\"/by\") + 3).trim();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new InvalidKeywordException();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskName.isEmpty()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        else if (taskTime.isEmpty()) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static boolean checkEvent(){"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isDescriptionValid \u003d true;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            processEvent(description);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (InvalidKeywordException e) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The key word \u0027/at\u0027 is missing or incomplete.\\n\""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDescriptionValid \u003d false;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + \"☹ OOPS!!! The event name or time should not be empty\\n\""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                    + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isDescriptionValid \u003d false;"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isDescriptionValid;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void processEvent(String description) throws InvalidKeywordException,EmptyDescriptionException {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskName \u003d description.substring(0, description.indexOf(\"/at\")).trim();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            taskTime \u003d description.substring(description.indexOf(\"/at\") + 3).trim();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new InvalidKeywordException();"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if (taskName.isEmpty()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        else if (taskTime.isEmpty()) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static boolean checkFileExistence(File fileName){"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isExist \u003d false;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            autoLoad(fileName);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            isExist \u003d true;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            if(fileName.isDirectory()) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(HORIZONTAL_LINE + \"\\n\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                        + \"File does not exist, creating new file ...\\n\""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                        + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                createSavedFile(fileName);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                System.out.println(HORIZONTAL_LINE + \"\\n\"   //how to check folders?"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                        + \"Folder does not exist, creating new folder and file ...\\n\""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                        + HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                createDirectory(fileName);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return isExist;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void autoLoad(File fileName) throws FileNotFoundException {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if(fileName.exists()){"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            Scanner rs\u003d new Scanner(fileName);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            while(rs.hasNext()){"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                String record \u003d rs.nextLine();"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "lunzard"
        },
        "content": "                processRecord(record);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            }"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            throw new FileNotFoundException();"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void autoSave(File fileName) throws IOException{"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String filePath \u003d fileName.getPath();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        new FileWriter(fileName, false).close();"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        for(int i \u003d 0; i\u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            fw.write(tasks.get(i).saveAsText() + System.lineSeparator());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void createDirectory(File file){"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        boolean isCreated \u003d file.mkdir();"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if(isCreated){"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(\"Directory created successfully\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(\"Sorry, Directory cannot be created\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void createSavedFile(File file){"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }catch (IOException e){"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            System.out.println(\"Sorry, file cannot be created\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public static void processRecord(String record){"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        String[] recordInfos \u003d record.split(\" \\\\| \");"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        switch (recordInfos[0]){"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addTaskSilent(new ToDo(recordInfos[2]));"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addTaskSilent(new Deadline(recordInfos[2], recordInfos[3]));"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            addTaskSilent(new Event(recordInfos[2], recordInfos[3]));"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        if(recordInfos[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "lunzard"
        },
        "content": "            doneTaskSilent(tasks.size());"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 360,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class InvalidKeywordException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 4
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    protected String by;    //end time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String saveAsText(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"D | \"+ ((this.isDone)? \"1\" : \"0\")+ \" | \" + this.name + \" | \" + this.by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    protected String at;    //start and end time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String saveAsText(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"E | \"+ ((this.isDone)? \"1\" : \"0\")+ \" | \" + this.name + \" | \" + this.at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 20
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"[\" +this.getStatusIcon() +\"]\"+ \" \" + this.getName();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String saveAsText(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"T | \"+ ((this.isDone)? \"1\" : \"0\")+ \" | \" + this.name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 39
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    public String saveAsText(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lunzard"
        },
        "content": "        return \"T | \"+ ((this.isDone)? \"1\" : \"0\")+ \" | \" + this.name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lunzard"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lunzard"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lunzard": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lunzard"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lunzard"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lunzard"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lunzard"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lunzard"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lunzard"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lunzard"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lunzard"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lunzard"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lunzard"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lunzard"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lunzard"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lunzard": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lunzard"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lunzard"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lunzard": 2,
      "-": 19
    }
  }
]
