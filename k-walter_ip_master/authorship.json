[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "false deadline homework /by 2020-01-10"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": "true todo sleep /at 2020/10/01 1pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "false event lecture /at 2020-10-01"
      }
    ],
    "authorContributionMap": {
      "k-walter": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            tasks \u003d Storage.readFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String stdIn \u003d \"greet\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                Command c \u003d Command.parse(stdIn);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                ui.showEcho(e.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                ui.showLine(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            stdIn \u003d scan.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        } while (!stdIn.equals(\"bye\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showBye();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 50,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * adds task to array and prints total number of tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param task - to be added"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        tasks.add(this.task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Storage.writeFile(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showAdd(this.task, tasks.size());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.common.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.EmptyArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.UnknownArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Parses single line command given given space-separated parameters"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param line to be parsed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return respective Command subclass to be executed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws EmptyArgumentException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws UnknownArgumentException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static Command parse(String line) throws EmptyArgumentException, UnknownArgumentException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        // Take commands from first space-separated word"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String[] cmd \u003d line.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (cmd.length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new EmptyArgumentException(\"command\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        switch (cmd[0]) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"greet\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new GreetCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"echo\": {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String statement \u003d Util.joinUntil(cmd, 1, cmd.length);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new EchoCommand(statement);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            int i \u003d Integer.parseInt(cmd[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new DoneCommand(i);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            int i \u003d Integer.parseInt(cmd[1]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new DeleteCommand(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String match \u003d Util.joinUntil(cmd, 1, cmd.length);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new FindCommand(match);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new AddCommand(Task.parseCmd(cmd));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new UnknownArgumentException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Enforces implementation for all commands"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks   array to be referenced"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui      methods to call for display"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage to read and write to file"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public abstract void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 80
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected int i;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Remove task from array with index and displays confirmation message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks   to remove task from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage to store resultant tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Task t \u003d tasks.get(this.i);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        tasks.remove(this.i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Storage.writeFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showDelete(t, tasks.size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected int i;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Marks task as done with index and displays confirmation message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks   to be marked as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage to store resultant tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        tasks.get(this.i - 1).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Storage.writeFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showDone(tasks.get(this.i - 1));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 31
    }
  },
  {
    "path": "src/main/java/duke/command/EchoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class EchoCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public EchoCommand(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Repeats command in Duke\u0027s formatted fashion"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showEcho(this.message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 27
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected String match;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public FindCommand(String match) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.match \u003d match;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Filters all tasks on match string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks   to be filtered"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                .filter(task -\u003e task.contains(this.match))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showFind(result);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 33
    }
  },
  {
    "path": "src/main/java/duke/command/GreetCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class GreetCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Greets Duke user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showGreet();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.io.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Shows all tasks, including completed or expired"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void execute(ArrayList\u003cTask\u003e tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 21
    }
  },
  {
    "path": "src/main/java/duke/common/Util.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Util {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * indexofString searches matching string within the array"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param array - to search within"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param match - to be searched"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return index of matched string, or -1 if not found"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static int indexOfString(String[] array, String match) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        for (int i \u003d 0; i \u003c array.length; ++i) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            if (array[i].equals(match)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * joinUntil joins array of string into string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param join - array of string to join"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param from - start index to join from"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param to   - end index to join up to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return joined string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static String joinUntil(String[] join, int from, int to) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String[] stringArray \u003d Arrays.copyOfRange(join, from, to);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.join(\" \", stringArray);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 34
    }
  },
  {
    "path": "src/main/java/duke/error/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class EmptyArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    String descriptor;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public EmptyArgumentException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(\"\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public EmptyArgumentException(String descriptor) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.descriptor \u003d descriptor;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"     ☹ OOPS!!! The description of a %s cannot be empty.\\n\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                this.descriptor"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 21
    }
  },
  {
    "path": "src/main/java/duke/error/UnknownArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class UnknownArgumentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 8
    }
  },
  {
    "path": "src/main/java/duke/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.EmptyArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.UnknownArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static File f;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Opens file or initialises file if not existing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param path"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Storage(String path) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        f \u003d new File(path);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Writes array of tasks to file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param array of Task subclasses"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static void writeFile(ArrayList\u003cTask\u003e array) throws IOException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f, false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        for (Task t : array) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            fw.write(t.toInputString() + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * Reads array of tasks from file"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return array of Task subclasses"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws EmptyArgumentException"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws UnknownArgumentException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFile() throws IOException, EmptyArgumentException, UnknownArgumentException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        ArrayList\u003cTask\u003e array \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            Task t \u003d Task.parseCmd(s.nextLine());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            array.add(t);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return array;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 62
    }
  },
  {
    "path": "src/main/java/duke/io/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String HR \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String GREET \u003d \"     Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"     What can I do for you?\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String BYE \u003d \"     Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String ECHO \u003d \"     %s\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String ADD \u003d \"     Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"       %s\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"     Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String TASK \u003d \"     %d. %s\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String DONE \u003d \"     Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"       %s\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String DELETE \u003d \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"       %s\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            \"     Now you have %d tasks in the list.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String LIST \u003d \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected static final String FIND \u003d \"     Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showLine(boolean breakLine) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(HR);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (breakLine) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.showLine(false);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showGreet() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(GREET);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(BYE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showEcho(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(String.format(ECHO, message));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(FIND);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.showTasks(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(LIST);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.showTasks(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected void showTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            System.out.print(String.format(TASK, i, tasks.get(i - 1)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(String.format(DONE, task));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showDelete(Task task, int size) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(String.format(DELETE, task, size));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void showAdd(Task task, int size) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        System.out.print(String.format(ADD, task, size));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * toString overrides superclass string method"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return task status and description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"[D]%s (by: %s)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * overridees superclass string method"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return completed and deadline in its input format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * eg false deadline assignment /by 2020-10-01"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toInputString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"%s deadline %s /by %s\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                super.toInputString(), this.description, this.by"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * toString overrides superclass string method"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return task status and description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"[E]%s (at: %s)\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                super.toString(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * overridees superclass string method"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return completed and event in its input format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * eg false event lecture /at 2020-10-01"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toInputString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"%s event %s /at %s\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                super.toInputString(), this.description, this.at"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.common.Util;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.EmptyArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import duke.error.UnknownArgumentException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * parses single command from stored data"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param cmd space-separated string commands"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return respective Task subclass"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws EmptyArgumentException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws UnknownArgumentException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static Task parseCmd(String cmd) throws EmptyArgumentException, UnknownArgumentException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String[] input \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new UnknownArgumentException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        boolean isDone \u003d Boolean.parseBoolean(input[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        String[] cmdArray \u003d Arrays.copyOfRange(input, 1, input.length);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        Task t \u003d parseCmd(cmdArray);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * parses single command from CLI"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param cmd space-separated string commands"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return respective Task subclass"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws EmptyArgumentException"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @throws UnknownArgumentException"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public static Task parseCmd(String[] cmd) throws EmptyArgumentException, UnknownArgumentException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        if (cmd.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String cmdType \u003d cmd.length \u003d\u003d 1 ? cmd[0] : \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new EmptyArgumentException(cmdType);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        switch (cmd[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String description \u003d Util.joinUntil(cmd, 1, cmd.length);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new Todo(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            int i \u003d Util.indexOfString(cmd, \"/by\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String description \u003d Util.joinUntil(cmd, 1, i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String by \u003d Util.joinUntil(cmd, i + 1, cmd.length);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new Deadline(description, d);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            int i \u003d Util.indexOfString(cmd, \"/at\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String description \u003d Util.joinUntil(cmd, 1, i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            String at \u003d Util.joinUntil(cmd, i + 1, cmd.length);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            return new Event(description, d);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "k-walter"
        },
        "content": "            throw new UnknownArgumentException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * contains searches for match within description"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @param match to be found"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return if description contains matching string"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public boolean contains(String match) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return this.description.contains(match);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * markAsDone marks task instance as completed"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * getStatusIcon pretty prints format"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return status as tick/cross string"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * toString overrides superclass string method"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return task status and description"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * overridees superclass string method"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return completed and task in its input format"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toInputString() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return Boolean.toString(this.isDone);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 131
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "k-walter"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "k-walter"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * toString overrides superclass string method"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return task status and description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "k-walter"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * overridees superclass string method"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * @return completed and task in its input format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     * eg false todo assignment"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "k-walter"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    public String toInputString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                \"%s todo %s\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "k-walter"
        },
        "content": "                super.toInputString(), this.description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "k-walter"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "k-walter"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "k-walter"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "k-walter": 31
    }
  }
]
