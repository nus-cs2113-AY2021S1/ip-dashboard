[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Duke is a command-line application, helping you to manage your todos, deadlines and events effectively."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Usage](#usage)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`todo` - Adding a todo](#todo---adding-a-todo)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`deadline` - Adding a deadline](#deadline---adding-a-deadline)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`event` - Adding an event](#event---adding-an-event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`list` - Listing all tasks](#list---listing-all-tasks)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`find` - Finding a task by keyword](#find---finding-a-task-by-keyword)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`done` - Marking a task as done](#done---marking-a-task-as-done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`delete` - Deleting a task](#delete---deleting-a-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`clear` - Clearing all tasks](#clear---clearing-all-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    - [`bye` - Exiting application](#bye---exiting-application)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- [Command summary](#command-summary)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Add your tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You can add 3 different types of tasks to Duke, which are: todos, deadlines and events."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Manage your tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You can list all your tasks, mark a task as done, or delete the task completely."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Search your tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You can search your tasks with a given keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### Save your tasks"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Duke automatically saves all your tasks in a file, which will be loaded the next time you run Duke, ensuring you have your tasks at all times."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `todo` - Adding a todo"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Adds a todo task to the application."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- Description must not contain `|` (vertical bar character)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`todo homework`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Added: [T][N] homework"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You now have 1 task in your list!"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `deadline` - Adding a deadline"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Adds a deadline task to the application."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `DATE` must be of the following format: `dd/mm/yyyy`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `TIME` must be specified in the 24-hours format e.g. `1800` for 6pm"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- Description must not contain `|` (vertical bar character)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`deadline assignment /by 05/01/2020 1800`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Added: [D][N] assignment (by: 5 Jan 2020 06:00 PM)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You now have 2 tasks in your list!"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `event` - Adding an event"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Adds an event task to the application."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `event DESCRIPTION /at DATE TIME`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `DATE` must be of the following format: `dd/mm/yyyy`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- `TIME` must be specified in the 24-hours format e.g. `1800` for 6pm"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- Description must not contain `|` (vertical bar character)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`event meeting /at 05/01/2020 1800`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Added: [E][N] meeting (at: 5 Jan 2020 06:00 PM)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You now have 3 tasks in your list!"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `list` - Listing all tasks"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "List all the tasks to the user."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Here are your tasks:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "1. [T][N] homework"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "2. [D][N] assignment (by: 5 Jan 2020 06:00 PM)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "3. [E][N] meeting (at: 5 Jan 2020 06:00 PM)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `find` - Finding a task by keyword"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Finds tasks whose names contain the keywords. "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- If no keywords are supplied, then all the tasks will be shown to the user, similar to using `list`."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`find book`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    1. [T][N] read book"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    2. [D][N] return book (by: 31 Dec 2020 11:59 PM)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `done` - Marking a task as done"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Marks a task with a given index as done."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The index must be a positive integer: 1, 2, 3, ..."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "I have marked the following task as done:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    [D][Y] assignment (by: 5 Jan 2020 06:00 PM)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `delete` - Deleting a task"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Deletes a task with a given index from the application."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "- The index must be a positive integer: 1, 2, 3, ..."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Ok, I have removed this task:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    [T][Y] homework"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "You now have 2 tasks in your list!"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `clear` - Clearing all tasks"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Clears all the tasks in the task list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Your task list has been cleared!"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "### `bye` - Exiting application"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "```"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "Action | Format | Examples"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "------ | -------| --------"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "todo | `todo DESCRIPTION` | `todo homework`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "deadline | `deadline DESCRIPTION /by DATE TIME` | `deadline assignment /by 05/01/2020 1800`"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "event | `event DESCRIPTION /at DATE TIME` | `event meeting /at 05/01/2020 1800`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list | `list`"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "find | `find KEYWORD` | `find book`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "done | `done INDEX` | `done 2`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "delete | `delete INDEX` | `delete 1`"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "clear | `clear`"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "bye | `bye`"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 185,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Sets up the required objects and loads the tasks from the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            tasks \u003d new TaskList(storage.readFile());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileLoadError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Runs the application until the application terminates."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                Command command \u003d parser.parseUserInput(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                isExit \u003d command.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | IllegalCommandException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                ui.printToUser(\"\\tWrong command entered!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            } catch (NullPointerException | NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                ui.printToUser(\"\\tInvalid task number entered!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            } catch (IllegalDescriptionException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                ui.printToUser(\"\\tDescription cannot contain \u0027|\u0027!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 62,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            tasks.clearTaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTasksCleared();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Executes a command by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param tasks contains the user\u0027s tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param ui handles the printing of messages to the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param storage handles the storing of the user\u0027s tasks in a file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Boolean flag to determine whether to exit the application"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Adds a deadline task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String argumentString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public DeadlineCommand(String argumentString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.argumentString \u003d argumentString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] argumentSplit \u003d argumentString.split(\" /by \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Task deadline \u003d tasks.addDeadline(argumentSplit);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTaskAdded(deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printRemainingTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printToUser(\"\\tDescription or deadline cannot be empty!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printDateTimeError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Deletes a task from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public DeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        taskNumber \u003d Integer.parseInt(arguments);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Task task \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTaskDeleted(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printRemainingTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IllegalIndexException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printToUser(\"\\tTask does not exist!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalIndexException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Sets a task as done in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public DoneCommand(String argumentString) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        taskNumber \u003d Integer.parseInt(argumentString);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Task task \u003d tasks.markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTaskDone(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IllegalIndexException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printToUser(\"\\tInvalid task number entered!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Adds an event task to the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String argumentString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public EventCommand(String argumentString) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.argumentString \u003d argumentString;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] argumentSplit \u003d argumentString.split(\" /at \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Task event \u003d tasks.addEvent(argumentSplit);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTaskAdded(event);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printRemainingTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printToUser(\"\\tDescription or event date/time cannot be empty!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printDateTimeError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Finds tasks with a specified keyword in the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public FindCommand(String keywords) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTasks \u003d tasks.filterByKeywords(keywords);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui.printFilteredTasks(filteredTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 31
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Displays the tasks to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui.printToUser(\"\\tHere are your tasks:\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ui.printAllTasks(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 23
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Adds a todo task to the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final String arguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public TodoCommand(String arguments) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            Task todo \u003d tasks.addTodo(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printTaskAdded(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printRemainingTasks(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            storage.writeToFile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printToUser(\"\\tDescription cannot be empty!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            ui.printFileError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 40
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Thrown to handle any errors specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Thrown when a user attempts to add a task without including a description of the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Thrown when a user attempts to enter a command that is not recognized."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class IllegalCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Thrown when a user enters an illegal description when adding a task, such as invalid characters."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class IllegalDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/IllegalIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Thrown when a user enters an invalid index or an index that is out of range."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class IllegalIndexException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalCommandException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalDescriptionException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Parses the user\u0027s input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Parses the user\u0027s input into a command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param userInput user\u0027s input string"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Command object to be executed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IllegalCommandException if the command entered does not exist"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IllegalDescriptionException if the description entered contains illegal characters"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Command parseUserInput(String userInput) throws IllegalCommandException, IllegalDescriptionException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String userCommand, arguments \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (userInput.contains(\"|\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new IllegalDescriptionException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } else if (userInput.contains(\" \")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            userCommand \u003d userInput.substring(0, userInput.indexOf(\" \"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d userInput.substring(userInput.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            userCommand \u003d userInput;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        switch (userCommand) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case ListCommand.COMMAND_LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case ByeCommand.COMMAND_BYE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case TodoCommand.COMMAND_TODO:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new TodoCommand(arguments);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case DeadlineCommand.COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new DeadlineCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case EventCommand.COMMAND_EVENT:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new EventCommand(arguments);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case DoneCommand.COMMAND_DONE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new DoneCommand(arguments);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case DeleteCommand.COMMAND_DELETE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case FindCommand.COMMAND_FIND:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new FindCommand(arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        case ClearCommand.COMMAND_CLEAR:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new IllegalCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 63
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Handles the loading of tasks from a file and saving of tasks to a file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String FILE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Creates a new file if it does not exist."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Storage() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Reads the tasks from a file and returns an ArrayList of Task objects."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of Task objects"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws FileNotFoundException if the file is not found"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        ArrayList\u003cTask\u003e userTasks \u003d new ArrayList\u003c\u003e(TaskList.MAX_SIZE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String task, typeOfTask, status, description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String[] arguments;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LocalDateTime dateTime;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Scanner readFile \u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        while (readFile.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            task \u003d readFile.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            arguments \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            typeOfTask \u003d arguments[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            status \u003d arguments[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            description \u003d arguments[2];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            switch (typeOfTask) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                setTaskStatus(todo, status);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                userTasks.add(todo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                dateTime \u003d LocalDateTime.parse(arguments[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                Task deadline \u003d new Deadline(description, dateTime);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                setTaskStatus(deadline, status);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                userTasks.add(deadline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                dateTime \u003d LocalDateTime.parse(arguments[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                Task event \u003d new Event(description, dateTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                setTaskStatus(event, status);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                userTasks.add(event);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return userTasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Checks if a task from the file is marked as done, and mark it as done in the object."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param task the task from the file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param status the status of the task from the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private void setTaskStatus(Task task, String status) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Writes a given task list to a file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param tasks the task list to be written to the file"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IOException if an I/O error has occurred"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void writeToFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        FileWriter file \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        int isDone;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getUserTasksCount(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            isDone \u003d task.isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            if (task.getClass() \u003d\u003d Todo.class) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                file.write(String.format(\"T | %d | %s\\n\","
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                        isDone, task.getTaskDescription()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            } else if (task.getClass() \u003d\u003d Deadline.class) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                file.write(String.format(\"D | %d | %s | %s\\n\","
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                        isDone, task.getTaskDescription(), ((Deadline) task).getDueDate()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            } else if (task.getClass() \u003d\u003d Event.class) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                file.write(String.format(\"E | %d | %s | %s\\n\","
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                        isDone, task.getTaskDescription(), ((Event) task).getEventAt()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 122
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    protected LocalDateTime dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Deadline(String taskDescription, LocalDateTime dueDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return the due date of the Deadline task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public LocalDateTime getDueDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueDate.format(formatter) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    protected LocalDateTime eventAt;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Event(String taskDescription, LocalDateTime eventAt) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return the date/time of the Event task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public LocalDateTime getEventAt() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return eventAt;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventAt.format(formatter) + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Represents a generic task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Initializes the Task object, when a description is provided."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param taskDescription description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task(String taskDescription) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Returns the status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return True if the task is done, False otherwise"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return \"Y\" if the task is done, \"N\" otherwise"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return string representation of the Task object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return String.format(\"[%s] %s\", getStatus(), taskDescription);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Todo(String taskDescription) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 15
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.exception.IllegalIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Handles the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public static final String DATE_TIME_PATTERN \u003d \"d/M/yyyy HHmm\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final ArrayList\u003cTask\u003e userTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private int userTasksCount;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Initializes an empty task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this(new ArrayList\u003c\u003e(MAX_SIZE));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Initializes a new task list and the task count from an ArrayList of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param userTasks an ArrayList containing tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e userTasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        this.userTasks \u003d userTasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount \u003d userTasks.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Returns the task at the specified index of this list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param index index of the task in this task list to return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Task object at the specified index of this list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return userTasks.get(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Returns the number of tasks in this task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return the number of tasks in this task list"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public int getUserTasksCount() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return userTasksCount;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Adds a todo task to the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param description the description of the todo task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Task object containing the todo task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws EmptyDescriptionException if no description is provided by the user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task addTodo(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Task todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasks.add(todo);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Adds a deadline task to this task list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param arguments the description and date/time of the deadline task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Task object containing the deadline task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws EmptyDescriptionException if no description or date/time is provided by the user"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task addDeadline(String[] arguments) throws EmptyDescriptionException, DateTimeParseException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LocalDateTime deadlineDate \u003d LocalDateTime.parse(arguments[1], formatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Task deadline \u003d new Deadline(arguments[0], deadlineDate);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasks.add(deadline);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Adds an event task to this task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param arguments the description and date/time of the event task"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return a Task object containing the event task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws EmptyDescriptionException if no description or date/time is provided by the user"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task addEvent(String[] arguments) throws EmptyDescriptionException, DateTimeParseException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (arguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_PATTERN);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        LocalDateTime eventDate \u003d LocalDateTime.parse(arguments[1], formatter);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Task event \u003d new Event(arguments[0], eventDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasks.add(event);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Marks a task in this task list as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param taskNumber the index of the task in this task list to mark as done"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return the Task object at the specified task number in this task list that is marked as done"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IllegalIndexException if the number provided by the user is invalid"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task markTaskAsDone(int taskNumber) throws IllegalIndexException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (taskNumber \u003e userTasksCount || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new IllegalIndexException();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return userTasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Deletes a task in this task list."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param taskNumber the index of the task in this task list to delete"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return the Task object at the specified task number in this task list that is deleted"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @throws IllegalIndexException if the number provided by the user is invalid"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public Task deleteTask(int taskNumber) throws IllegalIndexException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        if (taskNumber \u003e userTasksCount || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            throw new IllegalIndexException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        Task removedTask \u003d userTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount--;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Returns a filtered ArrayList with tasks containing the given keywords."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param keywords keywords specified by the user"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return an ArrayList of tasks filtered by keywords"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public ArrayList\u003cTask\u003e filterByKeywords(String keywords) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return (ArrayList\u003cTask\u003e) userTasks.stream()"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                .filter((s) -\u003e s.getTaskDescription().contains(keywords))"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "                .collect(toList());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void clearTaskList() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasks.clear();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        userTasksCount \u003d 0;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 175
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " * Handles the user\u0027s input and the printing of messages to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private static final String MESSAGE_EXIT \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Gets the command from the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @return command entered by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a welcome message when the application starts."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a message when the application is terminated."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(MESSAGE_EXIT);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a message to the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param message message to be printed to the user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printToUser(String message) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints all the tasks in the task list to the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param tasks the task list with the contents to be printed to the user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printAllTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getUserTasksCount(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            printToUser(String.format(\"\\t%d. %s\", i + 1, tasks.getTask(i)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a message to indicate that a task was added."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printTaskAdded(Task task) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tAdded: \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints the number of tasks left in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * @param tasks the task list with the user\u0027s tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printRemainingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        int taskCount \u003d tasks.getUserTasksCount();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        String addS \u003d (taskCount \u003e 1) ? \"s\" : \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        System.out.println(\"\\tYou now have \" + taskCount + \" task\" + addS + \" in your list!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a message to indicate that a task was marked as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tI have marked the following task as done:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(String.format(\"\\t\\t%s\", task));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     * Prints a message to indicate that a task was deleted."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printTaskDeleted(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tOk, I have removed this task:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(String.format(\"\\t\\t%s\", task));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printFilteredTasks(ArrayList\u003cTask\u003e filteredTasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "            printToUser(String.format(\"\\t\\t%d. %s\", i + 1, filteredTasks.get(i)));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printTasksCleared() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tYour task list has been cleared!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printFileError() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tError: The file cannot be written to!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printFileLoadError() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tError: The file cannot be opened or created!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jerichochua"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    public void printDateTimeError() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "        printToUser(\"\\tError: Date/time cannot be recognised!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 117
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "todo Homework 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "deadline Assignment 1 /by 30/9/2020 2359"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "event"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "event Meeting /at 1/10/2020 1200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "deadline return book /by 25/10/2020 2359"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "find book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 24
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "del duke.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jerichochua"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jerichochua": 3,
      "-": 19
    }
  }
]
