[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import exceptions.EmptyCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import exceptions.EmptyDescriptionException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "import exceptions.NoDateGivenException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static final String SEPARATING_LINE \u003d \"  ________________________________________\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static final int TODO_LEN \u003d 5;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static final int EVENT_LEN \u003d 6;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static final int DEADLINE_LEN \u003d 9;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static final int DONE_LEN \u003d 5;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    static ArrayList\u003cTask\u003e tasksToDo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        GetCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        bye();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Greets the user "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void greet(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Welcome back, master\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Your command is my command...\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Continuously gets command from the user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * until the user types out \"bye\"."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Also prompts the user to put in valid commands"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * by resolving exceptions"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void GetCommand(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Please give me your command\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String command;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                command \u003d input.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                // If user did not put any command, then "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                // throw empty command exception"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                if(command \u003d\u003d null || command.isEmpty()){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    throw new EmptyCommandException();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                if(command.equals(\"bye\")){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    listOutTasks();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else if(command.contains(\"done\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    markAsDone(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else if(command.contains(\"todo\")){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    addNewToDo(command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else if(command.contains(\"deadline\")){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    addDeadline(command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else if(command.contains(\"event\")){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    addEvent(command);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                    throw new InvalidCommandException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            } catch(EmptyCommandException e){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                System.out.println(\"You did not give me any command\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            } catch(InvalidCommandException e){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                System.out.println(\"Please give me a valid command, master...\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Lists out the current tasks that the "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * user has typed in the bot so far"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void listOutTasks(){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        int currentTaskCount \u003d tasksToDo.size();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"    You currently have \" + currentTaskCount "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                            + \" items to do in your list, master...\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        for(int i \u003d 0; i \u003c currentTaskCount; i++){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            Task currentTask \u003d tasksToDo.get(i);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            int currentNum \u003d i+1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.print(\"  \" + currentNum + \". \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            printTaskStatus(currentTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Marks the task that the user indicated to be done"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * by changing the cross to a tick and then"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * prints out the task that was done"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param command the current command passed from user input"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void markAsDone(String command){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        int indexTaskDone \u003d Integer.parseInt(command.substring(DONE_LEN, command.length()));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        Task currentTask \u003d tasksToDo.get(indexTaskDone-1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        currentTask.markAsDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        printTaskStatus(currentTask);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Adds a \"To Do\" task in the bot"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param command the current command passed from user input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void addNewToDo(String command){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        String extractedCommand;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            extractedCommand \u003d command.substring(TODO_LEN, command.length());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            //String[] commands \u003d extractedCommand.split(\" \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(extractedCommand \u003d\u003d null || extractedCommand.trim().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            ToDo newToDo \u003d new ToDo(extractedCommand);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            tasksToDo.add(newToDo);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            acknowledgeTaskAddition(newToDo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Sorry, but you need to describe what to do, master\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(EmptyDescriptionException e){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Sorry, but you need to describe what to do, master\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Adds a \"Deadline\" task in the bot"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param command the current command passed from user input"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void addDeadline(String command){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            int positionOfBy \u003d command.indexOf(\"/by\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(positionOfBy \u003d\u003d -1){"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new NoDateGivenException();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String extractedCommand \u003d command.substring(DEADLINE_LEN, positionOfBy);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(extractedCommand \u003d\u003d null || extractedCommand.trim().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String by \u003d command.substring(positionOfBy + 3, command.length());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(by \u003d\u003d null || by.trim().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new NoDateGivenException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            Deadline newDeadline \u003d new Deadline(extractedCommand, by);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            tasksToDo.add(newDeadline);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            acknowledgeTaskAddition(newDeadline);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(NoDateGivenException e){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"You need to tell me when this task is due, master\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(EmptyDescriptionException e){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Sorry, but you need to describe what deadline this is, master\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Adds a \"Event\" task in the bot"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param command the current command passed from user input"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void addEvent(String command){"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            int positionOfAt \u003d command.indexOf(\"/at\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(positionOfAt \u003d\u003d -1){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new NoDateGivenException();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String extractedCommand \u003d command.substring(EVENT_LEN, positionOfAt);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(extractedCommand \u003d\u003d null || extractedCommand.trim().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            String at \u003d command.substring(positionOfAt + 3, command.length());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            if(at \u003d\u003d null || at.trim().length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "                throw new NoDateGivenException();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            Event newEvent \u003d new Event(extractedCommand, at);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            tasksToDo.add(newEvent);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            acknowledgeTaskAddition(newEvent);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(NoDateGivenException e){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"You need to tell me when this event is at, master\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        } catch(EmptyDescriptionException e){"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "            System.out.println(\"Sorry, but you need to describe what event this is, master\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Acknowledges the addition of task by printing"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * that the bot understood the task"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param task the current task (To Do, Deadline or Event)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void acknowledgeTaskAddition(Task task){"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"    Understood. I\u0027ve added this into the list.. \");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        printTaskStatus(task);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(SEPARATING_LINE);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Prints the task status at hand"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * @param task the current task (To Do, Deadline or Event)"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void printTaskStatus(Task task){"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    * Prints goodbye"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public static void bye(){"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"Have a safe journey\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "michaeldinata": 242
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 5
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class EmptyCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 5
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class EmptyDescriptionException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 5
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class InvalidCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 5
    }
  },
  {
    "path": "src/main/java/exceptions/NoDateGivenException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class NoDateGivenException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 5
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return \"    [D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 14
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return \"    [E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 14
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void setDescription(String description){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 32
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "        return \"    [T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "michaeldinata"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "michaeldinata": 12
    }
  }
]
