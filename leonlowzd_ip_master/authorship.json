[
  {
    "path": "src/main/java/Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d \"[D]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Deadline(String description, String date) throws IllegalDate {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(date.contains(\"/by\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (date.replace(\"/by\",\"\").trim().isEmpty()) throw new IllegalDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else throw new IllegalDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d date.replace(\"/by\",\" (by:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date +\u003d \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString() + getDate();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate(){ return this.date; }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 34
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Save save \u003d new Save();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        //Read from memory"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        save.readFile(home+\"/Documents/log.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean hasExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // Problem will come if there are more than 100 tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//        Task[] list \u003d new Task[100];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printWelcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        while (!hasExit) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // Read User input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // process user input and decide what operation to use"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String operation \u003d extractOperationType(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String printStatement;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            switch (operation){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    hasExit \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    printStatement \u003d printByeMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    printStatement \u003d printFullList(numberOfTasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        printStatement \u003d markTaskAsDone(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch ( IllegalIndex e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        returnIllegalIndexStatement();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        printStatement \u003d deleteTask(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch ( IllegalIndex e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        returnIllegalIndexStatement();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        if(operation.equals(\"todo\")) printStatement \u003d createNewTask(operation,extractDescriptionFromString(operation,line),null,false);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        else printStatement \u003d createNewTask(operation,extractDescriptionFromString(operation,line),extractDateFromString(line),false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalDate e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        printEmptyDate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalDescription e){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        printEmptyDescription();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    printUnknownMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(printStatement);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            save.writeFile(home+\"/Documents/log.txt\",printFullList(numberOfTasks));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static String createNewTask(String taskType, String description, String date, Boolean status) throws IllegalDate, IllegalDescription {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String printStatement \u003d null;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(description.isEmpty()) throw new IllegalDescription();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ToDo t \u003d new ToDo(description);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                printStatement \u003d printNIncrementTask(numberOfTasks);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                Deadline d \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                list.add(d);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                printStatement \u003d printNIncrementTask(numberOfTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                Event e \u003d new Event(description, date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                list.add(e);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                printStatement \u003d printNIncrementTask(numberOfTasks);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (status) list.get(numberOfTasks-1).markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return printStatement;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function extracts the operation type from the user input\u0027s String"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractOperationType(String userInput) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String [] operation \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return operation[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function removes the task type and extracts the description of the task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDescriptionFromString(String type, String userInput) throws IllegalDescription, IllegalDate {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (type.equals(\"todo\")){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d userInput.replace(type, \"\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (description.contains(\"/\")) throw new IllegalDate();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d userInput.replace(type, \"\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d description.substring(0, description.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (description.replace(\" \",\"\").isEmpty()) throw new IllegalDescription();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch ( StringIndexOutOfBoundsException e ) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function extracts the date from the user input"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDateFromString(String userInput) throws IllegalDate {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String date \u003d userInput.substring(userInput.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (date.isEmpty()) throw new IllegalDate();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if (date.contains(\"/by\") \u003d\u003d date.contains((\"/at\"))) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void printUnknownMessage () {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\"+"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"+"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void returnIllegalIndexStatement () {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"☹ OOPS!!! Illegal index, it does not exist in the list\\n\" +"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    //print out empty date function"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void printEmptyDate () {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"☹ OOPS!!! Invalid Date input.\\n\" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // print out empty disc function"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void printEmptyDescription () {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"☹ OOPS!!! The Description cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function constructs the printout of the newly added task"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String printNIncrementTask(int index){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"     \" + list.get(index) + \"\\n\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"Now you have \"+numberOfTasks+\" in the list.\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function selects the tagged index from user input and deletes it from the list"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String deleteTask (String line) throws IllegalIndex {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String statement;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            numberOfTasks--;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//            System.out.println(selectedIndex);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            statement \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"Noted. I\u0027ve removed this task:  \\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + list.get(selectedIndex) +\"\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"Now you have \"+numberOfTasks+\" in the list.\\n\""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            list.remove(list.get(selectedIndex));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (RuntimeException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            numberOfTasks++;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalIndex();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function marks the tagged index from user input as complete and prints the statement"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String markTaskAsDone (String line) throws IllegalIndex  {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String statement;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            list.get(selectedIndex).markAsDone();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            statement \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    +\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + list.get(selectedIndex) + \"\\n\""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (RuntimeException e) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalIndex();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function prints the program\u0027s welcome message"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void printWelcomeMessage(){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String toPrint \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \" What can I do for you?\\n\""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.out.println(toPrint);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function prints the program\u0027s goodbye message"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String printByeMessage() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \" Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function prints the full list of Tasks"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String printFullList(int index) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String printStatement;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // This object acts as a buffer to build strings: they are based on mutable character arrays"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // This to reduce the cost of growing the string"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        sb.append(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (int i \u003d 0; i\u003c index; i++){"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int printOut \u003d i+1;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(printOut);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(\". \");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(list.get(i));"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(\"\\n\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        sb.append(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printStatement \u003d sb.toString();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return printStatement;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 249,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d \"[E]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Event(String description, String date) throws IllegalDate {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(date.contains(\"/at\")){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (date.replace(\"/at\",\"\").trim().isEmpty()) throw new IllegalDate();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else throw new IllegalDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d date.replace(\"/at\", \" (at:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date +\u003d \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString() + getDate();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 32
    }
  },
  {
    "path": "src/main/java/Duke/Save.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileNotFoundException;  // Import this class to handle errors"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner; // Import the Scanner class to read text file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Save extends Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String[] toDiscard \u003d {\"____________________________________________________________\","
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Here are the tasks in your list:\"};"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Save() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void writeFile(String homeDirectory, String statement) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // Write in file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        bw.write(statement.trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // Close connection"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void readFile(String homeDirectory) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if(!file.exists()) return;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Scanner myReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (data.contains(toDiscard[0])||data.contains(toDiscard[1])) continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String taskType \u003d extractTaskType(data);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                boolean status \u003d extractDoneStatus(data);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String description \u003d extractDescription(data,taskType);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String date \u003d null;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (taskType.equals(\"event\")||taskType.equals(\"deadline\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    date \u003d extractDate(data,taskType);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                Duke.createNewTask(taskType,description,date,status);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalDescription | IllegalDate illegalDescription) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            illegalDescription.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractTaskType(String line) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String operation \u003d line.split(\"]\")[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (operation.contains(\"T\")) taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if (operation.contains(\"D\")) taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else taskType \u003d \"event\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static boolean extractDoneStatus(String line) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String operation \u003d line.split(\"]\")[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        isDone \u003d operation.contains(\"\\u2713\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//        System.out.println(operation);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDescription(String line, String type) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String statement;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        statement \u003d line.split(\" \",3)[2].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (type.contains(\"deadline\")||type.contains(\"event\")){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (type.contains(\"deadline\")) statement \u003d statement.split(\"by:\")[0];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            else  statement \u003d statement.split(\"at:\")[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            statement \u003d statement.replace(\"(\",\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return statement;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDate(String line, String type) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String operation \u003d line.split(\":\")[1].trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(type.contains(\"deadline\")) operation \u003d \"/by \"+operation;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else operation \u003d \"/at \"+operation;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        operation \u003d operation.replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//        System.out.println(operation);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return operation;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 95
    }
  },
  {
    "path": "src/main/java/Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getStatusIcon() +\" \"+ this.description.trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 24
    }
  },
  {
    "path": "src/main/java/Duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String TASK_TYPE \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 18
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDate extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDescription extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 5
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalIndex.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalIndex extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 37
    }
  }
]
