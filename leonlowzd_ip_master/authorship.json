[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Duke is a Java application that is a Personal Assistant Chat bot that helps manage users with their tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________ "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Duke supports 3 tasks types:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. Todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. Deadlines"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. Events"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Deadlines and Events will require a date. Duke will convert date to Day-Month-Year format (for example: 02 October 2020) if user inputs in YYYY-MM-DD format, else the date will be recorded as per user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### **Here is the full feature list of Duke:**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### **Command Features:**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### ToDo: `todo`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Creates a todo task and adds it to the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "todo print assignment"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Nice, I\u0027ve added the following task to the list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[T][✘] print assignment"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Now you have 1 in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Deadline: `deadline`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Creates a Deadline task and adds it to the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "deadline CS2113 assignment /by 2020-10-02"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Nice, I\u0027ve added the following task to the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[D][✘] CS2113 assignment (by: 02 October 2020)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Now you have 2 in the list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Event: `event`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Creates an Event task and adds it to the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "event family dinner /at This thursday 7:00pm"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Nice, I\u0027ve added the following task to the list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[E][✘] family dinner (at: This thursday 7:00pm)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Now you have 3 in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### List: `list`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "List out all the tasks in the list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. [T][✘] print assignment"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "2. [D][✘] CS2113 assignment (by: 02 October 2020)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "3. [E][✘] family dinner (at: This thursday 7:00pm)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Done: `done`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Marks a specific task as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[T][✓] print assignment"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Delete: `delete`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Deletes a specific task from the list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "[D][✘] CS2113 assignment (by: 02 October 2020)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Now you have 2 in the list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Find: `find`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Find keyword in task list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "find family"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "1. [E][✘] family dinner (at: This thursday 7:00pm)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Bye: `bye`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "**Sample printout:**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "bye"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Good bye!"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### **Back End Features:**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Save (Write) "
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Automatically saves all tasks into a text file at `~/Documents` whenever a new Task is added"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "#### Save (Read) "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "At start of the program, Duke will load saved Tasks from `~/Documents`,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Duke will ensure that text file is not corrupted and is at the correct format "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Command is **CASE SENSITIVE**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Feature  | Usage | Example |"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| ---------| ------ | ------- |"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| ToDo |`todo TASK_DESCRIPTION` | `todo Send email to prof ` |"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Deadline | `deadline TASK_DESCRIPTION /by DATE` | `deadline CS2113 IP /by 10-2 before tutorial`  `event CS2113 IP /by 2020-10-2`|"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Event | `event TASK_DESCRIPTION /at DATE` | `event CS2113 tutorial /at 10-2 1300` or `event CS2113 tutorial /at 2020-10-2`|"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| List |`list` | `list` |"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Done |`done INDEX`| `done 1` |"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Delete | `delete INDEX` | `delete 1` |"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Find |`find KEYWORD` | `find tutorial` |"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Bye |`bye` | `bye` |"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "## Error Messages"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "Duke is intelligent enough to handle most of the user input errors, the table below highlights the error messages and shows what they mean:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### Command Error Messages"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Message | Description |"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|---------|-------------|"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(` | An invalid Command is inputted, check case sensitivity|"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`OOPS!!! Illegal index, it does not exist in the list` | Specifically for `done` and `delete` command; Index inputted is: Out of the list or not an `int` character|"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`☹ OOPS!!! Illegal date format!! /at for events and /by for deadlines`| Specifically for `Event` and `Deadline` command; Either date is empty or wrong date identifier is used|"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`☹ OOPS!!! Empty date` | Date is empty|"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| `OOPS!!! Empty description`| Task description is empty|"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "### File Errors Messages"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| Message | Description |"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "| --------|-------------|"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`Unable to write file to text file.` | File directory cannot be found | "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`Unable to open file from memory.`| File cannot be read from memory, task list will be resetted |"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "|`Text file is corrupted. Some of the pre-existing tasks might not be loaded.`| File is corrupted with invalid inputs |"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 161,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.ui.TextUi;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Duke is a Personal Assistant Chat bot that keep tracks of schedule."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * @author Low Zhen Dong Leon"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * @since 2020-09-30"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    //retrieve home directory \u0026 set homeDirectory"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final static String HOME_DIRECTORY \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final static String STORE_DIRECTORY \u003d HOME_DIRECTORY + \"/Documents/log.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs program until exit command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Duke.run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        runCommandLoop();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void start() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        storage.readFile(STORE_DIRECTORY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void runCommandLoop() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String userCommandText \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            command \u003d Parser.parseCommand(userCommandText);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            command.setData(taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            command.run();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            storage.writeFile(STORE_DIRECTORY);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } while (!ByeCommand.isExit(command));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 57,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDescription;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.UserInputExtractor.getDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.UserInputExtractor.getDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.UserInputExtractor.getIndexFromString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_DATE_ERROR;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_DATE_EMPTY;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_DESCRIPTION_ERROR;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_INVALID_COMMAND_ERROR;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_INDEX_ERROR;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.DEADLINE_DATE_IDENTIFIER;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.EVENT_DATE_IDENTIFIER;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Parses User Input into command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Parses user input into taskCategory for execution."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param userInput full user input string"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String[] words \u003d userInput.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        final String commandWord \u003d words[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case AddTaskCommand.COMMAND_WORD_TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case AddTaskCommand.COMMAND_WORD_DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case AddTaskCommand.COMMAND_WORD_EVENT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareAddCommand(arguments, commandWord);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareDoneCommand(arguments);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareDeleteCommand(arguments);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case ByeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareByeCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareListCommand();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return prepareFindCommand(arguments);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_INVALID_COMMAND_ERROR);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareDeleteCommand(String arguments) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d getIndexFromString(arguments);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (selectedIndex \u003c 0) throw new IllegalIndex();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new DeleteCommand(selectedIndex);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalIndex e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_INDEX_ERROR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareDoneCommand(String arguments) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d getIndexFromString(arguments);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (selectedIndex \u003c 0) throw new IllegalIndex();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new DoneCommand(selectedIndex);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalIndex e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_INDEX_ERROR);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareListCommand() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareByeCommand() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return new ByeCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareAddCommand(String arguments, String commandWord) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (commandWord.equals(AddTaskCommand.COMMAND_WORD_DEADLINE)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                date \u003d getDate(arguments, DEADLINE_DATE_IDENTIFIER);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else if (commandWord.equals(AddTaskCommand.COMMAND_WORD_EVENT)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                date \u003d getDate(arguments, EVENT_DATE_IDENTIFIER);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                date \u003d null;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            description \u003d getDescription(commandWord, arguments);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (description.isEmpty()) throw new IllegalDescription();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new AddTaskCommand(commandWord, description, date, true);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalDate e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_DATE_EMPTY);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_DATE_ERROR);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalDescription e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            return new InvalidCommand(MESSAGE_DESCRIPTION_ERROR);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static Command prepareFindCommand(String arguments) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return new FindCommand(arguments);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 136
    }
  },
  {
    "path": "src/main/java/Duke/UserInputExtractor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class that handles extraction of user arguments to Strings"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class UserInputExtractor extends Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public UserInputExtractor() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static String getDescription(String typeOfTask, String arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (typeOfTask.equals(AddTaskCommand.COMMAND_WORD_TODO)) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            description \u003d arguments;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            description \u003d arguments.substring(0, arguments.lastIndexOf(\"/\")).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static String getDate(String arguments, String eventDateIdentifier) throws IllegalDate {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d arguments.substring(arguments.indexOf(eventDateIdentifier));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d date.replace(eventDateIdentifier, \"\").trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (date.isEmpty()) throw new IllegalDate();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static int getIndexFromString(String arguments) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            index \u003d Integer.parseInt(arguments.trim()) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // If unable to parse Integer"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (RuntimeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            index \u003d -1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 42
    }
  },
  {
    "path": "src/main/java/Duke/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents AddTaskCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TODO_ADD \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String DEADLINE_ADD \u003d \"deadline\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String EVENT_ADD \u003d \"event\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final Boolean mode;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the variables requires to add a task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param type        Type of task to construct in String"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param description Description of task to construct in String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param date        Date of task to construct in String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param mode        if true, constructed task will be printed"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public AddTaskCommand(String type, String description, String date, Boolean mode) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.mode \u003d mode;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs the AddTaskCommand"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case TODO_ADD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tasks.addNewTask(todo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (mode) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ui.printCreatedTask(todo, tasks.getNumberOfTasksInList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case DEADLINE_ADD:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tasks.addNewTask(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (mode) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ui.printCreatedTask(deadline, tasks.getNumberOfTasksInList());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        case EVENT_ADD:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tasks.addNewTask(event);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (mode) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ui.printCreatedTask(event, tasks.getNumberOfTasksInList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 72
    }
  },
  {
    "path": "src/main/java/Duke/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Exits the program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the isExit flag to true if there an instance of ByeCommand"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static boolean isExit(Command command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // instanceof returns false if it is null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return command instanceof ByeCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs the ByeCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 25
    }
  },
  {
    "path": "src/main/java/Duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Abstract class for Duke\u0027s Commands"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the entire TaskList to the Command Class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setData(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    abstract public void run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 25
    }
  },
  {
    "path": "src/main/java/Duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Deletes task from list from a given index"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final int indexToDelete;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the index to delete in TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param indexToDelete Index of task to delete in TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.indexToDelete \u003d indexToDelete;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs DeleteCommand"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (indexToDelete \u003e tasks.getNumberOfTasksInList() - 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printIllegalIndexMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Task TaskToDelete \u003d tasks.getTask(indexToDelete);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tasks.removeTask(indexToDelete);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printDeleteTaskMessage(TaskToDelete, tasks.getNumberOfTasksInList());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 37
    }
  },
  {
    "path": "src/main/java/Duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Marks given task as done from the list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final int indexToMark;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the index to done in TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param indexToMark Index of task to mark as dome in TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public DoneCommand(int indexToMark) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.indexToMark \u003d indexToMark;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs the DoneCommand"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (indexToMark \u003e tasks.getNumberOfTasksInList() - 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printIllegalIndexMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tasks.getTask(indexToMark).markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printTaskAsDoneMessage(tasks.getTask(indexToMark));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 32
    }
  },
  {
    "path": "src/main/java/Duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Finds any matched Tasks from the list with a given keyword"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the keyword to find in TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param keyword keyword to find in TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs the FindCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Task task : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (task.getDescription().contains(this.keyword)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                stringBuilder.append(index + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                stringBuilder.append(\". \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                stringBuilder.append(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                stringBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.printTaskListView(stringBuilder.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 40
    }
  },
  {
    "path": "src/main/java/Duke/commands/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Invalid command, will print the corresponding error message fed from the error"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public final String printToUser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the Message to print for InvalidCommand"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param printToUser message to print to user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public InvalidCommand(String printToUser) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.printToUser \u003d printToUser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs the InvalidCommand"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.printCustomError(this.printToUser + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 25
    }
  },
  {
    "path": "src/main/java/Duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Lists all Tasks in the list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the ListCommand"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Runs ListCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Task task : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            stringBuilder.append(index + 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            stringBuilder.append(\". \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            stringBuilder.append(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            stringBuilder.append(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.printTaskListView(stringBuilder.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 33
    }
  },
  {
    "path": "src/main/java/Duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Dictionary for Duke\u0027s messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_ADD_NEW_TASK \u003d \"Nice, I\u0027ve added the following task to the list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_REMOVED_TASK \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_SHOW_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_MARKED_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_ERROR \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INDEX_ERROR \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"☹ OOPS!!! Illegal index, it does not exist in the list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_DATE_ERROR \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"☹ OOPS!!! Illegal date format!! /at for events and /by for deadlines\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_DATE_EMPTY \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"☹ OOPS!!! Empty date\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_DESCRIPTION_ERROR \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"☹ OOPS!!! Empty description\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_UNABLE_TO_WRITE_FILE \u003d \"Unable to write file to text file.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_UNABLE_TO_OPEN_FILE \u003d \"Unable to open file from memory.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_FILE_CORRUPTED \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            \"Text file is corrupted. Some of the pre-existing tasks might not be loaded.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 29
    }
  },
  {
    "path": "src/main/java/Duke/common/TaskNames.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Dictionary for Tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class TaskNames {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String TODO_DISPLAY \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String DEADLINE_DISPLAY \u003d \"D\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String DEADLINE_DATE_IDENTIFIER \u003d \"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String EVENT_DISPLAY \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String EVENT_DATE_IDENTIFIER \u003d \"/at\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 18
    }
  },
  {
    "path": "src/main/java/Duke/data/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.commands.AddTaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.FileCorrupted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.*;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.*;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class handling the reading and writing of existing task into/out to a text file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String TEXT_DIVIDER \u003d \" | \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Storage(TaskList tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Write current TaskList into text file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param homeDirectory Directory to store the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void writeFile(String homeDirectory) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // Write in file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            StringBuilder stringBuilder \u003d convertListToTextFormat(this.tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            bufferedWriter.write(stringBuilder.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // Close connection"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printCustomError(MESSAGE_UNABLE_TO_WRITE_FILE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private StringBuilder convertListToTextFormat(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d taskList.getAllTasks();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String type \u003d task.getTaskType().replace(\"[\", \"\").replace(\"]\", \"\") + TEXT_DIVIDER;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String doneStatus \u003d task.getStatus() + TEXT_DIVIDER;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String date \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!(type.equals(\"T | \"))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                date \u003d TEXT_DIVIDER + task.getDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            stringBuilder.append(type).append(doneStatus).append(description).append(date).append(\"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return stringBuilder;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Reads text file and creates Tasks based in reference from the text file."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param homeDirectory Directory to store the text file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void readFile(String homeDirectory) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Scanner myReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            convertTextToTask(myReader);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printCustomError(MESSAGE_UNABLE_TO_OPEN_FILE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileCorrupted e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.printCustomError(MESSAGE_FILE_CORRUPTED);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void convertTextToTask(Scanner myReader) throws FileCorrupted {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String[] list \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String type \u003d extractTaskType(list[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                boolean status \u003d extractDoneStatus(list[1].trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String description \u003d list[2].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                String date \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (!(type.equals(TODO))) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    date \u003d list[3].trim();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (description.isEmpty() || date.isEmpty()\u0026\u0026(!type.equals(TODO))) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    throw new FileCorrupted();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                AddTaskCommand add \u003d new AddTaskCommand(type, description, date, false);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                add.setData(tasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                add.run();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (status) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    tasks.getTask(tasks.getNumberOfTasksInList() - 1).markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileCorrupted fileCorrupted) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new FileCorrupted();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private boolean extractDoneStatus(String status) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean isFinished;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        isFinished \u003d !status.equals(\"0\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return isFinished;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String extractTaskType(String type) throws FileCorrupted {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (type.contains(EVENT_DISPLAY)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d EVENT;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else if (type.contains(TODO_DISPLAY)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d TODO;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else if (type.contains(DEADLINE_DISPLAY)){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d DEADLINE;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new FileCorrupted();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 139
    }
  },
  {
    "path": "src/main/java/Duke/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Represents the task in a list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Constructs empty Task List."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Add new Task into the list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addNewTask(Task newTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Remove Task from the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param index index to remove from"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns Task from the list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param index index to retrieve"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the number of tasks in the list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public int getNumberOfTasksInList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the entire Task List"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 60
    }
  },
  {
    "path": "src/main/java/Duke/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.DEADLINE_DISPLAY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class representing the Deadline Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d DEADLINE_DISPLAY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the description and date for Deadline Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param description Description of the Task in String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param date        Date of the Event in String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        setDate(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return TASK_TYPE."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return date of the task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the date of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets all information of the Deadline task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return information of the task in String."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + super.toString() + setPrintDate();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String setPrintDate() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String tempDate \u003d getDate();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tempDate \u003d localDate.format(formatter);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.date \u003d tempDate;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \" (by: \" + tempDate + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 76
    }
  },
  {
    "path": "src/main/java/Duke/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.EVENT_DISPLAY;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class representing the Event Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d EVENT_DISPLAY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the description and date for Event Task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param description Description of the Task in String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param date        Date of the Event in String"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        setDate(date);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return TASK_TYPE."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the date of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return date of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the date of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets all information of the Event task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return information of the task in String."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + super.toString() + setPrintDate();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String setPrintDate() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String tempDate \u003d getDate();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            tempDate \u003d localDate.format(formatter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            this.date \u003d tempDate;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \" (at: \" + tempDate + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 76
    }
  },
  {
    "path": "src/main/java/Duke/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Abstract Class for all of the different types of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the description of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the Task as done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the type of the Task in String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the Status of the Task in String."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the Status of the Task in Symbol Format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the Description of the Task in String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the entire setup of the Task in String."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getStatusIcon() + \" \" + this.description.trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns the date of the Task if applicable."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public abstract String getDate();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 64
    }
  },
  {
    "path": "src/main/java/Duke/data/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.TaskNames.TODO_DISPLAY;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class representing the ToDo Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final String TASK_TYPE \u003d TODO_DISPLAY;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Sets the description for ToDo Task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param description Description of the Task in String"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the date of the task, in this case, null."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets the type of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return TASK_TYPE."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Gets all information of the Event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return information of the task in String."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return \"[\" + getTaskType() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 51
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/FileCorrupted.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Signals that text file is in the wrong format/corrupted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class FileCorrupted extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Signals that an invalid date/date identifier is inputted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDate extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Signals that an empty description is inputted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDescription extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 8
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalIndex.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Signals that an invalid index/out of bounds index have been inputted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalIndex extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Signals that an invalid task type have been inputted"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalType extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 7
    }
  },
  {
    "path": "src/main/java/Duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.data.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_WELCOME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_GOODBYE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_SHOW_LIST;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_ADD_NEW_TASK;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_REMOVED_TASK;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_MARKED_AS_DONE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.MESSAGE_INDEX_ERROR;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Class representing the UI of Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String COMMENT_LINE_ESCAPE_CHAR \u003d \"\\\\\\\\\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String COMMENT_LINE_ASTERISK \u003d \"\\\\*\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Handles the input and output of the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private boolean removeEmptyLines(String rawInputLine) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return rawInputLine.trim().isEmpty() || isSpecialCharacters(rawInputLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private boolean isSpecialCharacters(String rawInputLine) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return rawInputLine.trim().matches(COMMENT_LINE_ESCAPE_CHAR)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                || rawInputLine.trim().matches(COMMENT_LINE_ASTERISK);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Retrieve User Input, incorrect command will be rejected."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        while (removeEmptyLines(fullInputLine)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Welcome Message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                MESSAGE_WELCOME,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                DIVIDER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Exit Message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_GOODBYE, DIVIDER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints the list of all of the tasks."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printTaskListView(String toPrint) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_SHOW_LIST, toPrint, DIVIDER);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints created Task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param task          newly created task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param numberOfTasks total number of tasks in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printCreatedTask(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String numberOfTaskMessage \u003d \"Now you have \" + numberOfTasks + \" in the list.\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_ADD_NEW_TASK, task.toString(), numberOfTaskMessage, DIVIDER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Deleted task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param task          task to be deleted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param numberOfTasks total number of tasks in the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printDeleteTaskMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String numberOfTaskMessage \u003d \"Now you have \" + numberOfTasks + \" in the list.\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_REMOVED_TASK, task.toString(), numberOfTaskMessage, DIVIDER);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Completed task."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param task task marked as completed."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printTaskAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_MARKED_AS_DONE, task.toString(), DIVIDER);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Illegal Index Message."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printIllegalIndexMessage() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, MESSAGE_INDEX_ERROR, DIVIDER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prints Custom Error Message."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param error Error message to print."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void printCustomError(String error) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        printOut(DIVIDER, error, DIVIDER);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void printOut(String... text) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (String t : text) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 137
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 37
    }
  }
]
