[
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalIndex;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    //retrieve home directory \u0026 set homeDirectory"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final static String homeDirectory \u003d home+\"/Documents/log.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static TextUi ui \u003d new TextUi();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        LogFile logFile \u003d new LogFile();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        ui.showWelcomeMessage(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        //Read from memory \u0026 location to read and write file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        logFile.readFile(homeDirectory);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        boolean hasExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "//        printWelcomeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        while (!hasExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String userCommand \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // process user input and decide what operation to use"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String operation \u003d extractOperationType(userCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            switch (operation){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    hasExit \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showTaskListView(taskList.printAllTask());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        markTaskAsDone(userCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalIndex e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        ui.showIllegalIndexMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        deleteTask(userCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalIndex e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        ui.showIllegalIndexMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        String taskDescription \u003d extractDescriptionFromString(operation, userCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        if (operation.equals(\"todo\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                            createNewTask(operation, taskDescription,null,false,true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        else{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                            String date \u003d extractDateFromString(userCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                            createNewTask(operation, taskDescription ,date ,false,true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalDate e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        ui.showIllegalDateMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    } catch (IllegalDescription e){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        ui.showIllegalDescriptionMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showIllegalCommandMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            logFile.writeFile(homeDirectory,taskList.printAllTask());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static void createNewTask(String taskType, String description, String date,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                                     Boolean status, Boolean mode)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws IllegalDate, IllegalDescription {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(description.isEmpty()) throw new IllegalDescription();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                taskList.addNewTask(todo);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (mode) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showCreatedTask(todo,numberOfTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                taskList.addNewTask(deadline);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (mode) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showCreatedTask(deadline,numberOfTasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                taskList.addNewTask(event);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (mode){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                    ui.showCreatedTask(event,numberOfTasks);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (status) taskList.getTask(numberOfTasks-1).markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function extracts the operation type from the user input\u0027s String"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractOperationType(String userInput) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String [] operation \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return operation[0];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function removes the task type and extracts the description of the task"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDescriptionFromString(String type, String userInput)"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throws IllegalDescription, IllegalDate {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (type.equals(\"todo\")){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d userInput.replace(type, \"\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                if (description.contains(\"/\")) throw new IllegalDate();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d userInput.replace(type, \"\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                description \u003d description.substring(0, description.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (description.replace(\" \",\"\").isEmpty()) throw new IllegalDescription();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch ( StringIndexOutOfBoundsException e ) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function extracts the date from the user input"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDateFromString(String userInput) throws IllegalDate {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String date \u003d userInput.substring(userInput.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (date.isEmpty()) throw new IllegalDate();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if (date.contains(\"/by\") \u003d\u003d date.contains((\"/at\"))) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function selects the tagged index from user input and deletes it from the list"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void deleteTask (String line) throws IllegalIndex {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (selectedIndex\u003c0) throw new IllegalIndex();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            numberOfTasks--;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showDeleteTaskMessage(taskList.getTask(selectedIndex),numberOfTasks);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskList.removeTask(selectedIndex);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (RuntimeException e) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalIndex();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    // This function marks the tagged index from user input as complete and prints the statement"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static void markTaskAsDone (String line) throws IllegalIndex  {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            int selectedIndex \u003d Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskList.getTask(selectedIndex).markAsDone();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            ui.showTaskAsDoneMessage(taskList.getTask(selectedIndex));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (RuntimeException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalIndex();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 189,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/LogFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDescription;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.FileNotFoundException;  // Import this class to handle errors"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner; // Import the Scanner class to read text file"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class LogFile extends Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String TEXT_DIVIDER \u003d \" | \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public LogFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void writeFile(String homeDirectory, String statement) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // Write in file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder sb \u003d convertListToTextFormat(statement);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        bw.write(sb.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        // Close connection"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private StringBuilder convertListToTextFormat(String statement) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String[] lines \u003d statement.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (String line : lines){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractLineToText(sb, line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return sb;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void extractLineToText(StringBuilder sb, String line) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (!line.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String extractedType \u003d convertTypeToText(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String extractedDoneStatus \u003d convertDoneStatusToText(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String extractedDescription \u003d convertDescriptionToText(line, extractedType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String extractedDate \u003d convertDateToText(extractedType, line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(extractedType).append(extractedDoneStatus).append(extractedDescription).append(extractedDate).append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String convertTypeToText(String line) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return line.split(\"]\")[0].replace(\"[\",\"\") +TEXT_DIVIDER;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String convertDescriptionToText(String line, String extractedType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String extractedDescription \u003d line.split(\" \",3)[2].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (extractedType.contains(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDescription \u003d extractedDescription.split(\"\\\\(at:\")[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if (extractedType.contains(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDescription \u003d extractedDescription.split(\"\\\\(by:\")[0].trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return extractedDescription;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String convertDateToText(String extractedType, String line) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        line \u003d line.split(\" \",3)[2].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String extractedDate \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(extractedType.contains(\"E\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDate \u003d TEXT_DIVIDER+ line.split(\"\\\\(at:\")[1].trim().replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } else if (extractedType.contains(\"D\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDate \u003d TEXT_DIVIDER+ line.split(\"\\\\(by:\")[1].replace(\")\",\"\").trim();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return extractedDate;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String convertDoneStatusToText(String line) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String extractedDoneStatus \u003d line.split(\"]\")[1].replace(\"[\",\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (extractedDoneStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDoneStatus \u003d \"1\"+TEXT_DIVIDER;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            extractedDoneStatus \u003d \"0\"+TEXT_DIVIDER;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return extractedDoneStatus;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void readFile(String homeDirectory) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            File file \u003d new File(homeDirectory);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (!file.exists()){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Scanner myReader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            convertTextToTask(myReader);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            myReader.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        } catch (IllegalDescription | IllegalDate illegalDescription) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            illegalDescription.printStackTrace();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private void convertTextToTask(Scanner myReader) throws IllegalDate, IllegalDescription {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String taskType \u003d extractTaskType(data.split(\"\\\\|\")[0].trim());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            boolean status \u003d extractDoneStatus(data.split(\"\\\\|\")[1].trim());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String description \u003d extractDescription(data.split(\"\\\\|\")[2].trim(),taskType);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            String date \u003d extractDate(data,taskType);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            // Create New Task from Duke Main function"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            Duke.createNewTask(taskType,description,date,status,false);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractTaskType(String type) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (type.contains(\"E\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d \"event\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if(type.contains(\"T\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d \"todo\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            taskType \u003d \"deadline\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static boolean extractDoneStatus(String status) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return status.contains(\"1\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDescription(String description, String type) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (type.contains(\"deadline\")){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            description \u003d description.split(\"by:\")[0];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            description \u003d description.split(\"at:\")[0];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        description \u003d description.replace(\"(\",\"\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static String extractDate(String line, String type) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if (type.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            date \u003d \"/by \"+line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else if (type.contains(\"event\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            date \u003d \"/at \"+line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            date \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 158
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void addNewTask(Task newTask) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList.add(newTask);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String printAllTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (Task task :taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(index+1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(\". \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            sb.append(\"\\\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 40
    }
  },
  {
    "path": "src/main/java/Duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Container for user visible messages."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"Good bye!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_ADD_NEW_TASK \u003d \"Nice, I\u0027ve added the following task to the list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_REMOVED_TASK \u003d \"Noted. I\u0027ve removed this task: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_SHOW_LIST \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_MARKED_AS_DONE \u003d \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \" Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            + \" What can I do for you?\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_INDEX_ERROR \u003d \"☹ OOPS!!! Illegal index, it does not exist in the list\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_DATE_ERROR \u003d \"☹ OOPS!!! Illegal date format!!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final String MESSAGE_DESCRIPTION_ERROR \u003d \"☹ OOPS!!! Illegal description\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 22
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDate extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalDescription.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalDescription extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 5
    }
  },
  {
    "path": "src/main/java/Duke/exceptions/IllegalIndex.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class IllegalIndex extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 4
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d \"[D]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Deadline(String description, String date) throws IllegalDate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(date.contains(\"/by\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (date.replace(\"/by\",\"\").trim().isEmpty()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                throw new IllegalDate();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d date.replace(\"/by\",\" (by:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date +\u003d \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString() + getDate();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 43
    }
  },
  {
    "path": "src/main/java/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.exceptions.IllegalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected final String TASK_TYPE \u003d \"[E]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Event(String description, String date) throws IllegalDate {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        if(date.contains(\"/at\")){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            if (date.replace(\"/at\",\"\").trim().isEmpty()){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                throw new IllegalDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            setDate(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            throw new IllegalDate();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void setDate(String date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date \u003d date.replace(\"/at\", \" (at:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        date +\u003d \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString() + getDate();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 38
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getStatusIcon() +\" \"+ this.description.trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 26
    }
  },
  {
    "path": "src/main/java/Duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private String TASK_TYPE \u003d \"[T]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return getTaskType() + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return this.TASK_TYPE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 21
    }
  },
  {
    "path": "src/main/java/Duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "package Duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import Duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "import static Duke.common.Messages.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /** Offset required to convert between 1-indexing and 0-indexing.  */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /** A platform independent line separator. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String LS \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /** Format of indexed list item */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String MESSAGE_INDEXED_LIST_ITEM \u003d \"\\t%1$d. %2$s\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /** Format of a comment input line. Comment lines are silently consumed when reading user input. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private static final String COMMENT_LINE_FORMAT_REGEX \u003d \"#.*\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TextUi() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public TextUi(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns true if the user input line should be ignored."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Input should be ignored if it is parsed as a comment, is only whitespace, or is empty."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return true if the entire user input line should be ignored."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private boolean removeEmptyLines(String rawInputLine) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return rawInputLine.trim().isEmpty() || isCommentLine(rawInputLine);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Returns true if the user input line is a comment line."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param rawInputLine full raw user input line."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return true if input line is a comment."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    private boolean isCommentLine(String rawInputLine) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return rawInputLine.trim().matches(COMMENT_LINE_FORMAT_REGEX);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Prompts for the command and reads the text entered by the user."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Ignores empty, pure whitespace, and comment lines."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Echos the command back to the user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @return command (full line) entered by the user"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        while (removeEmptyLines(fullInputLine)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * @param version current version of the application."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showWelcomeMessage(String version) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                DIVIDER,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                MESSAGE_WELCOME,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "                DIVIDER);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_GOODBYE, DIVIDER);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /** Shows message(s) to the user */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "            out.println(m.replace(\"\\\\n\", LS));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     * Shows a list of persons to the user, formatted as an indexed list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showTaskListView(String taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_SHOW_LIST,taskList, DIVIDER);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showCreatedTask(Task task, int numberOfTasks){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String numberOfTaskMessage \u003d \"Now you have \"+numberOfTasks+\" in the list.\\n\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_ADD_NEW_TASK, task.toString(), numberOfTaskMessage, DIVIDER);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showDeleteTaskMessage(Task task, int selectedIndex) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        String numberOfTaskMessage \u003d \"Now you have \"+selectedIndex+\" in the list.\\n\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_REMOVED_TASK, task.toString(), numberOfTaskMessage, DIVIDER);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showTaskAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_MARKED_AS_DONE,task.toString(), DIVIDER);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showIllegalCommandMessage() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER,MESSAGE_INVALID_COMMAND_FORMAT,DIVIDER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showIllegalDateMessage(){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_DATE_ERROR, DIVIDER);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showIllegalDescriptionMessage(){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_DESCRIPTION_ERROR, DIVIDER);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    public void showIllegalIndexMessage(){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "        showToUser(DIVIDER, MESSAGE_INDEX_ERROR, DIVIDER);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 142
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "leonlowzd"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "leonlowzd": 1,
      "-": 37
    }
  }
]
