[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.lang.String;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private TaskManager taskManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            storage.checkFileExists(FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            taskManager \u003d new TaskManager(storage.loadFromFile());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printLoadSuccessMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printLoadErrorMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        boolean isExit\u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            String line \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Command command \u003d parser.parseCommand(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                command.executeCommand(taskManager, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                isExit\u003d command.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Ui.printInvalidCommandMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }  catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Ui.printErrorNoNumMessage();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch (InvalidArgumentException e){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Ui.printErrorNoDescriptionMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch (NullPointerException e){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } while (!isExit);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "amalinasani": 61,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public AddTaskCommand(String taskType, String taskDescription){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskManager.addTask(taskType, taskDescription);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            storage.saveToFile(taskManager.getTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printLoadErrorMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 25
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"LIST\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"BYE\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"DELETE\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_SAVE \u003d \"SAVE\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"DONE\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"TODO\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"DEADLINE\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"EVENT\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"FIND\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public abstract void executeCommand(TaskManager taskManager, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class DeleteTaskCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final int  index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public DeleteTaskCommand(int index){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskManager.deleteTask(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskManager.markTaskAsDone(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final String word;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public FindCommand(String word){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskManager.findTask(word);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskManager.listAllTasks();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 12
    }
  },
  {
    "path": "src/main/java/duke/command/SaveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.taskmanager.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class SaveCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void executeCommand(TaskManager taskManager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            storage.saveToFile(taskManager.getTasks());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printLoadErrorMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/FileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class FileFormatException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 5
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "amalinasani": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class InvalidIndexException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    //"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 5
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Handles user command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Create command object for user command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Command parseCommand(String userInput) throws InvalidCommandException, InvalidIndexException, InvalidArgumentException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        String[] splitUserInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        String inputCommand \u003d splitUserInput[0].toUpperCase();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        switch (inputCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_LIST:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_BYE:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_SAVE:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            command \u003d new SaveCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_DELETE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                int index \u003d Integer.parseInt(splitUserInput[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                command \u003d new DeleteTaskCommand(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_DONE:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                int index \u003d Integer.parseInt(splitUserInput[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                command \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_FIND:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                String word \u003d splitUserInput[1].toUpperCase();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                command \u003d new FindCommand(word);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                throw new InvalidIndexException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_TODO:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        case Command.COMMAND_EVENT:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                command \u003d new AddTaskCommand(inputCommand, splitUserInput[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } catch(IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                throw new InvalidArgumentException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 76
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.exception.FileFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private static final String FILE_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        File fileDir \u003d new File(FILE_DIR);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        if (!fileDir.exists()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            fileDir.mkdir();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            checkFileExists(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printLoadErrorMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Check if file exists"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public File checkFileExists(String filePath) throws IOException{"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        File dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        if (!dataFile.exists()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            dataFile.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return dataFile;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Load data from file"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFromFile(){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            File dataFile \u003d checkFileExists(FILE_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Scanner in \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            while(in.hasNext()){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                String[] taskDetails \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                switch(taskDetails[0]){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    taskList.add(new ToDo(taskDetails[2]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    taskList.add(new Deadline(taskDetails[2],taskDetails[3]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    taskList.add(new Event(taskDetails[2], taskDetails[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    throw new FileFormatException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                if (taskDetails[1].equals(\"1\")){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    int taskIndex \u003d taskList.size()-1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    taskList.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch(FileFormatException | IOException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Save task list to file"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void saveToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            int status \u003d (task.getStatus() ? 1 : 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            fw.write(task.getTaskType()"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    + \" | \" + status"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    + \" | \" + task.getDescription()"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    + \" | \" + task.getDate()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        Ui.printSaveSuccessMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 96
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Deadline(String description, String byDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.date \u003d byDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskType \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return \"[\" + taskType +\"]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Event(String description, String eventDate) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.date \u003d eventDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskType \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return \"[\" + taskType +\"]\" + super.toString() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    protected char taskType;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskType \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.date \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public boolean getStatus(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public char getTaskType(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 44
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return \"[\" + taskType +\"]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 14
    }
  },
  {
    "path": "src/main/java/duke/taskmanager/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.taskmanager;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public TaskManager(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Add task to taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void addTask(String taskType, String details){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        Task taskAdded;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        String[] detailsWords;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            if (taskType.equals(\"DEADLINE\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                detailsWords \u003d details.split(\"/by \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                taskAdded \u003d new Deadline(detailsWords[0], detailsWords[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } else if (taskType.equals(\"EVENT\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                detailsWords \u003d details.split(\"/at \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                taskAdded \u003d new Event(detailsWords[0], detailsWords[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                taskAdded \u003d new ToDo(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            taskList.add(taskAdded);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printAddTaskMessage(taskAdded, taskList.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printErrorNoDateMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Delete task from taskList"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void deleteTask(int taskNumber){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Task taskRemoved \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            taskList.remove(taskNumber);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printDeleteTaskMessage(taskRemoved, taskList.size());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printErrorNoTaskMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Mark task in taskList as done"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void markTaskAsDone(int taskNumber){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Task task \u003d taskList.get(taskNumber);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            if (task.getStatus()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Ui.printTaskAlreadyDoneMessage(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                Ui.printTaskMarkedDoneMessage(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printErrorNoTaskMessage();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * List all tasks in taskList"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void listAllTasks(){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        Ui.printTaskList(taskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Get taskList as array list"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Find matching tasks in task list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void findTask(String word) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            String taskDetails \u003d task.getDescription().toUpperCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            if (taskDetails.contains(word)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                matchedTaskList.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        if (matchedTaskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printNoMatchedTaskMessage();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printMatchedTaskMessage();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            Ui.printTaskList(matchedTaskList);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 116
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String LINE_DIVIDER \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String DUKE_INTRODUCTION \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"\\t\\t\\t\\t\\tHello from\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String DUKE_GREETINGS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"\\tHello! I\u0027m your friendly neighbourhood Llama.\\n\\tWhat can I do for you?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String LOGO_NAME \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"  ____  ____   _      _       ____  ___ ___   ____ \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \" /    ||    \\\\ | |    | |     /    ||   |   | /    |\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \"|  o  ||  _  || |    | |    |  o  || _   _ ||  o  |\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \"|     ||  |  || |___ | |___ |     ||  \\\\_/  ||     |\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \"|  _  ||  |  ||     ||     ||  _  ||   |   ||  _  |\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \"|  |  ||  |  ||     ||     ||  |  ||   |   ||  |  |\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "             \"|__|__||__|__||_____||_____||__|__||___|___||__|__|\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String LOGO_BYE \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"\\n ____                ▓▓  ▓▓                                \\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|    \\\\            ▓▓░░▓▓░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|  o  )          ▓▓▓▓░░░░░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|     |        ▓▓░░░░░░██░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|  O  |        ▓▓░░░░░░░░░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|     |          ▓▓▓▓░░░░░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|_____|              ▓▓░░░░▓▓                              \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \" __ __               ▓▓░░░░▓▓                ▓▓            \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|  |  |              ▓▓░░░░▓▓              ▓▓░░▓▓          \\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|  |  |              ▓▓░░░░▓▓              ▓▓░░▓▓          \\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|  ~  |              ▓▓░░░░░░▓▓▓▓▓▓▓▓▓▓▓▓▓▓░░░░▓▓          \\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|___, |              ▓▓░░░░░░░░░░░░░░░░░░░░░░▓▓            \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|     |              ▓▓░░░░░░░░░░░░░░░░░░░░░░▓▓            \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|____/               ▓▓░░░░░░░░░░░░░░░░░░░░░░▓▓            \\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"   ___               ▓▓░░░░░░░░░░░░░░░░░░░░░░▓▓            \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"  /  _]              ▒▒░░▒▒░░▒▒▒▒░░░░░░░░░░▒▒▓▓            \\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \" /  [_                 ▓▓░░░░░░░░░░░░░░░░░░▓▓              \\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|    _]                ▓▓▓▓▓▓░░▓▓▓▓▓▓▓▓▓▓░░▓▓              \\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|   [_                 ▓▓░░▓▓░░▓▓  ▓▓░░▓▓░░▓▓              \\n\" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|     |                ▓▓░░▓▓░░▓▓  ▓▓░░▓▓░░▓▓              \\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"|_____|                ▓▓░░▓▓░░▓▓  ▓▓░░▓▓░░▓▓              \\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            \"                         ▒▒  ▓▓      ▓▓  ▓▓  \";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_IOEXCEPTION \u003d \"\\tLoad Error\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_DESC \u003d \"\\tYou forgot the description!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_DATE \u003d \"\\tYou forgot the date!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_INVALID_COMMAND \u003d \"\\tSorry, I don\u0027t understand :(\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_NUM \u003d \"\\tWhich task?\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String ERROR_MESSAGE_NO_TASK \u003d \"\\tYou don\u0027t have that task!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String STORAGE_MESSAGE_SUCCESSFUL_SAVE \u003d \"\\tSuccessfully saved to file!\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String STORAGE_MESSAGE_SUCCESSFUL_LOAD \u003d \"\\tLoaded file successfully!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String TASK_MESSAGE_ALREADY_DONE \u003d \"\\tThis task has already been marked as done.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String TASK_MESSAGE_MARK_DONE \u003d \"\\tNice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String TASK_MESSAGE_MATCHED_TASK \u003d \"These are the matching tasks from your list!\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String TASK_MESSAGE_NO_MATCHES \u003d \"\\tYou have no matching tasks.\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static final String TASK_MESSAGE_LIST \u003d \"TASK LIST\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Read user input"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints line divider"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printDivider(){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(LINE_DIVIDER);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints greetings and logo"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void printGreeting(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(DUKE_INTRODUCTION);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(LOGO_NAME);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(DUKE_GREETINGS);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public void printGoodbye(){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(LOGO_BYE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints add task message"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printAddTaskMessage(Task taskAdded, int taskCount){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(\"\\tAdded: \" + taskAdded"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                + \"\\nNow you have \" + taskCount"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                + \" task(s) in your list!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints delete task message"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printDeleteTaskMessage(Task taskRemoved, int taskCount){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(\"\\tRemoved: \" + taskRemoved"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                + \"\\nNow you have \" + taskCount"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "                + \" task(s) in your list\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints task already done message"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printTaskAlreadyDoneMessage(Task taskDone) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(TASK_MESSAGE_ALREADY_DONE);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(\"\\t\\t\" + taskDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints task marked as done message"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printTaskMarkedDoneMessage(Task taskDone) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(TASK_MESSAGE_MARK_DONE);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(\"\\t\\t\" + taskDone);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints task list"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(TASK_MESSAGE_LIST);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        for (int i \u003d0; i \u003c taskList.size(); i++){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "            System.out.println((i+1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints invalid command error message"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printInvalidCommandMessage(){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_INVALID_COMMAND);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints no date error message"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printErrorNoDateMessage(){"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_NO_DATE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints no description error message"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printErrorNoDescriptionMessage(){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_NO_DESC);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints no number error message"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printErrorNoNumMessage(){"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_NO_NUM);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints no task error message"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printErrorNoTaskMessage(){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_NO_TASK);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints load error message"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printLoadErrorMessage(){"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(ERROR_MESSAGE_IOEXCEPTION);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints load success message"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printLoadSuccessMessage(){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(STORAGE_MESSAGE_SUCCESSFUL_LOAD);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints successful save message"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printSaveSuccessMessage(){"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(STORAGE_MESSAGE_SUCCESSFUL_SAVE);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints matched tasks message"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printMatchedTaskMessage(){"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(TASK_MESSAGE_MATCHED_TASK);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "amalinasani"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     * Prints no matched tasks message"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    public static void printNoMatchedTaskMessage(){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        System.out.println(TASK_MESSAGE_NO_MATCHES);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 234
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "javac  -cp ..\\bin -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\taskmanager\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "amalinasani"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "amalinasani": 2,
      "-": 19
    }
  }
]
