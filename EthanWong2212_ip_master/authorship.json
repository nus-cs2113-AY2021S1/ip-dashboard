[
  {
    "path": "data/Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "D|0|CS2113T iP|2/10/2020 23:59"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "E|1|bookstore sale|22/1/2021 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "T|0|wash car"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "D|0|math project|22/12/2020 23:59"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "E|0|career workshop|30/12/2021 12:00"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 5
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Ethan is a handy personal task manager which will help you maintain your task list through the Command Line Interface (CLI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [1. View help: `help`](#1-view-help-help)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [2. View task list: `list`](#2-view-task-list-list)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [3. Add todo: `todo`](#3-add-todo-todo)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [4. Add deadline: `deadline`](#4-add-deadline-deadline)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [5. Add event: `event`](#5-add-event-event)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [6. Mark Done: `done`](#6-mark-done-done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [7. Delete task: `delete`](#7-delete-task-delete)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [8. Find task: `find`](#8-find-task-find)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    + [9. End program: `bye`](#9-end-program-bye)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* [FAQ](#faq)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "1. Ensure that you have Java `11` installed in your computer."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "2. Download the latest ip.jar from  link."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "3. Copy the file to a folder you want to store your tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "4. Launch the command prompt and navigate to the folder ip.jar is stored in."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "5. Run ip.jar in the command prompt `(java -jar ip.jar)`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "6. Type commands in the command prompt and press Enter to run commands. e.g. type `help` and Enter to see commands available"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "7. Refer to features section below for other commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Notes about command format:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "1. Words in CAPITAL LETTERS are parameters users input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "   e.g. for \"todo DESCRIPTION\", \"DESCRIPTION\" is a parameter the user provides such as \"todo buy shirts\" "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "There are **3** types of task, **todo**,**deadlines** and **events**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Following is a list of commands at your disposal:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `help`- View help"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `list`- View task list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `todo`- Add todo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `deadline`- Add deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `event`- Add event"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `done`- Mark done"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `delete`- Delete task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `find`- Find tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `bye`- End program"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 1. View help: `help`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Shows the commands and their respective input formats"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `help`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![help eg](help_out.png)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 2. View task list: `list`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Shows list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `list`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![list eg](list_out.png)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 3. Add todo: `todo` "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Adds a todo task to task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `todo DESCRIPTION` "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example:** `todo wash car`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "  *Adds a todo task with description \"wash car\" to task list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![todo eg](todo_out.png)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 4. Add deadline: `deadline`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Adds a deadline task to task list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format**: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": " * `DATE` must be in **dd/MM/yyyy** format. e.g. `9/12/2020` for 9th december 2020"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": " * `TIME` must be in **HH:mm** 24 hours time format. e.g. `22:59` for 10:59pm."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `DATE TIME` must be in future"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example:** `deadline math project /by 22/12/2020 23:59`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* Adds a deadline task with description \"deadline math project\", by \"22nd December 2020 23:59\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![deadline eg](deadline_out.png)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 5. Add event: `event`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Adds an event to task list"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `event DESCRIPTION /at DATE TIME`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `DATE` must be in **dd/MM/yyyy** format. e.g. `9/12/2020` for 9th december 2020"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `TIME` must be in **HH:mm** 24 hours time format. e.g. `22:59` for 10:59pm."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `DATE TIME` must be in future"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example:** `event career workshop /at 30/12/2021 12:00`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* Adds a event task with description \"event career workshop\", at \"30th December 2021 12:00\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![event eg](event_out.png)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 6. Mark done: `done`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Marks a task in task list as done"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `done TASKNUMBER`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `TASKNUMBER` must be an integer."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example:** `done 1`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "*Marks task with task number 1 as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![done eg](done_out.png)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 7. Delete task: `delete`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Deletes a task from task list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `delete TASKNUMBER`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* `TASKNUMBER` must be an integer."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example** `delete 1`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* Deletes task with task number 1."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![delete eg](delete_out.png)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 8. Find task: `find`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Finds task from task list based on `KEYWORD` and description."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format:** `find KEYWORD`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Example** `find career`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "* Finds and shows tasks with \"career\" in description."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Outcome:**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "![find eg](find_out.png)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "### 9. End program: `bye`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Ends program after saving and updating task list"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Format** `bye`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**Q**: Where is my task list data stored?"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "**A**: The task list data is named `Duke.txt` and can be found in the data folder in your home folder (where you stored ip.jar)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "Action | Format | Example"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "--- | --- | ---"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "help | `help` | \u0027help\u0027"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "list | `list` | `list`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "todo | `todo DESCRIPTION` | `todo buy some milk`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "deadline | `deadline DESCRIPTION /by DATE TIME (dd/MM/yyyy HH:mm)` | `deadline CS hw /by 28/02/2021 23:59`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "event | `event DESCRIPTION /at DATE TIME (dd/MM/yyyy HH:mm)` | `deadline Christmas party /at 25/12/2020 17:00 `"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "done | `done TASKNUMBER` | `done 4`"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "delete | `delete TASKNUMBER` | `delete 2`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "find | `find KEYWORD` | `find party`"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "bye | `bye` | `bye`"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 168,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_FIND \u003d\"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_HELP\u003d\"help\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Modifies taskList according to user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * If user input command is invalid, exception is thrown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param userCmd   Full input by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param taskList  taskList which requires relevant modifications by user input command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException    If user input command invalid."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void runCommand(String userCmd, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String[] cmd_split\u003d userCmd.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String type\u003dcmd_split[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_LIST:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.printList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            task\u003dParser.getTodoTask(userCmd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Ui.printTaskAdded(task,taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_EVENT:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            task\u003dParser.getDeadlineEventTask(userCmd, type);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.addTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Ui.printTaskAdded(task,taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DONE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            int doneIndex\u003dParser.getDoneDeleteIndex(userCmd, type, taskList.getSize());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.doneTask(doneIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DELETE:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            int delIndex\u003dParser.getDoneDeleteIndex(userCmd, type, taskList.getSize());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.deleteTask(delIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_FIND:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            String key\u003dParser.getFindKeyword(userCmd);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            taskList.findTask(key);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_HELP:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Ui.printHelp();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"invalid\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 68
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Storage.FileHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static FileHandler file\u003dnew FileHandler(\"Duke\",\"data/Duke.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static TaskList taskList\u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String userCmd;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Scanner in \u003dnew Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        file.getInfo();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        file.readFile(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Ui.printStart();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Ui.printYou();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            userCmd\u003din.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Ui.printETHAN();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            if(userCmd.toLowerCase().equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                Command.runCommand(userCmd, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                e.getError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            file.updateFile(taskList);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 52,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected String error;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.error\u003derror;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void getError() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        switch (this.error) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"invalid\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Index missing\":"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Index for command not provided\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Index out of bounds\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Index out of bounds\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Index not int\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Index needs to be an integer\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Deadline div\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! The divider (\\\"/by\\\") for deadline is missing. :-(\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Event div\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! The divider (\\\"/at\\\") for deadline is missing. :-(\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Time missing\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! The task timing is missing. :-(\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Desc missing\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! The task description is missing. :-(\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"Find blank\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"OOPS!!! I\u0027m sorry but I don\u0027t know what you are looking for\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"DateTime invalid\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Please input date and time in this format:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"DD/MM/YYYY HH:mm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case \"DateTime before\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"The date and time you have input has passed :-(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Please input valid date\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 49
    }
  },
  {
    "path": "src/main/java/Duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String DEADLINE_DIV\u003d\"/by\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String EVENT_DIV\u003d\"/at\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int DEADLINE_CMD_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int EVENT_CMD_LENGTH\u003d5;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int TODO_CMD_LENGTH\u003d4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int DONE_CMD_LENGTH\u003d4;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int DELETE_CMD_LENGTH\u003d6;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final int FIND_CMD_LENGTH\u003d4;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String DESC_MISSING \u003d \"Desc missing\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String TIME_MISSING \u003d \"Time missing\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String DEADLINE_DIV_ERROR \u003d \"Deadline div\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String EVENT_DIV_ERROR \u003d \"Event div\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static final String CMD_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static int cmdLength;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static String div;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static String divError;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Processes the user command and returns required task for deadline and event commands."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Checks for errors and validity of user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param userCmd Full input by user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param type Command type to establish if userCmd is processed as deadline or event command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return required task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException If errors under DukeExceptions are caught."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static Task getDeadlineEventTask(String userCmd, String type) throws DukeException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        setParam(type);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String time;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String[] cmdSplit;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(!userCmd.contains(div)){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(divError);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        cmdSplit\u003d userCmd.split(div);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(cmdSplit.length\u003d\u003d2){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            desc\u003d cmdSplit[0].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            time\u003d cmdSplit[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            desc\u003d cmdSplit[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            time\u003d\" \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(desc.length()\u003c cmdLength +1){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(DESC_MISSING);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(desc.isBlank()){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException (DESC_MISSING);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(time.isBlank()){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(TIME_MISSING);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        desc\u003ddesc.substring(cmdLength +1).trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        dateTimeValid(time);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return (type.equals(CMD_DEADLINE))? new Deadline(desc,time): new Event(desc,time);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Processes the user command and returns todo object for todo commands."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Checks for errors and validity of user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param userCmd Full input by user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return Todo Task object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException If errors under DukeExceptions are caught."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static Task getTodoTask(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(userCmd.length()\u003cTODO_CMD_LENGTH+1){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new  DukeException(DESC_MISSING);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String desc\u003d userCmd.substring(TODO_CMD_LENGTH+1).trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(desc.isBlank()){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new  DukeException(DESC_MISSING);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return new Todo(desc);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Processes the user command and returns required index for delete and done commands."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Checks for errors and validity of user input."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param userCmd Full input by user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param type Command type to establish if userCmd is processed as done or delete command."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param size Size of taskList"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return index integer."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException If errors under DukeExceptions are caught."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static int getDoneDeleteIndex(String userCmd, String type, int size) throws DukeException{"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        setParam(type);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String indexStr;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(userCmd.length()\u003ccmdLength+1){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new  DukeException(\"Index missing\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        indexStr\u003d userCmd.substring(cmdLength+1).trim();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(indexStr.isBlank()){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new  DukeException(\"Index missing\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            index \u003d Integer.parseInt(indexStr) - 1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"Index not int\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(index\u003esize-1 || index\u003c0){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"Index out of bounds\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Processes the user command and returns keyword for find commands."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Checks for errors and validity of user input."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param userCmd Full input by user."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return keyword for find command"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException If errors under DukeExceptions are caught."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static String getFindKeyword(String userCmd) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String key;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(userCmd.length()\u003cFIND_CMD_LENGTH+1){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"Find blank\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        key\u003duserCmd.substring(FIND_CMD_LENGTH+1).trim();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if (key.isBlank()){"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"Find blank\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return key;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Sets parameter values according to the command type."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * This will thus affect how userCmd are processed in donedeleteIndex and deadlineeventTask"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param type Command type"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static void setParam(String type){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        switch(type){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DEADLINE:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            cmdLength\u003d DEADLINE_CMD_LENGTH;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            div\u003dDEADLINE_DIV;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            divError\u003dDEADLINE_DIV_ERROR;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_EVENT:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            cmdLength\u003d EVENT_CMD_LENGTH;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            div\u003dEVENT_DIV;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            divError\u003dEVENT_DIV_ERROR;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DONE:"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            cmdLength\u003d DONE_CMD_LENGTH;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        case CMD_DELETE:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            cmdLength\u003d DELETE_CMD_LENGTH;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Checks raw dateTime from user input for errors"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param dateTime raw dateTime input"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @throws DukeException If errors under DukeExceptions are caught."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static void dateTimeValid(String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            LocalDateTime dt \u003d getLocalDateTime(dateTime);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"DateTime invalid\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        LocalDateTime dt \u003d getLocalDateTime(dateTime);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        LocalDateTime dt_now\u003dLocalDateTime.now();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(dt.isBefore(dt_now)){"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            throw new DukeException(\"DateTime before\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Parses raw dateTime from user input and returns LocalDateTime"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param dateTime raw dateTime input to be parsed"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return LocalDateTime"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static LocalDateTime getLocalDateTime(String dateTime){"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String [] splitTime\u003d dateTime.split(\" \");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String [] date\u003d splitTime[0].split(\"/\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String [] time\u003d splitTime[1].split(\":\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String year\u003d getDateTimeNumber(date[2].trim());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String month\u003d getDateTimeNumber(date[1].trim());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String day\u003d getDateTimeNumber(date[0].trim());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String hr\u003d getDateTimeNumber(time[0].trim());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String min\u003d getDateTimeNumber(time[1].trim());"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        LocalDateTime dt\u003d LocalDateTime.parse(year+\"-\"+month+\"-\"+day+\"T\"+hr+\":\"+min);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return dt;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Modifies number in order for it to be read as in LocalDateTime.parse"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param number"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @return number readable by LocalDateTime"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static String getDateTimeNumber(String number){"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(number.length()\u003d\u003d1){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            return (\"0\"+number);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            return number;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 232
    }
  },
  {
    "path": "src/main/java/Duke/Storage/FileHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class FileHandler {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private String dir;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private int taskDone\u003d0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public FileHandler(String name, String dir){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.name\u003dname;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.dir\u003ddir;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        createFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void createFile(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            file\u003dnew File(dir);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            if(file.createNewFile()){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                System.out.println(\"File created: \"+file.getName());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                System.out.println(\"File already exists\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } catch(IOException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Error:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void getInfo(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(file.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"File name: \" + file.getName());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"Absolute path: \" + file.getAbsolutePath());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void readFile(TaskList taskList) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Scanner s\u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        while(s.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            Task t \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            String entry \u003d s.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            String[] entry_words \u003d entry.split(\"\\\\|\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            switch (entry_words[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                t \u003d new Todo(entry_words[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                taskList.addTask(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                t \u003d new Deadline(entry_words[2], entry_words[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                taskList.addTask(t);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                t \u003d new Event(entry_words[2], entry_words[3]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                taskList.addTask(t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                System.out.println(\"File Corrupted\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            if (entry_words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                t.isDone(true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                taskDone++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        taskList.setDoneCount(taskDone);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"File Read\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void updateFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        String line \u003d new String();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        FileWriter fw\u003dnew FileWriter(file);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        for(Task t: taskList.getList()){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            if(t instanceof Todo){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                line+\u003d\"T|\"+ (t.checkDone()?1:0)+\"|\"+t.getDesc();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }else if(t instanceof  Deadline){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                line+\u003d\"D|\"+ (t.checkDone()?1:0)+\"|\"+t.getDesc()+\"|\"+((Deadline) t).getTime();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }else if(t instanceof Event){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                line+\u003d\"E|\"+ (t.checkDone()?1:0)+\"|\"+t.getDesc()+\"|\"+ ((Event) t).getTime();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            line+\u003dSystem.lineSeparator();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        fw.write(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 97
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public Deadline(String description, String time){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        dateTime\u003d Parser.getLocalDateTime(time);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String getTime(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String stringDateTime(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return this.dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return \"[D] \"+ super.toString()+ \" (by: \"+  stringDateTime() +\")\" ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 30
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public Event(String description, String time){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        dateTime\u003d Parser.getLocalDateTime(time);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String stringDateTime(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return this.dateTime.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return \"[E] \" + super.toString() + \" (at: \" + stringDateTime()+\")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 31
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.description\u003ddescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.done\u003dfalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void isDone(boolean done){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.done\u003dtrue;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public boolean checkDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String getDesc(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return (done ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 33
    }
  },
  {
    "path": "src/main/java/Duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Ui.Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static int doneCount;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        taskList \u003dnew ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        doneCount \u003d0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Adds task to taskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param task task to be added to taskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void addTask(Task task){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Deletes task from specific index in taskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param index index of task to delete"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void deleteTask(int index){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Task task\u003d taskList.get(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(task.checkDone()){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            doneCount--;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Ui.printTaskDeleted(task,taskList.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Marks task from specific index in taskList as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param index index of task to mark as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void doneTask(int index){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Task task\u003d taskList.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(!task.checkDone()){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            task.isDone(true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            doneCount++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        Ui.printTaskDone(task, taskList.size()- doneCount);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void printList(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        for(Task task: taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println((taskList.indexOf(task)+1) + \".\" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * Changes the count of doneCount in taskList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     * @param doneCount number of tasks done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void setDoneCount(int doneCount) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        this.doneCount \u003d doneCount;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public void findTask(String key){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        boolean found\u003dfalse;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        for (Task task:taskList){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            if(task.getDesc().toLowerCase().contains(key.toLowerCase())){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                System.out.println((taskList.indexOf(task)+1) + \".\" +task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                found\u003dtrue;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        if(found\u003d\u003dfalse){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            System.out.println(\"There aren\u0027t any matching tasks in your list :-(\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /** Gets taskList */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public ArrayList\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    /** Gets size of taskList*/"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 91
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        return \"[T] \"+super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 14
    }
  },
  {
    "path": "src/main/java/Duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "package Duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "import Duke.Task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String LOGO \u003d \"  _____ _   _\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \" | ____| |_| |__   __ _ _ __\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \" |  _| | __| \u0027_ \\\\ / _` | \u0027_ \\\\\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \" | |___| |_| | | | (_| | | | |\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \" |_____|\\\\__|_| |_|\\\\__,_|_| |_|\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \"\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String INTRO \u003d \" Hi there, I\u0027m Ethan!\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \" Do you need anything?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String BYE \u003d \" Bye. See you soon!\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "            \"----------------------------BYE----------------------------\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String YOU \u003d \"----------------------------YOU----------------------------\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    private static final String ETHAN \u003d \"---------------------------ETHAN---------------------------\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printBye(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(BYE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printYou(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(YOU);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printETHAN(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(ETHAN);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printStart() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Hello from\\n\" + LOGO + ETHAN + INTRO);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printTaskAdded(Task task, TaskList taskList){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"  \"+ task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Now you have \"+ taskList.getSize()+ (taskList.getSize()\u003d\u003d1?\" task\":\" tasks\")+\" in the list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printTaskDeleted(Task task, int size){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"  \"+ task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Now you have \"+ size+ (size\u003c1?\" task\":\" tasks\")+\" in the list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printTaskDone(Task task, int notDone){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Great Job! The task has been marked as done:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"You have \" + notDone + \" tasks not done\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    public static void printHelp(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "        System.out.println(\"Here are your list of commands:\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"1) list\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: print\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Prints task list\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"2) todo\\n\" +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: todo \u003cdescription\u003e\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   adds todo to task list\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"3) deadline\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: deadline \u003cdescription\u003e /by \u003cdate and time\u003e\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"          \u003cdate and time\u003e must be in dd/MM/yy hh:mm (time in 24hr mode)\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Adds deadline to task list\\n\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"4) event\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: event \u003cdescription\u003e /at \u003cdate and time\u003e\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"          \u003cdate and time\u003e must be in dd/MM/yy hh:mm (time in 24hr mode)\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Adds event to task list\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"5) done\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: done \u003ctask index\u003e\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Marks task with task index on task list as done\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"6) delete\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: delete \u003ctask index\u003e\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Deletes task with task index on task list\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"7) find\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: find \u003ckeyword\u003e\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Returns tasks which consists of keyword\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"8) bye\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   input: bye\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "                \"   Ends program\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 84
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "todo play a game"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "event mbs dinner /at Sunday 7pm-10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "deadline return book /by Saturday 4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "deadline finish homework /by Friday 2359"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke/*.java ../src/main/java/Duke/Task/*.java ../src/main/java/Duke/FileHandler/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanWong2212"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EthanWong2212": 2,
      "-": 36
    }
  }
]
