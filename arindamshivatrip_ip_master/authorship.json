[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "This application is named Air. It is a command line application with a feisty personality  that allows users to store a list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### How to run Air "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "*Prerequisite*: Java 11"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "1. Download the jar file from the release of this project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "2. Extract this file to your preferred folder."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "3. Open command prompt and change to the directory in the previous step"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "4. Run this command: java -jar duke.jar"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "5. You should see this message below if all has happened correctly so far:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   File does not already exist"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "       _____  __        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     /  _  \\ |__|______ "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /  /_\\  \\|  \\_  __ \\"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   /    |    \\  ||  | \\/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   \\____|__  /__||__|   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            \\/           "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tSup! I\u0027m Air"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tHow can I help you out today?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Features of Air"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####1. Save Tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Air saves the tasks in the  list every time a change occurs to the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####2. Load Tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Loading previously saved tasks on starting up."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####3. Add Tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "A user can add tasks to the program of many types. These include:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   1. Todo\\"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are normal tasks and are added by typing\\"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `todo \u003ctaskName\u003e`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   2. Events\\"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are events and have a time that goes along with the name of the event.They are added by typing:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `event \u003cEvent-Name\u003e /at \u003cEvent-Time\u003e`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   3. Deadlines\\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are deadlines and have a time that goes along with the name of the deadline.They are added by typing:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `deadline \u003cdeadline-Name\u003e /by \u003cdeadline-Time\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####4. List Tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the word `list` a list of all the tasks currently in the program is listed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####5. Finish Tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `done \u003ctaskNumber\u003e` the task at the position `taskNumber` is marked to be done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####6. Delete Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `delete \u003ctaskNumber\u003e` the task at the position `taskNumber` is removed from the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####7. Find Tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `find \u003cString\u003e` the tasks which contain `string` are listed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####8. Error Handling"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Taking nearly all the possible errors that can be made into account and displaying helpful error messages."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Sample run"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### Inputs"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "hello"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "todo Eat dinner"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "bye"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### Output"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "File already exists. Previous tasks will be imported."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\tHello from"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   _____  .__        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "  /  _  \\ |__|______ "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " /  /_\\  \\|  \\_  __ \\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "/    |    \\  ||  | \\/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\\____|__  /__||__|   "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        \\/           "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tSup! I\u0027m Air"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tHow can I help you out today?"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "hi OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tTask added:\t[T][✘]\tEat dinner"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Noiice! You\u0027re done with this Task. Good for you. I\u0027ve marked that ure done with it."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\t[✓]\tEat dinner"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\t[✓]\tEat dinner"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Task has been deleted. Here\u0027s the new list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "☹ OOPS!!! There are no tasks currently in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tTask added:\t[E][✘]\tproject meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "1.  [E][✘]\tproject meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "See you later Alligator!"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Note"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "All the commands are case-sensitive. In case you spot errors kindly reach out to me."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 105,
      "-": 10
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "This application is named Air. It is a command line application with a feisty personality  that allows users to store a list of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### How to run Air "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "*Prerequisite*: Java 11"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "1. Download the jar file from the release of this project."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "2. Extract this file to your preferred folder."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "3. Open command prompt and change to the directory in the previous step"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "4. Run this command: java -jar duke.jar"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "5. You should see this message below if all has happened correctly so far:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   File does not already exist"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "       _____  __        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     /  _  \\ |__|______ "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /  /_\\  \\|  \\_  __ \\"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   /    |    \\  ||  | \\/"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   \\____|__  /__||__|   "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            \\/           "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tSup! I\u0027m Air"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tHow can I help you out today?"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Features of Air"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####1. Save Tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Air saves the tasks in the  list every time a change occurs to the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####2. Load Tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Loading previously saved tasks on starting up."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####3. Add Tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "A user can add tasks to the program of many types. These include:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   1. Todo\\"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are normal tasks and are added by typing\\"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `todo \u003ctaskName\u003e`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   2. Events\\"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are events and have a time that goes along with the name of the event.They are added by typing:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `event \u003cEvent-Name\u003e /at \u003cEvent-Time\u003e`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   3. Deadlines\\"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   These are deadlines and have a time that goes along with the name of the deadline.They are added by typing:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   `deadline \u003cdeadline-Name\u003e /by \u003cdeadline-Time\u003e`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####4. List Tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the word `list` a list of all the tasks currently in the program is listed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####5. Finish Tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `done \u003ctaskNumber\u003e` the task at the position `taskNumber` is marked to be done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####6. Delete Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `delete \u003ctaskNumber\u003e` the task at the position `taskNumber` is removed from the list of tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####7. Find Tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "By typing the string `find \u003cString\u003e` the tasks which contain `string` are listed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "#####8. Error Handling"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Taking nearly all the possible errors that can be made into account and displaying helpful error messages."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Sample run"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### Inputs"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "hello"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "todo Eat dinner"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "bye"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "### Output"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "File already exists. Previous tasks will be imported."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tHello from"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "   _____  .__        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "  /  _  \\ |__|______ "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " /  /_\\  \\|  \\_  __ \\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "/    |    \\  ||  | \\/"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\\____|__  /__||__|   "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        \\/           "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tSup! I\u0027m Air"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tHow can I help you out today?"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "hi OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tTask added:\t[T][✘]\tEat dinner"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Noiice! You\u0027re done with this Task. Good for you. I\u0027ve marked that ure done with it."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\t[✓]\tEat dinner"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\t[✓]\tEat dinner"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "Task has been deleted. Here\u0027s the new list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "☹ OOPS!!! There are no tasks currently in the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tTask added:\t[E][✘]\tproject meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "1.  [E][✘]\tproject meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "See you later Alligator!"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "## Note"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "All the commands are case-sensitive. In case you spot errors kindly reach out to me."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 105,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected String completeBy;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Deadline(String description, String completeBy) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.workType \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.completeBy \u003d completeBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String printDetails() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return \"[\" + this.workType + \"][\" + this.getStatusIcon() + \"]\\t\" + this.description + \"(by:\" + this.completeBy + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A utility function that writes to the txt file when the program makes any changes to the listTasks ArrayList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static private void writeUtil(Storage store, ArrayList\u003cTask\u003e listTasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            store.taskConverter(listTasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            System.out.println(\"IO ERROR! \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static void print(String str) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * The main of the whole program which connects the various java classes in this program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static public void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        Storage store \u003d new Storage(\"./data\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        TaskList Tasks \u003d new TaskList(store.importedTasks, store.existingTaskCount);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String inputCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        UI.helloPrinter();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        Scanner scanIn \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        //This code block repeats until the word bye is typed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        while (!(inputCommand \u003d scanIn.nextLine()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            Parser parser \u003d new Parser(inputCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            String inputType \u003d parser.inputTypeIdentifier();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            switch (inputType) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"error\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    UI.gibberishError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"list\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                     writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    UI.printTaskList(Tasks.listTasks, Tasks.jobCount);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        int taskNumber \u003d parser.doneOrDelNum();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        Tasks.doneTask(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.doneAck(Tasks.listTasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"done\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"find\": {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        String findExp \u003d parser.findExp();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        print(findExp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        ArrayList\u003cTask\u003e matchTask \u003d new ArrayList\u003c\u003e(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        matchTask.addAll(Tasks.taskFinder(findExp));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.printMatch(matchTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"done\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        int taskNumber \u003d parser.doneOrDelNum();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        Tasks.delTask(taskNumber);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.deleteAck();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.printTaskList(Tasks.listTasks, Tasks.jobCount);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"delete\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        String todoDesc \u003d parser.todoDesc();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        if (todoDesc.trim().isEmpty()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                            UI.ErrorAck(\"T\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        Tasks.addTask(new Todo(todoDesc));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.addAck(Tasks.listTasks.get(Tasks.jobCount - 1), Tasks.jobCount);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"T\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        ArrayList\u003cString\u003e eventAttr \u003d parser.attributesExtractor(\u0027E\u0027);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        if (eventAttr.get(0).trim().isEmpty() | eventAttr.get(1).trim().isEmpty()) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                            UI.ErrorAck(\"E\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        Tasks.addTask(new Events(eventAttr.get(0), eventAttr.get(1)));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.addAck(Tasks.listTasks.get(Tasks.jobCount - 1), Tasks.jobCount);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"E\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        ArrayList\u003cString\u003e deadlineAttr \u003d parser.attributesExtractor(\u0027D\u0027);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        if (deadlineAttr.get(0).trim().isEmpty() | deadlineAttr.get(1).trim().isEmpty()) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                            UI.ErrorAck(\"D\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        Tasks.addTask(new Deadline(deadlineAttr.get(0), deadlineAttr.get(1)));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.addAck(Tasks.listTasks.get(Tasks.jobCount - 1), Tasks.jobCount);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        writeUtil(store, Tasks.listTasks);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    } catch (NumberFormatException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        UI.ErrorAck(\"D\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        //The case where the user types the word bye"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            UI.byeMessage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 126,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected String eventAt;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Events(String description, String eventAt) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.workType \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.eventAt \u003d eventAt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String printDetails() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return \"[\" + this.workType + \"][\" + this.getStatusIcon() + \"]\\t\" + this.description + \"(at:\" + this.eventAt + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 23
    }
  },
  {
    "path": "src/main/java/NoSuchCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class NoSuchCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    //no other code needed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected Task thisTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Parser(String userInput) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String inputTypeIdentifier() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String[] splitInputs \u003d this.userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        if (this.userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"delete\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"find\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"find\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else if (this.userInput.contains(\"event\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return \"error\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public int doneOrDelNum() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String[] splitInputs \u003d this.userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(splitInputs[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String findExp() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String[] splitInputs \u003d this.userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String findExpression \u003d splitInputs[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return findExpression;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String todoDesc() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String[] splitInputs \u003d this.userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String todoDescription \u003d splitInputs[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return todoDescription;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public ArrayList\u003cString\u003e attributesExtractor(char type) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        ArrayList\u003cString\u003e eventAttr \u003d new ArrayList\u003c\u003e(1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String[] splitInputs \u003d this.userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \u0027E\u0027: {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String[] attributeFinder \u003d splitInputs[1].split(\"/at\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String eventName \u003d attributeFinder[0];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                eventAttr.add(eventName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String eventAt \u003d attributeFinder[1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                eventAttr.add(eventAt);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                return eventAttr;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \u0027D\u0027: {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String[] attributeFinder \u003d splitInputs[1].split(\"/by\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String deadlineName \u003d attributeFinder[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                eventAttr.add(deadlineName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String deadlineBy \u003d attributeFinder[1];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                eventAttr.add(deadlineBy);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                return eventAttr;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return eventAttr;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 74
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " * A java class where all the read/write functions are executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public ArrayList\u003cTask\u003e importedTasks \u003d new ArrayList\u003c\u003e(1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected String pathName \u003d \"./data\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected int existingTaskCount \u003d 0;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected boolean isFolderThere \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected boolean isFileThere \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Storage(String pathName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.pathName \u003d pathName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            existenceChecker();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            System.err.println(\"Failed to create directory!\" + e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A function that writes to the file at filePath location"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that deals with the possibility that the folder data and/or the file duke.txt may not exist."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void existenceChecker() throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        File dirFile \u003d new File(this.pathName);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        if (dirFile.isDirectory()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            File textFile \u003d new File(pathName + \"/duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            if (textFile.createNewFile()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                System.out.println(\"File does not already exist\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                System.out.println(\"File already exists. Previous tasks will be imported.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    dataExtractor(textFile);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    System.err.println(\"Failed to create directory!\" + e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            Path path \u003d Paths.get(pathName);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            Files.createDirectories(path);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            File textFile \u003d new File(pathName + \"/duke.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            if (textFile.createNewFile()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                System.out.println(\"File does not already exist\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                System.out.println(\"File already exists. Previous tasks will be imported.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    dataExtractor(textFile);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    System.err.println(\"Failed to create directory!\" + e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that converts the task in the list into a form that can be stored and eventually read."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void taskConverter(ArrayList\u003cTask\u003e listTask) throws IOException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String filePath \u003d this.pathName + \"/duke.txt\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String toOut \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            for (Task i : listTask) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                char taskType \u003d i.workType;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    int isTodoDone \u003d i.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String todoDescription \u003d i.description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    toOut +\u003d taskType + \"|\" + isTodoDone + \"|\" + todoDescription + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    int isEventDone \u003d i.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String eventDescription \u003d i.description;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String eventPrint \u003d i.printDetails();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String[] splitEvent \u003d eventPrint.split(\"at:\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String[] splitEventTime \u003d splitEvent[1].split(\"\\\\)\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    toOut +\u003d taskType + \"|\" + isEventDone + \"|\" + eventDescription + \"|\" + splitEventTime[0] + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    int isDeadlineDone \u003d i.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String deadlineDescription \u003d i.description;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String deadlinePrint \u003d i.printDetails();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String[] splitDeadline \u003d deadlinePrint.split(\"by:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    String[] splitDeadlineTime \u003d splitDeadline[1].split(\"\\\\)\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                    toOut +\u003d taskType + \"|\" + isDeadlineDone + \"|\" + deadlineDescription + \"|\" + splitDeadlineTime[0] + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            writeToFile(filePath, toOut);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that converts the number in the txt file into a boolean true/false"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public boolean numToBool(int num) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        if (num \u003d\u003d 1) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that extracts the tasks and adds it to the arraylist from the text file"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void dataExtractor(File textFile) throws IOException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        Scanner myReader \u003d new Scanner(textFile);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            String taskData \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            String[] splitTaskData \u003d taskData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            for (String i : splitTaskData) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                i \u003d i.trim();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            if (splitTaskData[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.add(new Todo(splitTaskData[2]));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                String isDoneString \u003d splitTaskData[1];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                boolean isComplete \u003d numToBool(Integer.parseInt(isDoneString));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.get(existingTaskCount).isDone \u003d isComplete;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                existingTaskCount++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            } else if (splitTaskData[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.add(new Events(splitTaskData[2], splitTaskData[3]));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                boolean isComplete \u003d numToBool(Integer.parseInt(splitTaskData[1]));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.get(existingTaskCount).isDone \u003d isComplete;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                existingTaskCount++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            } else if (splitTaskData[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.add(new Deadline(splitTaskData[2], splitTaskData[3]));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                boolean isComplete \u003d numToBool(Integer.parseInt(splitTaskData[1]));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                importedTasks.get(existingTaskCount).isDone \u003d isComplete;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                existingTaskCount++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 145
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected static int jobCount \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected char workType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.workType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "//        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String printDetails() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return \"[\" + this.workType + \"][\" + this.getStatusIcon() + \"]\\t\" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected int jobCount \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    ArrayList\u003cTask\u003e listTasks \u003d new ArrayList\u003c\u003e(1);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e importList, int jobCount) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.listTasks.addAll(importList);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.jobCount \u003d jobCount;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that adds to the listTasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.listTasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.jobCount++;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that removes the tasks from listTasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void delTask(int intTaskToDel) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.listTasks.remove(intTaskToDel - 1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.jobCount--;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that marks the task at a specified index as being done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void doneTask(int intTaskDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.listTasks.get(intTaskDone - 1).markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that finds the tasks in the Arraylist whose description contains words/letters from a given string"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public ArrayList\u003cTask\u003e taskFinder(String findEx) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        ArrayList\u003cTask\u003e matchList \u003d new ArrayList\u003c\u003e(0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        for (Task i : this.listTasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            if (i.description.contains(findEx)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                matchList.add(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return matchList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 44
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected static int jobCount \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    protected char workType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.workType \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public String printDetails() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        return \"[\" + this.workType + \"][\" + this.getStatusIcon() + \"]\\t\" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 23
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " * A  Class intended to deal with the UI interactions of the class"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    String myName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        myName \u003d \"myName\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    static void print(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * Function to print Logo and Hello"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void helloPrinter() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String logo \u003d \"   _____  .__        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                + \"  /  _  \\\\ |__|______ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                + \" /  /_\\\\  \\\\|  \\\\_  __ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                + \"/    |    \\\\  ||  | \\\\/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                + \"\\\\____|__  /__||__|   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                + \"        \\\\/           \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"\\tHello from\\n\" + logo + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"\\tSup! I\u0027m Air\\n\" + \"\\tHow can I help you out today?\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that acknowledges that a task is done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void doneAck(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"Noiice! You\u0027re done with this Task. Good for you. I\u0027ve marked that ure done with it.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"\\t[\" + task.getStatusIcon() + \"]\\t\" + task.description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that acknowledges that a task is deleted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void deleteAck() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"Task has been deleted. Here\u0027s the new list\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that acknowledges that a task has been added"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void addAck(Task task, int jobCount) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        String taskDescription \u003d task.printDetails();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"\\tTask added:\\t\" + taskDescription);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"\\tNow you have \" + jobCount + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that prints a goodbye message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void byeMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"See you later Alligator!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        print(\"Task has been deleted. Here\u0027s the new list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that acknowledges Errors"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void ErrorAck(String typeChar) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        switch (typeChar) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! The description of done cannot be empty and must be an integer. Or this task number does not exist\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! There are no tasks currently in the list\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! The description of delete cannot be empty and must be an integer.\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! The description of an event cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that prints an error message anytime someone enters a string that isnt a command"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void gibberishError() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            throw new NoSuchCommandException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } catch (NoSuchCommandException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            print(\"____________________________________________________________\\n☹ hi OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that prints out the list of tasks"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e listTasks, int jobCount) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        if(jobCount\u003d\u003d0)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            UI.ErrorAck(\"list\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        for (int i \u003d 0; i \u003c jobCount; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            print((i + 1) + \".  \" + listTasks.get(i).printDetails());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     * A  function that prints out the list of tasks that match the given expression"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    public static void printMatch(ArrayList\u003cTask\u003e matchTask) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        if (matchTask.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                throw new NoSuchCommandException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            } catch (NoSuchCommandException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(\"____________________________________________________________\\nNo such task exists\\n____________________________________________________________\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            print(\"The related tasks are:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            for (Task i : matchTask) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "                print(i.printDetails());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "arindamshivatrip"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "arindamshivatrip": 139
    }
  }
]
