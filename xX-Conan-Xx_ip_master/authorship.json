[
  {
    "path": "docs/README.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "When you start Duke(Level 9)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "When you run the program(FinalLevel), you should see"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " What can I do for you?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "you can type your command and Duke will help you"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "1. list : list to show all your tasks to do"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output: \t____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t1:[D][✘] finish homework (by:  today)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t2:[E][✘] tut (at:  9pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t3:[T][✘] read book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "2.  done :mark a task as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: done (number)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output : ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " \tNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " \t[D][✓] finish homework (by:  today)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "3. todo :(things to do) create a todo task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: todo (task)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output :  ____________________________________________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "   \t[T][✘] read book"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tNow you have 3 tasks in the list. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "4. delete : delete the corresponding task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: delete (number)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output : ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tNoted. I\u0027ve removed this task:  "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " \t[✓] finish homework"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tNow you have 2 tasks in the list. "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "5. find (keyword) find all the tasks containing this keyword"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: find (keyword)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output : ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t1: [D][✓] finish homework (by:  today)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "6. deadline : set a deadline task which needs to be done by a certain time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: deadline (task) / by (time)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output :____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "  \t [D][✘] finish homework (by:  today)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tNow you have 1 tasks in the list. "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "7. event: set an event task which will happen at a certain time"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: event (task) / (at time)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output : ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "   \t[E][✘] tut (at:  9pm)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tNow you have 2 tasks in the list. "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "8. bye  quit the program and save the task into a text file \"duke.txt\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "command: bye"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "output :  ____________________________________________________________"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "What is inside brackets should be the input format!"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 80
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "[E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "[T][?] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "[T][?] dinner"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 5
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private String commandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private String inputMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private boolean isDescriptionEmpty;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Command(String commandType, String inputMessage, boolean isDescriptionEmpty) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.inputMessage \u003d inputMessage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.isDescriptionEmpty \u003d isDescriptionEmpty;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String getCommandType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return commandType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String getInputMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return inputMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public boolean isDescriptionEmpty() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return isDescriptionEmpty;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 24
    }
  },
  {
    "path": "src/main/java/duke/DException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class DException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " * Represents a command to be executed. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " * the command\u0027s type and description along with whether it is the bye command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();//create a ArrayList to store the tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        File file \u003d new File(\"duke.txt\");//create a file object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(file.exists()\u003d\u003dfalse){//if the file does not exit then create one"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        FileInputStream fis\u003dnew FileInputStream(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(file,true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Scanner sc\u003dnew Scanner(fis);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        final String SPLIT_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Ui.greeting(SPLIT_LINE);//print hello"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        line \u003d Ui.readFile(tasks, in, sc);//read file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Ui.mainSystem(line, tasks, in, SPLIT_LINE);//executing main system"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Ui.write(tasks,file);//write to file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        Ui.bye(SPLIT_LINE);// print bye"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 30,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/IndexDoNotExistException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class IndexDoNotExistException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 4
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static Command parseCommand(String inputMessage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String[] inputWords \u003d inputMessage.split(Ui.INPUT_SPACE);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String commandType \u003d inputWords[Ui.INPUT_COMMAND];"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        boolean isDescriptionEmpty \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        if(inputWords.length\u003d\u003d1){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            isDescriptionEmpty \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return new Command(commandType, inputMessage,isDescriptionEmpty);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static final String INPUT_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static final int INPUT_COMMAND \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void bye(String SPLIT_LINE) {//print bye"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void greeting(String SPLIT_LINE) {//print greeting"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void mainSystem(String line, ArrayList\u003cTask\u003e tasks, Scanner in, String SPLIT_LINE) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        while (!Parser.parseCommand(line).getCommandType().equals(\"bye\")){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                String commandType \u003d Parser.parseCommand(line).getCommandType();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                switch (commandType){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        list(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        done(line, tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        delete(line, tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        find(line, tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        todo(line, tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        deadline(line, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        event(line, tasks);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(\"☹ OOPS!!!Wrong input. Please refer to the instruction.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }catch (Exception e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(\"☹ OOPS!!!Wrong input. Please refer to the instruction.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(SPLIT_LINE);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void list(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println((i+1) + \":\" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void find(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        System.out.println(\"  Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String keyword \u003d line.substring(5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(tasks.get(i).getDescription().contains(keyword)){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                System.out.println(count + \": \" + tasks.get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                count ++;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void delete(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Parser.parseCommand(line).isDescriptionEmpty()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new DException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int taskNumberDeleted \u003d Integer.parseInt(line.replaceAll(\"\\\\D+\",\"\")) - 1;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(taskNumberDeleted\u003e tasks.size()||taskNumberDeleted\u003c0){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new IndexDoNotExistException();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  \" + tasks.get(taskNumberDeleted));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            tasks.remove(taskNumberDeleted);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (DException e){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (IndexDoNotExistException e){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a delete is out of range.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void event(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Parser.parseCommand(line).isDescriptionEmpty()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new DException();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            tasks.add(new Event(line));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  \"+new Event(Parser.parseCommand(line).getInputMessage()));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(DException e){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void deadline(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Parser.parseCommand(line).isDescriptionEmpty()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new DException();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            tasks.add(new Deadline(line));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  \"+new Deadline(Parser.parseCommand(line).getInputMessage()));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(DException e){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void todo(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Parser.parseCommand(line).isDescriptionEmpty()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new DException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            tasks.add(new Todo(line));"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"  \"+new Todo(Parser.parseCommand(line).getInputMessage()));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch(DException e){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    private static void done(String line, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if (Parser.parseCommand(line).isDescriptionEmpty()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new DException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            int taskNumberCompleted \u003d Integer.parseInt(line.replaceAll(\"\\\\D+\",\"\")) - 1;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(taskNumberCompleted\u003e tasks.size()||taskNumberCompleted\u003c0){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                throw new IndexDoNotExistException();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            tasks.set(taskNumberCompleted, tasks.get(taskNumberCompleted).completeTask());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\" \" + tasks.get(taskNumberCompleted));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (DException e){"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }catch (IndexDoNotExistException e){"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            System.out.println(\"☹ OOPS!!! The description of a done is out of range.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static String readFile(ArrayList\u003cTask\u003e tasks, Scanner in, Scanner sc) {//read tasks from txt file"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        while(true){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(sc.hasNextLine()){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                line\u003d sc.nextLine();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(line.startsWith(\"[T]\")){"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    if(line.substring(3,6).equals(\"[\\u2713]\")){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"todo \" + line.substring(7);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Todo(line, true));"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"todo \" + line.substring(7);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Todo(line));"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(line.startsWith(\"[D]\")){"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    if(line.substring(3,6).equals(\"[\\u2713]\")){"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"deadline \" + line.substring(7,(line.indexOf(\"(\") )) + \"/ by\" + line.substring(line.indexOf(\":\")+2,line.indexOf(\")\"));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Deadline(line, true));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"deadline \" + line.substring(7,(line.indexOf(\"(\") )) + \"/ by\" + line.substring(line.indexOf(\":\")+2,line.indexOf(\")\"));"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Deadline(line));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                if(line.startsWith(\"[E]\")){"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    if(line.substring(3,6).equals(\"[\\u2713]\")){"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"event \" + line.substring(7,(line.indexOf(\"(\") )) + \"/ at\" + line.substring(line.indexOf(\":\")+2,line.indexOf(\")\"));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Event(line, true));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }else{"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        line \u003d \"event \" + line.substring(7,(line.indexOf(\"(\") )) + \"/ at\" + line.substring(line.indexOf(\":\")+2,line.indexOf(\")\"));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                        tasks.add(new Event(line));"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                line\u003d in.nextLine();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public static void write(ArrayList\u003cTask\u003e tasks, File data) throws IOException {//write tasks to txt file"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        FileWriter writer \u003d new FileWriter(data,false);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(tasks.get(i) instanceof Deadline){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                writer.write((tasks.get(i)).toString() + \"\\n\");}"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(tasks.get(i) instanceof Event){"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                writer.write((tasks.get(i)).toString() + \"\\n\");}"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "            if(tasks.get(i) instanceof Todo){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "                writer.write((tasks.get(i)).toString() + \"\\n\");}"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 238
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Deadline(String line) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(line.substring(9,(line.indexOf(\"/\")-1)));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.by \u003d line.substring((line.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Deadline(String line, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(line.substring(9,(line.indexOf(\"/\")-1)),done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.by \u003d line.substring((line.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Task completeTask(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.setDone(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return \"[\" + \"D\" + \"]\" + super.toString() + \" (by: \"+ by +\")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 24
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Event(String line) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(line.substring(6,(line.indexOf(\"/\")-1)));//divide it by\"/\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.at \u003d line.substring((line.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Event(String line, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(line.substring(6,(line.indexOf(\"/\")-1)), done);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.at \u003d line.substring((line.indexOf(\"/\")+4));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.at \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return \"[\" + \"E\" + \"]\" + super.toString() + \" (at: \"+ at +\")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Task(String description,boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Task completeTask(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        this.setDone(true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return\"[\"+this.getStatusIcon()+\"] \"+this.description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(description.substring(5));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public Todo(String description, boolean done){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        super(description.substring(5),done);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "        return \"[\"+\"T\"+\"]\"+ super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xX-Conan-Xx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xX-Conan-Xx": 14
    }
  }
]
