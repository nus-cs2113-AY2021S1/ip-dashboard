[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "D | 0 | finish assignment | 2021-08-10 11:59"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "E | 1 | attend class | 2021-08-10 12:00"
      }
    ],
    "authorContributionMap": {
      "gmit22": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Refer to [Setting Up](https://github.com/gmit22/ip/blob/master/README.md) guide for instructions to set up the project in IntelliJ."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Add `Task`"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "You can add 3 types of `task`s to the task manager: `Deadline`, `Event` and `Todo`."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Delete `Task`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Removes a `task` from the task manager."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Find `Task`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Find `task`s containing specified keyword in its description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### List `Task`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "List all the `task`s contained in the task manager."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Mark `task` done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Mark the specified `task` in task manager as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Exit the application."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Store `task` "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Stores the `task`s updated in task manager in a `.txt` file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Adding a `Deadline` Task - `deadline`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Adds a `task` which has to be completed by the mentioned deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: `deadline \u003cdescription\u003e /by \u003cduedate\u003e`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * The description cannot be empty"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * Follow the ISO (`YYYY-MM-DD HH:MM`) for `\u003cduedate\u003e`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `deadline finish assignment /by 2021-08-10 11:59`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Got it. I\u0027ve added this to your custom-list: "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            [D][âœ˜] finish assignment (by: Aug 10 2021 11:59:00)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Now you have 1 tasks in your list :)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Adding an `Event` Task - `event`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Adds a `task` with an attached timing/venue."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: `event \u003cdescription\u003e /by \u003cdatetime\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * The description cannot be empty."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * Follow the ISO (`YYYY-MM-DD HH:MM`) for `\u003cdatetime\u003e`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `event attend class /at 2021-08-10 12:00`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `event attend meeting /at University Town`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Got it. I\u0027ve added this to your custom-list: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            [T][X] attend class (at: Aug 10 2021 12:00:00)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Now you have 2 tasks in your list :)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Adding a `ToDo` Task - `todo`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Adds a `task` with to-do description."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * The description cannot be empty"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `todo get groceries`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Got it. I\u0027ve added this to your custom-list: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            [T][X] get groceries"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Now you have 1 tasks in your list :)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### List `task`: `list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "List all the tasks currently stored in Task Manager"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage: `list` "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    1. [D][X] finish assignment (by: Aug 10 2021 11:59:00)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    2. [E][X] attend class (at: Aug 10 2021 12:00:00)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    3. [T][X] get groceries"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    4. [T][X] do class work"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Mark `task` as done: `done`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Marks a specified `Task` as done. `list` can be used to find index of the relevant `task`. "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: done \u003ctaskNumber\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * taskNumber must be within the limits of tasks stored in the task manager."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * taskNumber should be positive."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `done 2` "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    Got it. I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        [E][âœ“] attend class (at: Aug 10 2021 12:00:00)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Delete `task` : `delete`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Remove a specified `Task` from the task manager. `list` can be used to find index of the relevant `task`."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: delete \u003ctaskNumber\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * taskNumber must be within the limits of tasks stored in the task manager."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * taskNumber should be positive."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `delete 3` "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "\t------------------------------------------------------------"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "\t\t[T][âœ“] get groceries"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "\tNow you have 1 tasks in your list :)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "\t------------------------------------------------------------"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Find `task` : `find`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Find all `task`s in task manager containing specified keyword in its description."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Format: find \u003ckeyword\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Constraints:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * If no matching task found, returns a no matching statement."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `find class`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  \t------------------------------------------------------------"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  \tHere are matching tasks in your list:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  \t\t1. [E][âœ“] attend class (at: Aug 10 2021 12:00:00)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            2. [T][X] do class work"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  \t------------------------------------------------------------"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gmit22"
        },
        "content": "### Exit Application: `bye`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Exits the application and prints a exit message, indicating the number of tasks not marked as done in task manager."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Usage command:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gmit22"
        },
        "content": "  * `bye`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gmit22"
        },
        "content": "* Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    Bye! Dobby is now free!"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    You currently have 1 tasks left"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    Happy to help you organize work. Anywhere, anytime!"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ------------------------------------------------------------  "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## FAQ"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Q**: How do I transfer my data to another computer?\u003cbr\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**A**: Install the application in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Dobby -Task Manager. The filename is \"data.txt\" and can be located under data directory."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gmit22"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gmit22"
        },
        "content": "Action | Format, Examples"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gmit22"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Add todo task** | `todo \u003cdescription\u003e` \u003cbr\u003e Example: `todo buy groceries`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Add deadline task** | `deadline \u003cdescription\u003e /by \u003cduedate\u003e` \u003cbr\u003e Example: `deadline assignment /by 2020-08-16 23:59`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Add event task** | `event \u003cdescription\u003e /at \u003cduedate\u003e` \u003cbr\u003e Example: `event lunch /at 2021-05-22 12:00`"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**List tasks** | `list`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Mark as done** | `done \u003ctaskNumber\u003e`\u003cbr\u003e Example: `done 2`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Delete task** | `delete \u003ctaskNumber\u003e`\u003cbr\u003e Example: `delete 6`"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Find with keyword** | `find \u003ckeyword\u003e`\u003cbr\u003e Example: `find class`"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gmit22"
        },
        "content": "**Exit application** | `bye`"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gmit22"
        },
        "content": "      "
      }
    ],
    "authorContributionMap": {
      "gmit22": 156,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import command.CommandExecute;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import file.FileManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import tasks.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String TASK_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String TASK_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /*path for home directory*/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final String ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"data.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Path DIR_PATH \u003d Paths.get(ROOT, \"data\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final boolean DIRECTORY_EXISTS \u003d Files.exists(DIR_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static TaskManager taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        FileManager fileManager;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        File file \u003d new File(String.valueOf(DIR_PATH));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (!DIRECTORY_EXISTS) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            file.mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        fileManager \u003d new FileManager(FILE_PATH.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        // Create TaskManager"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            taskList \u003d createTaskManager(fileManager);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Creates a data.txt file if not existing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Creates a TaskManager object to update and retrieve data from the .txt file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static TaskManager createTaskManager(FileManager fileManager) throws IOException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        // Will loop as long as FileNotFoundException is caught, and file is not created"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                return new TaskManager(fileManager);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                // Create file if not found"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    fileManager.createFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } catch (IOException err) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    throw err;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                } catch (Exception exception) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    exception.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Runs the task scheduler."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Manages the messages shown to the user as the output."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Handles commands, UI and storing of tasks to a .txt file."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String[] taskDetails;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Command input \u003d new Command(in.nextLine());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        //loop runs till the user inputs bye in the cli"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                CommandExecute type \u003d input.extractType();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.printLineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case MARK_DONE:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    int taskNumber \u003d input.extractTaskNumber();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    task \u003d TaskManager.taskDone(taskNumber);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printTaskDone(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    //print list of items"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.listTasks(taskList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    String toDoTask \u003d input.getMessage().substring(5).trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    task \u003d TaskManager.addToDo(toDoTask);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printTaskAddedMessage(task, taskList.getTaskCount());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    String deadlineTask \u003d input.getMessage().substring(9).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    taskDetails \u003d deadlineTask.trim().split(TASK_BY);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    task \u003d TaskManager.addDeadline(taskDetails);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printTaskAddedMessage(task, taskList.getTaskCount());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    String eventTask \u003d input.getMessage().substring(6);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    taskDetails \u003d eventTask.trim().split(TASK_AT);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    task \u003d TaskManager.addEvent(taskDetails);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printTaskAddedMessage(task, taskList.getTaskCount());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.exit(taskList);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    int id \u003d Integer.parseInt(input.getMessage().substring(7));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    task \u003d TaskManager.deleteTask(id);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.removeTask(task, taskList.getTaskCount());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    String keyWord \u003d input.getMessage().substring(5).trim();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ArrayList\u003cTask\u003e foundTasks \u003d TaskManager.findTask(keyWord);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printFoundTasks(foundTasks);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    ui.printCommandNotFound();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                if (type \u003d\u003d CommandExecute.EXIT) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.printError(e.toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskList.writeToFile();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                ui.printFileError();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            ui.printLineSeparator();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            input \u003d new Command(in.nextLine());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 145,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import tasks.TaskManager;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constants used to display output to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Changing the LEN_LINE_SEPARATOR can change the length of the line separator shown."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Bye! Dobby is now free!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final int LEN_LINE_SEPARATOR \u003d 60;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static final String LINE_SEPARATOR \u003d \"\\t\" + \"-\".repeat(LEN_LINE_SEPARATOR);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     *Outputs confirmation message for a task marked to be done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     *Displays the task in consideration for this."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param task, task object that is marked done in the taskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printTaskDone(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskList ArrayList object of taskManager containing tasks added (/data.txt)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Prints the list of all tasks stored."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void listTasks(TaskManager taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (taskList.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\t\" + \"You currently have no tasks\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\t\" + \"To update your to-do list, just type the task\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\t\" + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (int j \u003d 0; j \u003c taskList.getTaskCount(); j++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\" + (j + 1) + \". \" + taskList.getTask(j).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Prints confirmation message for added task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param task Task that is added to the taskManager."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskCount Number of total tasks added to the taskManager."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printTaskAddedMessage(Task task, int taskCount) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this to your custom-list: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + \"Now you have \" + taskCount + \" tasks in your list :)\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Removes a task from the taskManager."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param task Task that has been deleted, valid index needs to be inputted by the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskCount Total number of tasks, after task has been removed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void removeTask(Task task, int taskCount) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            printError(\"Please enter a valid index for task deletion.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\t\\t\" + task.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\t\" + \"Now you have \" + taskCount + \" tasks in your list :)\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Exit message, shows number of tasks not marked as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskList ArrayList object of taskManager containing tasks added."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void exit(TaskManager taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + EXIT_MESSAGE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\tYou currently have \" + taskList.getTaskLeft() + \" tasks left\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + \"Happy to help you organize work. Anywhere, anytime!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Welcome message to the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"\\t\" + \"Hello Master! I\u0027m Dobby \\n\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Display error message passed by string."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param s Error message"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printError(String s) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Prints error if any, during writing to the .txt file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printFileError() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\" Error in reading/writing the file\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Notifies user if invalid command is entered."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printCommandNotFound() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(\"It seems like you entered an unidentified command :(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Line separator for marker between user inputs."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printLineSeparator() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        System.out.println(LINE_SEPARATOR);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Outputs tasks containing the query keyword."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param foundTasks ArrayList of tasks that match the keyWord"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void printFoundTasks(ArrayList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (foundTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\tNo matching tasks found, please check your keyword.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\tHere are matching tasks in your list:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                System.out.println(\"\\t\\t\" + (i + 1) + \". \" + foundTasks.get(i).toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 119
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param message Command inputted by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Command(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param line Takes in the deadline by/at part of input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Parses line to return datetime object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static LocalDate parseDate(String line) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String[] params \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String d : params) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                date \u003d LocalDate.parse(d);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param line Deadline by/at part of user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Parses line to return LocalTime object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static LocalTime parseTime(String line) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String[] params \u003d line.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        LocalTime time \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (String d : params) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                time \u003d LocalTime.parse(d);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Uses enum CommandExecute class to decide type of command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Type of command to process, call relevant functions."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException In case of unidentified commands."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public CommandExecute extractType() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        message \u003d message.trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String command \u003d message;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (message.contains(\" \")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            command \u003d message.split(\" \")[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.EXIT;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.LIST;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.MARK_DONE;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (message.length() \u003c 4) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.UNIDENTIFIED);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.TODO;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.DEADLINE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.EVENT;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.DELETE;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (command.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return CommandExecute.FIND;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.UNIDENTIFIED);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String message of command."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Used for parsing taskDone command to get task to be done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Integer taskId of the task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int extractTaskNumber() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        int itemNo;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            String itemNumber \u003d message.trim().substring(5, message.length()).trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            itemNo \u003d Integer.parseInt(itemNumber);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            itemNo \u003d 0;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return itemNo;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 103
    }
  },
  {
    "path": "src/main/java/command/CommandExecute.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": " * Constant variables to process command type inputted by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public enum CommandExecute {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 15
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private ExceptionType exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param exception Store the exception in the object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public DukeException(ExceptionType exception) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.exception \u003d exception;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String message of the error thrown."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return (exception.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 20
    }
  },
  {
    "path": "src/main/java/exception/ExceptionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": " * Store messages as constant to be printed, in case of exceptions relevant to the project thrown."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public enum ExceptionType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MISSING_TASK_DESCRIPTION(\"\\tPlease add the missing task description\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MISSING_IDENTIFIER(\"\\tIdentifier (/at or /by) missing.\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    UNIDENTIFIED(\"\\tUnknown command entered\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    NOT_A_NUMBER(\"\\tPlease enter a valid task number\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    MISSING_ON_TIME(\"\\tYou did not enter  the time for the task\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    INVALID_NUMBER(\"\\tThat\u0027s not a valid item number for any task in your list!\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    ExceptionType(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String type message relevant to the exception."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 28
    }
  },
  {
    "path": "src/main/java/file/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import tasks.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * FileManager constructor, used to write and read to designated file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param filePath String path of the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public FileManager(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String FilePath of the .txt file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getFilePath() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Creates a file at filepath if not already existing."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws IOException If parent directory not present/ invalid path."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void createFile() throws  IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (file.createNewFile()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\tFile created at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            System.out.println(\"\\tFile already exists at location: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Reads the .txt file, sends data to parse it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskList TaskList to which tasks are added, and stored."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void parseFile(TaskManager taskList) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        FileInputStream fstream;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        fstream \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(new InputStreamReader(fstream));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            taskList.parseLines(br);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Updates the .txt file after every command, through TaskManager.writeToFIle()."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param line String input to write to the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void saveToFile(String line) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        FileWriter fr \u003d null;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            fr \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            fr.write(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                if (fr !\u003d null) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                    fr.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 88
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param by Deadline for the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        setDateTime(by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String representation of deadlineTask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String dateFormatted \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (hasDate \u0026\u0026 hasTime){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            dateFormatted \u003d getFormattedDate() + \" \" + getFormattedTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            dateFormatted \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateFormatted + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String parameter details of the object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 34
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param description Description of the eventTask."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param at Location, timing/date of the eventTask."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        setDateTime(at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String representation of eventTask."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String dateFormatted;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (hasDate \u0026\u0026 hasTime) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            dateFormatted \u003d getFormattedDate() + \" \" + getFormattedTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            dateFormatted \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateFormatted + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String parameter details of the object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 35
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": " * Task class, used as a super class for other categorized task classes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected boolean hasDate \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected boolean hasTime \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String description stored in the object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Boolean indicating whether a task has been marked as done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Status icon, âœ˜ if a task is not done, âœ“ if a task is done."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * marks the task as done, isDone set to true."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Output format of task objects to be shown."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Formatted input of date to store in the object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String getFormattedDate() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return hasDate ? date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) : \"\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Formatted input of time."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected String getFormattedTime() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return hasTime ? time.format(DateTimeFormatter.ofPattern(\"hh:mm:ss\")) : \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param date Updates the object variable date to parsed date."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private void setDate(LocalDate date) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        hasDate \u003d true;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param time Updates the object variable time to parsed time."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private void setTime(LocalTime time) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        hasTime \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Parses input parameter, to check and extract date and time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param line Contains details regarding date and time, by for deadline, at for event."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    protected void setDateTime(String line) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        LocalDate parsedDate \u003d Command.parseDate(line);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        LocalTime parsedTime \u003d Command.parseTime(line);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parsedDate !\u003d null) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            setDate(parsedDate);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (parsedTime !\u003d null) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            setTime(parsedTime);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 99
    }
  },
  {
    "path": "src/main/java/tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import exception.ExceptionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import file.FileManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(MAX_TASKS);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static int taskLeft \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private final FileManager fileManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param fileManager FileManager object having location of file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException Exception raised while parsing file, to add tasks to the TaskManager."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws FileNotFoundException If file not found while converting into stream."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public TaskManager(FileManager fileManager) throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        this.fileManager \u003d fileManager;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        fileManager.parseFile(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Updates taskLeft, taskCount."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param task Add task to taskList variable of the class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    private static void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        taskLeft++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param deadlineTask Details to instantiate deadlineTask."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object added to the taskList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException If invalid input format by the user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task addDeadline(String[] deadlineTask) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (deadlineTask[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.MISSING_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (deadlineTask.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.MISSING_ON_TIME);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String description \u003d deadlineTask[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String by \u003d deadlineTask[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        addTask(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param toDoDescription Details to instantiate toDoTask."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object added to the taskList."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException If invalid input format by the user."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task addToDo(String toDoDescription) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            ToDo todo \u003d new ToDo(toDoDescription);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            addTask(todo);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.MISSING_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param eventTask Details to instnatiate eventTask."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object added to the taskList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException If invalid input format by the user."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task addEvent(String[] eventTask) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (eventTask[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.MISSING_TASK_DESCRIPTION);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (eventTask.length \u003c 2) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.MISSING_ON_TIME);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String description \u003d eventTask[0].trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String at \u003d eventTask[1].trim();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        addTask(event);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param keyword Keyword to match the taskDescription of objects in taskList."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return ArrayList of tasks matching the keyword."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static ArrayList\u003cTask\u003e findTask(String keyword){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e(MAX_TASKS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (Task task: taskList){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (task.description.contains(keyword)){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                foundTasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param id Id of the task to be deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object deleted from the taskList."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task deleteTask(int id) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task\u003d null;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (id \u003c\u003d taskCount) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            task \u003d taskList.get(id - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            taskList.remove(id - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            taskCount--;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (!task.isDone) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskLeft--;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param taskNumber TaskNumber to be deleted from the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task marked as done."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException If invalid taskNumber input by the user."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task taskDone(int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else if (taskNumber \u003e taskCount) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            throw new DukeException(ExceptionType.INVALID_NUMBER);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            return TaskManager.markAsDone(taskNumber);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Mark relevant task as done."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param id of task to be marked as done."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object of taskId."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public static Task markAsDone(int id) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        Task task \u003d taskList.get(id - 1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        if (!task.isDone) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            taskLeft--;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Number of tasks."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return taskCount;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return taskLeft to be done."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public int getTaskLeft() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return taskLeft;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param id Id of task to be accessed in the taskList."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return Task object of relevant id."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public Task getTask(int id) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return taskList.get(id);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param br Input to parse the file."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws IOException If error in processing br input."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws DukeException If missing details of task."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void parseLines(BufferedReader br) throws IOException, DukeException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String fileLine;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        while ((fileLine \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            String[] taskDetails \u003d fileLine.trim().split(\"\\\\s*[|]\\\\s*\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d addToDo(taskDetails[2]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d addEvent(Arrays.copyOfRange(taskDetails, 2, 4));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task \u003d addDeadline(Arrays.copyOfRange(taskDetails, 2, 4));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskLeft--;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Updates the .txt file with objects changed/added to taskList."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public void writeToFile() throws IOException {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        StringBuilder lines \u003d new StringBuilder();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String taskType, isDone, desc, param;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        String delimiter \u003d \" | \";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        boolean hasParam;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; i++) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            Task task \u003d getTask(i);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskType \u003d \"T\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                param \u003d \"\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                hasParam \u003d false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskType \u003d \"D\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                param \u003d ((Deadline) task).getBy();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                hasParam \u003d true;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                taskType \u003d \"E\";"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                desc \u003d task.getDescription();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                param \u003d ((Event) task).getAt();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                hasParam \u003d true;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            isDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            lines.append(taskType).append(delimiter).append(isDone).append(delimiter).append(desc);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            if (hasParam) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gmit22"
        },
        "content": "                lines.append(delimiter).append(param);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gmit22"
        },
        "content": "            lines.append(\"\\n\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        fileManager.saveToFile(lines.toString());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 239
    }
  },
  {
    "path": "src/main/java/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @param description Description of toDoTask."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     * @return String representation of toDoTask."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gmit22"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gmit22"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gmit22"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gmit22"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gmit22": 18
    }
  },
  {
    "path": "text-ui-test/data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "E | 0 | project meeting | Mar 22th 12-2am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "D | 0 | return book | Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "D | 0 | do homework | whenever"
      }
    ],
    "authorContributionMap": {
      "gmit22": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gmit22"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gmit22"
        },
        "content": "deadline return book /by Dec 29"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gmit22"
        },
        "content": "event project meeting /at Mar 22th 12-2am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gmit22"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gmit22"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gmit22"
        },
        "content": "deadline do homework /by whenever"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gmit22"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gmit22"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gmit22"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gmit22": 11
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gmit22"
        },
        "content": "del data\\data.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gmit22"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gmit22"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gmit22"
        },
        "content": "fc /W ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gmit22"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gmit22": 6,
      "-": 18
    }
  }
]
