[
  {
    "path": "production/ip2/CONTRIBUTORS.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# Contributors"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Display | Name | Github Profile | Homepage"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "---|:---:|:---:|:---:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# I would like to join this list. How can I help the project"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/)."
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 9
    }
  },
  {
    "path": "production/ip2/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 26
    }
  },
  {
    "path": "production/ip2/docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Description of feature."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "### `Keyword` - Describe action"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "`outcome`"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 20
    }
  },
  {
    "path": "production/ip2/text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 21
    }
  },
  {
    "path": "production/ip2/text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 38
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public static int listCounter \u003d 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public static ArrayList\u003cTask\u003e myTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public final static int TASK_INTEGER \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public final static int DEADLINE_INTEGER \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public final static int EVENT_INTEGER \u003d 2;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        printStartMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            File f \u003d new File(\"tasks.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Cannot find file..... Creating one...\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Here are the tasks on your list:\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                readFile(\"tasks.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }  catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"Cannot create file!!! Exception Occured: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        Scanner UserInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            String input \u003d UserInput.nextLine();  // scan user input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            String[] command \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                switch (command[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    listCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    doneCommand(taskNumber);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    todoCommand(command[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    int boolToNumber \u003d myTasks.get(listCounter-1).getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    appendFile(\"tasks.txt\", translateIntoText(TASK_INTEGER,boolToNumber, command[1]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    deadlineCommand(command[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    boolToNumber \u003d myTasks.get(listCounter-1).getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    appendFile(\"tasks.txt\", translateIntoText(DEADLINE_INTEGER,boolToNumber, command[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    eventCommand(command[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    boolToNumber \u003d myTasks.get(listCounter-1).getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    appendFile(\"tasks.txt\", translateIntoText(EVENT_INTEGER,boolToNumber, command[1]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    taskNumber \u003d Integer.parseInt(command[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    deleteCommand(taskNumber);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    File temp \u003d new File(\"temp.txt\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    temp.createNewFile();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    File original \u003d new File(\"tasks.txt\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    String s2;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    int mode;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    for (int i \u003d 0; i \u003c listCounter; i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        String s1 \u003d String.valueOf(myTasks.get(i)).substring(1, 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        boolToNumber \u003d myTasks.get(i).getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        switch (s1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        case \"T\":       // [T][?] blabla"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            s2 \u003d myTasks.get(i).toString().substring(6);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            mode \u003d 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        case \"D\":        // E or D"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            s2 \u003d myTasks.get(i).toString().substring(6).replace(\"by:\", \"/by\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            mode \u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            s2 \u003d myTasks.get(i).toString().substring(6).replace(\"at:\", \"/at\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            mode \u003d 2;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                        appendFile(\"temp.txt\", translateIntoText(mode,boolToNumber,s2));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    original.delete();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    temp.renameTo(original);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    byeCommand();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                default :"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    throw new UnknownCommandException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } catch (EmptyListException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Empty list. Add something!\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } catch (InvalidTaskNumber e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Invalid Task Number!!!\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } catch (InsufficientDescriptionException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Hmmm....You didn\u0027t add any details...\\n\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"This command was not programmed in me...\u003dO\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"Error writing to file!\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public static void printStartMessage() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void listCommand() throws EmptyListException {   // show list"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (listCounter \u003d\u003d 0) {         // Error: empty list"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        for (int i \u003d 0; i \u003c listCounter; i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println((i + 1) + \".\" + myTasks.get(i));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void doneCommand(int taskNumber) throws EmptyListException,InvalidTaskNumber {    // mark tick"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (listCounter \u003d\u003d 0) {            // Error: empty list"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else if ((taskNumber \u003c\u003d 0) || (taskNumber \u003e (listCounter))) {       // Error: wrong task number"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new InvalidTaskNumber();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            myTasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                myTasks.get(taskNumber - 1) +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                \"\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void todoCommand(String description) throws InsufficientDescriptionException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new InsufficientDescriptionException();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        myTasks.add(new Todo(description));"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            myTasks.get(listCounter) +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                            \"\\nNow you have \" + (listCounter + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        listCounter++;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void deadlineCommand(String description) throws InsufficientDescriptionException {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        int x \u003d description.indexOf(\"/by\");         // finds index of /by"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (x \u003d\u003d -1) {          // no /by found"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new InsufficientDescriptionException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            myTasks.add(new Deadline(description.substring(0, x), description.substring(x + 4)));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                myTasks.get(listCounter) +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                \"\\nNow you have \" + (listCounter + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            listCounter++;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void eventCommand(String description) throws InsufficientDescriptionException{"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        int y \u003d description.indexOf(\"/at\");         // finds index of /at"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (y \u003d\u003d -1) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new InsufficientDescriptionException();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            myTasks.add(new Event(description.substring(0, y), description.substring(y + 4)));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                myTasks.get(listCounter) +"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                                \"\\nNow you have \" + (listCounter + 1) + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            listCounter++;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void deleteCommand(int taskNumber) throws EmptyListException, InvalidTaskNumber {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        if (listCounter \u003d\u003d 0) {            // Error: empty list"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else if ((taskNumber \u003c\u003d 0) || (taskNumber \u003e (listCounter))) {       // Error: wrong task number"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            throw new InvalidTaskNumber();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(\"Noted! I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            myTasks.get(taskNumber - 1) +"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            \"\\nNow you have \" + (listCounter-1) + \" tasks left.\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            myTasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            listCounter--;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void byeCommand() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        \"Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        \"____________________________________________________________\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void readFile(String pathName) throws FileNotFoundException {    // read and add to current list in Duke"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        File f \u003d new File(pathName);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            String fileOutputLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            System.out.println(fileOutputLine);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            String[] textDescription \u003d fileOutputLine.split(\" \\\\| \",-1);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            switch (textDescription[0]) {       // take in the first letter"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                myTasks.add(new Todo(textDescription[2]));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                if (textDescription[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    myTasks.get(listCounter).markAsDone();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                listCounter++;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                myTasks.add(new Deadline(textDescription[2], textDescription[3]));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                if (textDescription[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    myTasks.get(listCounter).markAsDone();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                listCounter++;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                myTasks.add(new Event(textDescription[2], textDescription[3]));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                if (textDescription[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                    myTasks.get(listCounter).markAsDone();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                listCounter++;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static String translateIntoText(int mode, int boolToNumber, String description) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        switch (mode) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        case 0:         // to do"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            return \"T | \" + boolToNumber + \" | \" +  description;        // T | 1 | blabla"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        case 1:         // deadline"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            description \u003d description.replace(\"/by\",\"|\");"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            return \"D | \" + boolToNumber + \" | \" + description;         // D | 1 | blabla | 2222"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        default:        // event"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            description \u003d description.replace(\"/at\",\"|\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "            return \"E | \" + boolToNumber + \" | \" + description;         // E | 1 | blablabla | 3333"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private static void appendFile(String pathName, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        FileWriter fw \u003d new FileWriter(pathName, true);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        fw.write(\"\\n\" + textToAdd);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 302,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class EmptyListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InsufficientDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class InsufficientDescriptionException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTaskNumber.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class InvalidTaskNumber extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class UnknownCommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 4
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 15
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EdmundEXE"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EdmundEXE": 16
    }
  }
]
