[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "T | 1 | try code"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "T | 0 | level-8"
      }
    ],
    "authorContributionMap": {
      "hui444": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.storage.StorageFile;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private TextUi ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private StorageFile storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private TaskList task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "        new Duke().run(args);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    /** Runs the program until termination. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public void run(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "        start(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "     * Sets up the required object, loads up the data from the storage file,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "     * and prints greeting message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "     * @param args Arguments supplied by the user at Duke launch."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private void start(String[] args) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "            ui \u003d new TextUi();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "            task \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "            storage \u003d new StorageFile(\"data/duke.txt\", \"data\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.println(TextUi.MESSAGE_GREET_SIGN);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": "    /** Prints bye message and exits Duke. */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(TextUi.MESSAGE_BYE_SIGN);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "    /** Reads the user command and executes it, until the user issues the exit command. */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": "        while(!line.equals(Commands.COMMAND_BYE)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hui444"
        },
        "content": "            Parser.handleTasks(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "            in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 63
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Initialises and adds tasks to task list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static ArrayList\u003cTask\u003e arrTasks\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void addTask(Task task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tarrTasks.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 16
    }
  },
  {
    "path": "src/main/java/duke/commands/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Adds a deadline to task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class DeadlineCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void addDeadline(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(!task.contains(\"/by\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_NO_DATE_DEADLINE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tString description \u003d task.substring(0, task.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tString deadlineDate \u003d task.substring(task.indexOf(\"/by\") + 3);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTask deadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTaskList.addTask(deadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tdeadline.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isNew) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tTextUi.echoTask(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Deletes task from task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class DeleteCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void deleteTask(String inputNum) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tint deletedItemIndex \u003d Parser.getIndexFromInput(inputNum,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t\t\"Please input a number to delete task.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tSystem.out.println(\"Noted. I\u0027ve removed this task:  \\n\\t\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t\t+ TaskList.arrTasks.get(deletedItemIndex));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTaskList.arrTasks.remove(deletedItemIndex);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tString wordTask \u003d (TaskList.arrTasks.size() \u003e 1) ? \" tasks\" : \" task\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tSystem.out.println(\"Now you have \" + TaskList.arrTasks.size() + wordTask + \" in the list.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (DukeException err) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tthrow err;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 27
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Marks specified task in task list as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class DoneCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void markAsDone(String inputNum) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tint itemIndex \u003d Parser.getIndexFromInput(inputNum,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t\t\"Please input a number to mark task as done.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(TaskList.arrTasks.get(itemIndex).getStatusIcon().equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_MARKED_TASK);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTaskList.arrTasks.get(itemIndex).markAsDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printDone(itemIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Adds an event to task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class EventCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void addEvent(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_EMPTY_EVENT);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(!task.contains(\"/at\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_NO_DATE_EVENT);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tString description \u003d task.substring(0, task.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tString eventDate \u003d task.substring(task.indexOf(\"/at\") + 3);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTask event \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTaskList.addTask(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isDone) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tevent.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isNew) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tTextUi.echoTask(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Prints task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class ListCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void printList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tif (TaskList.arrTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_EMPTY_LIST);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\treturn;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tTextUi.printLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tfor (int i \u003d 0; i \u003c TaskList.arrTasks.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tSystem.out.println((i+1) + \". \" + TaskList.arrTasks.get(i));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tTextUi.printLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 23
    }
  },
  {
    "path": "src/main/java/duke/commands/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Adds a todo to task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class TodoCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void addTodo(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_EMPTY_TODO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTask todo \u003d new ToDo(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTaskList.addTask(todo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\ttodo.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tif(isNew) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tTextUi.echoTask(todo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 31
    }
  },
  {
    "path": "src/main/java/duke/common/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Commands {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 14
    }
  },
  {
    "path": "src/main/java/duke/common/Errors.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Container for error messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Errors {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_NO_DATE_EVENT \u003d \"Please input a date for this event!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_EMPTY_TODO \u003d \"The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_EMPTY_DEADLINE \u003d \"The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_EMPTY_EVENT \u003d \"The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_EMPTY_LIST \u003d \"List is empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_INVALID_INPUT \u003d \"Invalid input!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_UNRECOGNISED_INPUT \u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_NO_DATE_DEADLINE \u003d \"Please input a date for the deadline!\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String ERROR_MARKED_TASK \u003d \"This task has already marked as done!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tthis.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Commands;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.common.Errors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Parses user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void handleTasks(String line) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString[] taskLine \u003d splitCommandAndTask(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString command \u003d taskLine[0].toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString task \u003d taskLine[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tswitch (command) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_LIST:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t//display list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tListCommand.printList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_DONE:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t//mark task as done"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tDoneCommand.markAsDone(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tTodoCommand.addTodo(task, false, true);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tDeadlineCommand.addDeadline(task, false, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_EVENT:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tEventCommand.addEvent(task, false, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tcase Commands.COMMAND_DELETE:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tDeleteCommand.deleteTask(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tbreak;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tdefault:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\tthrow new DukeException(Errors.ERROR_UNRECOGNISED_INPUT);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(Errors.ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(\"Number is out of range!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(e.errorMessage);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tStorage.writeFile(filePath, Storage.newDukeList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(e.getMessage() + \"\\n Please create a file named \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t\t+ filePath + \" !\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * Splits task inputted by user into understandable Strings."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * @param args Arguments supplied by the user."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * @return Returns command and task descriptions."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static String[] splitCommandAndTask(String args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tfinal String[] line \u003d args.trim().split(\" \",2);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tif (line.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\treturn line;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\telse {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\treturn new String[] {line[0], null};"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static int getIndexFromInput(String inputNum, String nullErrMessage) throws DukeException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tif(inputNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tthrow new DukeException(nullErrMessage);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint itemIndex \u003d Integer.parseInt(inputNum) - 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tif (itemIndex \u003c 0 || itemIndex \u003e\u003d TaskList.arrTasks.size()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tthrow new DukeException(Errors.ERROR_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn itemIndex;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 99
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.EventCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.commands.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Deals with actions regarding storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void writeFile(String filePath, String text) throws IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tFileWriter fileWriter \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tfileWriter.write(text);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tfileWriter.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * Creates a new set of task information as per user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * @return Returns a new String consisting of the current task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static String newDukeList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tStringBuilder dukeText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tfor(int i \u003d 0; i \u003c TaskList.arrTasks.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tdukeText.append(TaskList.arrTasks.get(i).fileString() + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn dukeText.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void readFile(String filePath) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tScanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\twhile(scan.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\textractData(scan.nextLine());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprivate static void extractData(String line) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString[] args \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString taskType \u003d args[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tboolean isDone \u003d Integer.parseInt(args[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString description \u003d args[2].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tswitch (taskType) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tcase \"T\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTodoCommand.addTodo(description, isDone, false);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tcase \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tdescription \u003d description + \" /by \" + args[3].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tDeadlineCommand.addDeadline(description, isDone, false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tcase \"E\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tdescription \u003d description + \" /at \" + args[3].trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tEventCommand.addEvent(description, isDone, false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(\"Cannot read task!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 72
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageFile.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.ui.TextUi;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Initalises file for storage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class StorageFile {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic StorageFile(String filePath, String directoryName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tFile file \u003d new File(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tFile directory \u003d new File(directoryName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tdirectory.mkdir();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tfile.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tStorage.readFile(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(\"File not found\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\tTextUi.printError(e.errorMessage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected String deadlineDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Deadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[D]\" + super.toString() + \"(by:\" + deadlineDate + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"D | \" + val + \" | \" + this.description + \"|\" + this.deadlineDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 22
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected String eventDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Event(String description, String eventDate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[E]\" + super.toString() + \"(at:\" + eventDate + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"E | \" + val + \" | \" + this.description + \"|\" + this.eventDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t//returns [tick] or [X] symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"| \" + val + \" | \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"T | \" + val + \" | \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 19
    }
  },
  {
    "path": "src/main/java/duke/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": " * Text UI of the Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String MESSAGE_GREET_SIGN \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t+ \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t+ \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t+ \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String MESSAGE_BYE_SIGN \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t+ \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t+ \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void printLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void printError(String errorMessage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(errorMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void printDone(int doneItemIndex) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t\t\t+ TaskList.arrTasks.get(doneItemIndex));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * Echos task added to list and prints number of task in list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t * @param task Task contains description of inputted task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic static void echoTask(Task task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tString wordTask \u003d (TaskList.arrTasks.size() \u003e 1) ? \" tasks\" : \" task\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tSystem.out.println(\"Now you have \" + TaskList.arrTasks.size() + wordTask + \" in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 52
    }
  }
]
