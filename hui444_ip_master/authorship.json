[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      }
    ],
    "authorContributionMap": {
      "hui444": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String MESSAGE_GREET_SIGN \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String MESSAGE_BYE_SIGN \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hui444"
        },
        "content": "            + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_EMPTY_TODO \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_EMPTY_DEADLINE \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_EMPTY_EVENT \u003d \"☹ OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_EMPTY_LIST \u003d \"List is empty.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_INVALID_INPUT \u003d \"Invalid input!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_UNRECOGNISED_INPUT \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Invalid task number.\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_NO_DATE_DEADLINE \u003d \"Please input a date for the deadline!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_NO_DATE_EVENT \u003d \"Please input a date for this event!\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static final String ERROR_MARKED_TASK \u003d \"This task has already marked as done!\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(HORIZONTAL_LINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printError(String errorMessage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static ArrayList\u003cTask\u003e arrTasks\u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if (arrTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(ERROR_EMPTY_LIST);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hui444"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hui444"
        },
        "content": "        for (int i \u003d 0; i \u003c arrTasks.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.println((i+1) + \". \" + arrTasks.get(i));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void addTask(Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hui444"
        },
        "content": "        arrTasks.add(task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void addTodo(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_EMPTY_TODO);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hui444"
        },
        "content": "            Task todo \u003d new ToDo(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addTask(todo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isDone) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hui444"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isNew) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hui444"
        },
        "content": "                echoTask(todo);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void addDeadline(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(task \u003d\u003d null) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_EMPTY_DEADLINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(!task.contains(\"/by\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_NO_DATE_DEADLINE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String description \u003d task.substring(0, task.indexOf(\"/by\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String deadlineDate \u003d task.substring(task.indexOf(\"/by\") + 3);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hui444"
        },
        "content": "            Task deadline \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addTask(deadline);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isDone) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hui444"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isNew) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hui444"
        },
        "content": "                echoTask(deadline);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void addEvent(String task, boolean isDone, boolean isNew) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_EMPTY_EVENT);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(!task.contains(\"/at\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_NO_DATE_EVENT);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String description \u003d task.substring(0, task.indexOf(\"/at\"));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String eventDate \u003d task.substring(task.indexOf(\"/at\") + 3);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hui444"
        },
        "content": "            Task event \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addTask(event);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isDone) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hui444"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(isNew) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hui444"
        },
        "content": "                echoTask(event);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void echoTask(Task task) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"  \" + task.toString());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String wordTask \u003d (arrTasks.size() \u003e 1) ? \" tasks\" : \" task\";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"Now you have \" + arrTasks.size() + wordTask + \" in the list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void markAsDone(String inputNum) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hui444"
        },
        "content": "            int itemIndex \u003d getIndexFromInput(inputNum,"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    \"Please input a number to mark task as done.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hui444"
        },
        "content": "            if(arrTasks.get(itemIndex).getStatusIcon().equals(\"[\\u2713]\")) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hui444"
        },
        "content": "                throw new DukeException(ERROR_MARKED_TASK);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hui444"
        },
        "content": "            arrTasks.get(itemIndex).markAsDone();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printDone(itemIndex);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(ERROR_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void printDone(int doneItemIndex) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\\t\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hui444"
        },
        "content": "                + arrTasks.get(doneItemIndex));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hui444"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static String[] splitCommandAndTask(String args) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hui444"
        },
        "content": "        final String[] line \u003d args.trim().split(\" \",2);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if (line.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hui444"
        },
        "content": "            return line;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hui444"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hui444"
        },
        "content": "            return new String[] {line[0], null};"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static int getIndexFromInput(String inputNum, String nullErrMessage) throws DukeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if(inputNum \u003d\u003d null) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hui444"
        },
        "content": "            throw new DukeException(nullErrMessage);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hui444"
        },
        "content": "        int itemIndex \u003d Integer.parseInt(inputNum) - 1;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hui444"
        },
        "content": "        if (itemIndex \u003c 0 || itemIndex \u003e\u003d arrTasks.size()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hui444"
        },
        "content": "            throw new DukeException(ERROR_INVALID_TASK_NUMBER);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return itemIndex;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void deleteTask(String inputNum) throws DukeException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hui444"
        },
        "content": "            int deletedItemIndex \u003d getIndexFromInput(inputNum,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    \"Please input a number to delete task.\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:  \\n\\t\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    + arrTasks.get(deletedItemIndex));"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hui444"
        },
        "content": "            arrTasks.remove(deletedItemIndex);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String wordTask \u003d (arrTasks.size() \u003e 1) ? \" tasks\" : \" task\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hui444"
        },
        "content": "            System.out.println(\"Now you have \" + arrTasks.size() + wordTask + \" in the list.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hui444"
        },
        "content": "            throw err;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static void writeFile(String filePath, String text) throws IOException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hui444"
        },
        "content": "        FileWriter file \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hui444"
        },
        "content": "        file.write(text);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hui444"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static String newDukeList() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hui444"
        },
        "content": "        StringBuilder dukeText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "hui444"
        },
        "content": "        for(int i \u003d 0; i \u003c arrTasks.size(); i++) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "hui444"
        },
        "content": "            dukeText.append(arrTasks.get(i).fileString() + \"\\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "hui444"
        },
        "content": "        return dukeText.toString();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void handleTasks() {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "hui444"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "hui444"
        },
        "content": "        while (!line.equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "hui444"
        },
        "content": "            //split task n line"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String[] taskLine \u003d splitCommandAndTask(line);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String command \u003d taskLine[0].toLowerCase();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String task \u003d taskLine[1];"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "hui444"
        },
        "content": "            File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "hui444"
        },
        "content": "            String file \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "hui444"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "hui444"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_LIST:"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    //display list"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    printList();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_DONE:"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    //mark task as done"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    markAsDone(task);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_TODO:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    addTodo(task, false, true);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    addDeadline(task, false, true);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_EVENT:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    addEvent(task, false, true);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "hui444"
        },
        "content": "                case COMMAND_DELETE:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    deleteTask(task);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "hui444"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "hui444"
        },
        "content": "                    throw new DukeException(ERROR_UNRECOGNISED_INPUT);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "hui444"
        },
        "content": "                }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "hui444"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "hui444"
        },
        "content": "                printError(ERROR_INVALID_INPUT);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "hui444"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "hui444"
        },
        "content": "                printError(\"Number is out of range!\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "hui444"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "hui444"
        },
        "content": "                printError(e.errorMessage);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "hui444"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "hui444"
        },
        "content": "                writeFile(file, newDukeList());"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "hui444"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "hui444"
        },
        "content": "                printError(e.getMessage() + \"\\n Please create a file named \""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "hui444"
        },
        "content": "                        + file + \" !\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "hui444"
        },
        "content": "            in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "hui444"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "hui444"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static void readFile(String filePath) throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "hui444"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "hui444"
        },
        "content": "        Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "hui444"
        },
        "content": "        while(scan.hasNext()) {"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "hui444"
        },
        "content": "            extractData(scan.nextLine());"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "hui444"
        },
        "content": "    private static void extractData(String line) throws DukeException {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String[] args \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String taskType \u003d args[0].trim();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "hui444"
        },
        "content": "        boolean isDone \u003d Integer.parseInt(args[1].trim()) \u003d\u003d 1;"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String description \u003d args[2].trim();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "hui444"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addTodo(description, isDone, false);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "hui444"
        },
        "content": "            description \u003d description + \" /by \" + args[3].trim();"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addDeadline(description, isDone, false);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "hui444"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "hui444"
        },
        "content": "            description \u003d description + \" /at \" + args[3].trim();"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "hui444"
        },
        "content": "            addEvent(description, isDone, false);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "hui444"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(\"Cannot read task!\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "hui444"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "hui444"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String directoryName \u003d \"data\";"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "hui444"
        },
        "content": "        String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "hui444"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "hui444"
        },
        "content": "        File data \u003d new File(directoryName);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "hui444"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "hui444"
        },
        "content": "            data.mkdir();"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "hui444"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "hui444"
        },
        "content": "            readFile(filePath);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(\"File not found\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(e.getMessage());"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "hui444"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "hui444"
        },
        "content": "            printError(e.errorMessage);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "hui444"
        },
        "content": "        }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(MESSAGE_GREET_SIGN);"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "hui444"
        },
        "content": "        handleTasks();"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "hui444"
        },
        "content": "        System.out.println(MESSAGE_BYE_SIGN);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "hui444"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 339
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String errorMessage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tthis. errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 10
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected String deadlineDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Deadline(String description, String deadlineDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[D]\" + super.toString() + \"(by:\" + deadlineDate + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"D | \" + val + \" | \" + this.description + \"|\" + this.deadlineDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 22
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected String eventDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Event(String description, String eventDate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[E]\" + super.toString() + \"(at:\" + eventDate + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"E | \" + val + \" | \" + this.description + \"|\" + this.eventDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 21
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tprotected Boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\t//returns [tick] or [X] symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"| \" + val + \" | \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hui444"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hui444"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t    return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hui444"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hui444"
        },
        "content": "\tpublic String fileString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\tint val \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t\treturn \"T | \" + val + \" | \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hui444"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hui444"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hui444": 19
    }
  }
]
