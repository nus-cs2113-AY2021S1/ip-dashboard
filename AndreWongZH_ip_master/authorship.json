[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "D | 1 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "E | 1 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "T | 1 | magic"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "D | 0 | cs2113T | today"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.command.CommandManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.command.IllegalCommandException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.file.FileManager;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static TaskManager taskManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static boolean isActive;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static String parameters;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static Command command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        isActive \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        CommandManager.printGreeting();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        loadPreviousData();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        while (isActive) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                userInput \u003d readUserInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                command \u003d CommandManager.extractCommand(userInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                parameters \u003d CommandManager.extractParameters(command, userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                handleUserInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            } catch (IllegalCommandException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                CommandManager.printInvalidCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                CommandManager.printInvalidParameters();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        CommandManager.printGoodbye();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** load data to TaskManager */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void loadPreviousData() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        ArrayList\u003cTask\u003e previousData \u003d FileManager.getData();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        taskManager \u003d new TaskManager(previousData);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static String readUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.printAllTasks();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.setTaskDone(parameters);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.addTask(TaskType.TODO, parameters);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.addTask(TaskType.DEADLINE, parameters);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.addTask(TaskType.EVENT, parameters);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskManager.deleteTask(parameters);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            exitProgram();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            CommandManager.printNoCommandRan();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void exitProgram() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        isActive \u003d false;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 85
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, BYE, DELETE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 5
    }
  },
  {
    "path": "src/main/java/duke/command/CommandManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class CommandManager {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String GREET \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \" __\\n\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"(\u0027\u0027)  Hello! I\u0027m MK.II Titan with feelings.\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"// \\\\  What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"|_/|\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String END \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \" __\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"( \\\")  Bye! I said with a disappointed look.\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"|| \\\\\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"|_||\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String LOGO \u003d \" _    _      _\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"| |  | |    | |\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"| |  | | ___| | ___ ___  _ __ ___   ___\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"| |/\\\\| |/ _ \\\\ |/ __/ _ \\\\| \u0027_ ` _ \\\\ / _ \\\\\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \"\\\\  /\\\\  /  __/ | (_| (_) | | | | | |  __/\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            \" \\\\/  \\\\/ \\\\___|_|\\\\___\\\\___/|_| |_| |_|\\\\___|\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_NO_COMMAND_RAN \u003d \"No command executed\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_COMMAND_NOT_VALID \u003d \"Command not valid, please try again :(\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_INVALID_PARAMETERS \u003d \"Please enter parameters after the command\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int INDEX_AFTER_DONE \u003d 5;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int INDEX_AFTER_TODO \u003d 5;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int INDEX_AFTER_DEADLINE \u003d 9;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int INDEX_AFTER_EVENT \u003d 6;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int INDEX_AFTER_DELETE \u003d 7;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static Command extractCommand(String userInput) throws IllegalCommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        if (userInput.contentEquals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.BYE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.contentEquals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.LIST;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.DONE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.TODO;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.DEADLINE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.EVENT;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            command \u003d Command.DELETE;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            throw new IllegalCommandException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static String extractParameters(Command command, String userInput) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        String parameters;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d userInput.substring(INDEX_AFTER_DONE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d userInput.substring(INDEX_AFTER_TODO);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d userInput.substring(INDEX_AFTER_DEADLINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d userInput.substring(INDEX_AFTER_EVENT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d userInput.substring(INDEX_AFTER_DELETE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            parameters \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(GREET);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(END);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void printNoCommandRan() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_NO_COMMAND_RAN);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_COMMAND_NOT_VALID);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void printInvalidParameters() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_INVALID_PARAMETERS);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 105,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 4
    }
  },
  {
    "path": "src/main/java/duke/file/DataParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class DataParser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String REGEX_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static ArrayList\u003cTask\u003e fileToTask(ArrayList\u003cString\u003e dataStreams) throws FileCorruptedException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        for (String fileData : dataStreams) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            String[] params \u003d fileData.split(REGEX_DELIMITER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            String taskType \u003d params[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            Boolean done \u003d Integer.parseInt(params[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            String description \u003d params[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            switch(taskType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Todo(done, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Deadline(done, description, params[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Event(done, description, params[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                throw new FileCorruptedException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 41
    }
  },
  {
    "path": "src/main/java/duke/file/FileCorruptedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class FileCorruptedException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 4
    }
  },
  {
    "path": "src/main/java/duke/file/FileManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class FileManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_UNABLE_TO_WRITE_FILE \u003d \"Error unable to open file to write\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_FILE_NOT_FOUND \u003d \"Error file not found\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_CORRUPT_FILE \u003d \"Error, data file might be corrupted\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_UNABLE_TO_CREATE_DATA_FILE \u003d \"Unable to create data file\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_UNABLE_TO_DELETE_FILE \u003d \"Unable to delete file\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_UNABLE_TO_CREATE_DIRECTORY \u003d \"Unable to create directory\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String SUCCESS_DATA_FILE_CREATED \u003d \"Data file created under data/duke.txt\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String SUCCESS_FILE_DELETED \u003d \"Corrupt file deleted\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String SUCCESS_DATA_DIRECTORY_CREATED \u003d \"Data directory created\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String DATA_DIRECTORY \u003d \"data\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static final String FILE_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Check if ./data/duke.txt exist, if not creates it."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Reads data from ./data/duke.txt."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Parse the string formats into task objects"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @return previousData in the form of an ArrayList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static ArrayList\u003cTask\u003e getData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Path filePath \u003d Paths.get(DATA_DIRECTORY, FILE_NAME);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Path directoryPath \u003d Paths.get(DATA_DIRECTORY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        if(!Files.exists(directoryPath)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            createDataDirectory(directoryPath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            createDataFile(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        ArrayList\u003cString\u003e dataStreams \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        ArrayList\u003cTask\u003e previousData \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            s \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                dataStreams.add(s.nextLine());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            previousData \u003d DataParser.fileToTask(dataStreams);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printFileNotFound();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (FileCorruptedException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printCorruptFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            deleteDataFile(filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            createDataFile(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return previousData;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Check if ./data/duke.txt exist, if not creates it."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Reads data from ./data/duke.txt."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Parse the string formats into task objects"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param filePath location of path to write to"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param tasks an ArrayList of task objects"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                fw.write(task.convertToData());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printUnableToWriteFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void createDataDirectory(Path directoryPath) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            Files.createDirectory(directoryPath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printDirCreated();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printUnableToCreateDir();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void createDataFile(Path filePath) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            Files.createFile(filePath);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printFileCreated();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printUnableToCreateFile();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void deleteDataFile(Path filePath) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            Files.deleteIfExists(filePath);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printFileDeleted();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printUnableToDeleteFile();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printDirCreated() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(SUCCESS_DATA_DIRECTORY_CREATED);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printUnableToCreateDir() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_UNABLE_TO_CREATE_DIRECTORY);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printFileDeleted() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(SUCCESS_FILE_DELETED);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printUnableToDeleteFile() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_UNABLE_TO_DELETE_FILE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printFileCreated() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(SUCCESS_DATA_FILE_CREATED);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printUnableToCreateFile() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_UNABLE_TO_CREATE_DATA_FILE);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printUnableToWriteFile() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_UNABLE_TO_WRITE_FILE);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printFileNotFound() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static void printCorruptFile() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_CORRUPT_FILE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 152
    }
  },
  {
    "path": "src/main/java/duke/file/FileWritable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.file;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public interface FileWritable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    String SEPARATOR \u003d \" | \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    String convertToData();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.file.FileWritable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String DEADLINE_TAG \u003d \"D\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String DEADLINE_TAG_ENCLOSED \u003d \"[D]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String BY_OPEN_TEXT \u003d \" (by: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String BY_CLOSE_TEXT \u003d \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    protected final String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Deadline(String[] details) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(details[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        by \u003d details[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Deadline(Boolean done, String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return DEADLINE_TAG_ENCLOSED + super.toString() + BY_OPEN_TEXT + by + BY_CLOSE_TEXT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return DEADLINE_TAG + super.convertToData() + FileWritable.SEPARATOR + by;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.file.FileWritable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String EVENT_TAG \u003d \"E\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String EVENT_TAG_ENCLOSED \u003d \"[E]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String AT_OPEN_TEXT \u003d \" (at: \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String AT_CLOSE_TEXT \u003d \")\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Event(String[] details) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(details[0]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        at \u003d details[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Event(Boolean done, String description, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return EVENT_TAG_ENCLOSED + super.toString() + AT_OPEN_TEXT + at + AT_CLOSE_TEXT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return EVENT_TAG + super.convertToData() + FileWritable.SEPARATOR + at;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 37
    }
  },
  {
    "path": "src/main/java/duke/task/MissingTaskLiteralException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class MissingTaskLiteralException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public MissingTaskLiteralException(String literal) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(literal);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.file.FileWritable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public abstract class Task implements FileWritable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ICON_TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ICON_CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String STATUS_OPEN_BRACKET \u003d \"[\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String STATUS_CLOSE_BRACKET \u003d \"] \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Task(Boolean done, String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Sets the task done boolean to the parameter value."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param done boolean status of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return STATUS_OPEN_BRACKET + getStatusIcon() + STATUS_CLOSE_BRACKET + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return FileWritable.SEPARATOR + convertDoneToString() + FileWritable.SEPARATOR + description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return (isDone ? ICON_TICK : ICON_CROSS);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    protected String convertDoneToString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return \"0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 53
    }
  },
  {
    "path": "src/main/java/duke/task/TaskAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public interface TaskAction {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    void addTask(TaskType taskType, String inputText);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    void printAllTasks();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    void setTaskDone(String inputText);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    void deleteTask(String inputText);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 8
    }
  },
  {
    "path": "src/main/java/duke/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "import duke.file.FileManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": " * Stores and add to the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class TaskManager implements TaskAction {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String BY_LITERAL \u003d \" /by \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String AT_LITERAL \u003d \" /at \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final int MAX_INPUT_PARAMS \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_NOT_INTEGER \u003d \"Sorry but parameter entered is not a integer\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_NOT_IN_RANGE \u003d \"Sorry but parameter entered is not within range of list\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_TASK_TYPE_NOT_FOUND \u003d \"Task type is not found\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String ERROR_LIST_EMPTY \u003d \"No task in your list. Add some!\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public TaskManager(ArrayList\u003cTask\u003e previousData) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        tasks \u003d previousData;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Adds a task to the user\u0027s list of tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Prints to user that task has been added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param taskType represents the type of task to store."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param inputText text of the user input to store."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void addTask(TaskType taskType, String inputText) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        String[] taskParameters;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Todo(inputText);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                taskParameters \u003d splitItem(TaskType.DEADLINE, inputText);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Deadline(taskParameters);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                taskParameters \u003d splitItem(TaskType.EVENT, inputText);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                task \u003d new Event(taskParameters);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                throw new IllegalStateException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            addTaskToList(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printAddTaskSuccessful(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            FileManager.writeToFile(FileManager.FILE_PATH, tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (MissingTaskLiteralException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printMissingLiteral(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (IllegalStateException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskNotFound();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        addTaskToList(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        printAddTaskSuccessful(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        FileManager.writeToFile(FileManager.FILE_PATH, tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Prints the entire list of user\u0027s tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void printAllTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            System.out.println(ERROR_LIST_EMPTY);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Sets the particular task to be done."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Prints to user that task has been set to done."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param inputText Corresponding value of the task to set done."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void setTaskDone(String inputText) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskNumber \u003d getTaskNumber(inputText);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            tasks.get(taskNumber).setDone(true);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printSetTaskDone(taskNumber, inputText);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            FileManager.writeToFile(FileManager.FILE_PATH, tasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskDoneNotInteger();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskDoneNotInRange();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Deletes a particular task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * Prints to user that task has been deleted."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     * @param inputText Corresponding value of the task to delete."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public void deleteTask(String inputText) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            taskNumber \u003d getTaskNumber(inputText);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            task \u003d tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskRemoved(task, inputText);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            FileManager.writeToFile(FileManager.FILE_PATH, tasks);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskDoneNotInteger();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            printTaskDoneNotInRange();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printTaskDoneNotInteger() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_NOT_INTEGER);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printTaskDoneNotInRange() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_NOT_IN_RANGE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printTaskNotFound() {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(ERROR_TASK_TYPE_NOT_FOUND);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printMissingLiteral(String literal) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Command is missing the\" + literal + \"literal\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /**  splits user input into descriptions and date/time */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private String[] splitItem(TaskType taskType, String inputText) throws MissingTaskLiteralException, IllegalStateException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        String[] taskParameters \u003d new String[MAX_INPUT_PARAMS];"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            if (!inputText.contains(BY_LITERAL)) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                throw new MissingTaskLiteralException(BY_LITERAL);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            index \u003d inputText.indexOf(BY_LITERAL);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            if (!inputText.contains(AT_LITERAL)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "                throw new MissingTaskLiteralException(AT_LITERAL);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            index \u003d inputText.indexOf(AT_LITERAL);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "            throw new IllegalStateException();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        taskParameters[0] \u003d inputText.substring(0, index);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        taskParameters[1] \u003d inputText.substring(index + 5);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return taskParameters;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** add a task instance to taskList */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void addTaskToList(Task task) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** returns the index of the task in the tasklist */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private int getTaskNumber(String inputText) throws NumberFormatException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return Integer.parseInt(inputText) - 1;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** print message after a task is added */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printAddTaskSuccessful(Task task) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Task successfully added, I said with a posed look.\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Now you have a total of \" + tasks.size() + \" tasks in the list\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** print message after setting task to done */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printSetTaskDone(int taskNumber, String inputText) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Understood, setting task \" + inputText + \" as done:\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    /** print message after deleting a task */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private void printTaskRemoved(Task task, String inputText) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"Understood, removed task \" + inputText + \":\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println(\"You now have a total of \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 211
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String TODO_TAG \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    private static final String TODO_TAG_ENCLOSED \u003d \"[T]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public Todo(Boolean done, String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        super(done, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return TODO_TAG_ENCLOSED + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    public String convertToData() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "        return TODO_TAG + super.convertToData();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 24
    }
  },
  {
    "path": "text-ui-test/fileErrorInput.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 1
    }
  },
  {
    "path": "text-ui-test/invalidCommandsInput.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "delete"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 6
    }
  },
  {
    "path": "text-ui-test/invalidParametersInput.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done xyz"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done 123"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done 213213123187432094803892840923890432904900"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done jk23i4hi23h4ij32h4534534j5h43ji5hji5h43jih"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline do homework"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline do homework /by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline do homework /bye"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline do homework /bye summer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline do homework /by summer"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "event party /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "event party /atthe"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "event party /at 2pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "delete abc"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "delete 233"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "delete 2312343243267432947938248934235435435435"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 17
    }
  },
  {
    "path": "text-ui-test/noErrorInput.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "todo make cake"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "deadline revise math /by monday 10pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "event countdown party /at Sunday 23:59"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del NO_ERROR_ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del INVALID_COMMANDS_ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del INVALID_PARAMETERS_ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del FILE_ERROR_ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ^"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\Duke.java ^"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskManager.java ^"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskType.java ^"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Task.java ^"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Todo.java ^"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Deadline.java ^"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\Event.java ^"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\TaskAction.java ^"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\task\\MissingTaskLiteralException.java ^"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\command\\IllegalCommandException.java ^"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\command\\Command.java ^"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\command\\CommandManager.java ^"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\file\\DataParser.java ^"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\file\\FileManager.java ^"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\file\\FileWritable.java ^"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "..\\src\\main\\java\\duke\\file\\FileCorruptedException.java"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del .\\data\\duke.txt"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c noErrorInput.txt \u003e NO_ERROR_ACTUAL.TXT"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "FC NO_ERROR_ACTUAL.TXT NO_ERROR_EXPECTED.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del .\\data\\duke.txt"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c invalidCommandsInput.txt \u003e INVALID_COMMANDS_ACTUAL.TXT"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "FC INVALID_COMMANDS_ACTUAL.TXT INVALID_COMMANDS_EXPECTED.TXT"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del .\\data\\duke.txt"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c invalidParametersInput.txt \u003e INVALID_PARAMETERS_ACTUAL.TXT"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "FC INVALID_PARAMETERS_ACTUAL.TXT INVALID_PARAMETERS_EXPECTED.TXT"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "del .\\data\\duke.txt"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "echo hello \u003e .\\data\\duke.txt"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c fileErrorInput.txt \u003e FILE_ERROR_ACTUAL.TXT"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AndreWongZH"
        },
        "content": "FC FILE_ERROR_ACTUAL.TXT FILE_ERROR_EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AndreWongZH": 40,
      "-": 16
    }
  }
]
