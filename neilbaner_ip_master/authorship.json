[
  {
    "path": "src/main/java/com/neilbaner/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.serialize.Serializer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static void loadTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        File saveFile \u003d new File(\"dukesave.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Scanner fs \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            while(fs.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                String currentLine \u003d fs.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                Task currentTask \u003d Serializer.deserializeTask(currentLine);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                list.addTask(currentTask);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            fs.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.err.println(\"Couldn\u0027t load the save file. Proceeding without loading.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (DeserializerException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.err.println(\"Some error trying to parse the save file. Proceeding without loading. \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (list.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(\"No tasks added yet\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Task task : list.getAllTasksList()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printHorizontalLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void addToDo(String title) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        list.addTask(new ToDo(title));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printAddedToDo(title);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void addEvent(String title, String eventTime) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        list.addTask(new Event(title, eventTime));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printAddedEvent(title);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void addDeadline(String title, String dueDate) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        list.addTask(new Deadline(title, dueDate));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printAddedDeadline(title);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void markAsDone(int indexToMark) throws NumberFormatException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        list.markTaskDone(indexToMark);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printMarkedDone(list.getTask(indexToMark).getTitle());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void deleteTask(int indexToDelete) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String deletedTitle \u003d list.getTask(indexToDelete).toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        list.deleteTask(indexToDelete);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printDeleted(deletedTitle);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static String getEventTime(String input) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return input.substring(input.indexOf(\"/at\") + 4).strip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static String getEventTitle(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return input.substring(6, input.indexOf(\"/at\")).strip();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static String getDeadlineDueDate(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return input.substring(input.indexOf(\"/by\") + 4).strip();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static int getIndexToMark(String input) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static int getIndexToDelete(String input) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static String getDeadlineTitle(String input) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return input.substring(9, input.indexOf(\"/by\")).strip();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static void saveState() throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"dukesave.txt\", false);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        fw.write(Serializer.serializeTaskList(list));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static boolean parseInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String lowerCaseInput \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (lowerCaseInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Messages.printGoodBye();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                saveState();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }catch (IOException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                System.err.println(\"Error saving the state. Your data was not saved.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (lowerCaseInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            printTaskList();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (lowerCaseInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                int indexToMark \u003d getIndexToMark(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                markAsDone(indexToMark);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                Messages.printFormattingError();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (lowerCaseInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                int indexToDelete \u003d getIndexToDelete(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                deleteTask(indexToDelete);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                Messages.printFormattingError();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                throw new TaskIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (lowerCaseInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            addToDo(input.substring(5));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (lowerCaseInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                String title \u003d getDeadlineTitle(input);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                String dueDate \u003d getDeadlineDueDate(input);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (dueDate.equals(\"\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    throw new BlankDeadlineDateException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                addDeadline(title, dueDate);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                Messages.printFormattingError();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                String title \u003d getEventTitle(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                String eventTime \u003d getEventTime(input);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (eventTime.equals(\"\")) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    throw new BlankEventTimeException();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                addEvent(title, eventTime);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                Messages.printFormattingError();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        loadTasks();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Scanner k \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        boolean toContinue \u003d true;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printHello();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        while (toContinue) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            input \u003d k.nextLine();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                toContinue \u003d parseInput(input);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                e.printErrorMessage(input);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 174,
      "-": 3
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/BlankDeadlineDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class BlankDeadlineDateException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public BlankDeadlineDateException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printBlankDeadlineDate();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 14
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/BlankEventTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class BlankEventTimeException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public BlankEventTimeException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printBlankEventTime();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 14
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/BlankTaskTitleException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class BlankTaskTitleException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public BlankTaskTitleException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printBlankTaskTitle();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 14
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/DeserializerException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class DeserializerException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 8
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public abstract void printErrorMessage(String command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 9
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/IncorrectFormattingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class IncorrectFormattingException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public IncorrectFormattingException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 12
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/TaskIndexOutOfBoundsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskIndexOutOfBoundsException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public TaskIndexOutOfBoundsException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printTaskIndexOutOfBounds();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 14
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Messages.printUnknownCommand(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 14
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/messages/MessageGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class MessageGenerator {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static String generateConfirmationMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        File confirmationMessagesFile \u003d new File(\"src/main/java/com/neilbaner/duke/messages/confirmationmessages\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        File namesFile \u003d new File(\"src/main/java/com/neilbaner/duke/messages/names\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String finalMessage \u003d new String();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Scanner messageScanner \u003d new Scanner(confirmationMessagesFile);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            Scanner nameScanner \u003d new Scanner(namesFile);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            int numberOfMessages \u003d Integer.parseInt(messageScanner.nextLine());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            int numberOfNames \u003d Integer.parseInt(nameScanner.nextLine());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            int messageToDisplay \u003d (int) (Math.random() * (numberOfMessages - 1));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            int nameToDisplay \u003d (int) (Math.random() * (numberOfNames - 1));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String chosenMessage \u003d messageScanner.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            String chosenName \u003d nameScanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            for (int i \u003d 0; i \u003c messageToDisplay; i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                chosenMessage \u003d messageScanner.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            for (int i \u003d 0; i \u003c nameToDisplay; i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                chosenName \u003d nameScanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            finalMessage \u003d chosenMessage + \", \" + chosenName + \". \";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            finalMessage \u003d \"Done. \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            return finalMessage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 39
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/messages/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke. \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printHelp() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Here are all the commands I know. \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Adding a new to-do task: \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printTodoSyntax();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Adding a new event: \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printEventSyntax();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Adding a new deadline: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDeadlineSyntax();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Marking a task as done: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDoneSyntax();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Accessing help: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHelpSyntax();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printTodoSyntax() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"todo \u003ctodoname\u003e\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printEventSyntax() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"event \u003ceventname\u003e /at \u003ceventtime\u003e\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printDeadlineSyntax() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"deadline \u003cdeadlinename\u003e /by \u003cdeadlineduedate\u003e\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printDoneSyntax() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"done \u003ctasknumber\u003e\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"\u003ctasknumber\u003e represents the number associated with the task, as seen on screen. \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printHelpSyntax() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"help\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printGoodBye() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Shutting down...\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printAddedToDo(String title) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String confirmation \u003d MessageGenerator.generateConfirmationMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.print(confirmation);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"I\u0027ve added the following to-do to your list: \" + title);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printAddedEvent(String title) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String confirmation \u003d MessageGenerator.generateConfirmationMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.print(confirmation);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"I\u0027ve added this event to your list: \" + title);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printAddedDeadline(String title) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String confirmation \u003d MessageGenerator.generateConfirmationMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.print(confirmation);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Added a new deadline to your list, titled : \" + title);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printMarkedDone(String title) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String confirmation \u003d MessageGenerator.generateConfirmationMessage();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.print(confirmation);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(title + \" marked as done.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printDeleted(String title) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String confirmation \u003d MessageGenerator.generateConfirmationMessage();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.print(confirmation);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(title + \" deleted. \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printFormattingError() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Incorrectly formatted input\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printNonExistError() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Task does not exist in list\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printUnknownCommand(String command) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"I\u0027m sorry, I\u0027m not sure what \" + command + \" means. \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHelp();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printBlankTaskTitle() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Sorry, you need to add a title for the task. \");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printBlankEventTime() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Every event needs to have a time. The syntax for adding an event is as follows: \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printEventSyntax();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printBlankDeadlineDate() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Every deadline needs to have a due date. The syntax for adding a deadline is as follows: \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDeadlineSyntax();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static void printTaskIndexOutOfBounds() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"Please make sure that the task number you enter to mark as done is on the list. \");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        System.out.println(\"For reference, here\u0027s how to mark a task as done: \");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printDoneSyntax();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 136
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/serialize/Serializer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.serialize;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.exceptions.DeserializerException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import com.neilbaner.duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.lang.reflect.Type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * A collection of static methods to serialize and deserialize"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * Task and TaskList objects."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * Output format:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * A single line of plain text"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * The delimiter \"~~\" is used to separate each Task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * The delimiter \"~\" is used to separate each property of a Task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * The first token of any Task is a single character T, E, or D"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * representing the type of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * The next token, for Event or Deadline tasks, is the event time"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * or due date respectively. This is skipped for to-do tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * \u003cbr/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * The last two tokens represent the task title, and the \"done\" status"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * (as Y/N for done/not done) respectively."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " * @author neilbaner"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Serializer {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static final String TASK_DELIMITER \u003d \"\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private static final String PART_DELIMITER \u003d \"~\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Takes in an object of type TaskList and returns a String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * which can then be written to a file or used otherwise."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param tl TaskList that we want to serialize."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return String containing serialized output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static String serializeTaskList(TaskList tl) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String serialized \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (Task t : tl.getAllTasksList()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d serializeTask(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d TASK_DELIMITER;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return serialized;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Takes a String created by serializeTaskList() and deserializes it"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * into an ArrayList\u0026lt;Task\u0026rt;."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param s The String (eg. from a text file) for the entire task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return ArrayList\u0026lt;Task\u0026gt; containing all the Task objects represented in the String"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @throws DeserializerException if there is an error deserializing any task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static ArrayList\u003cTask\u003e deserializeTaskList(String s) throws DeserializerException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String[] tasks \u003d s.split(TASK_DELIMITER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            taskList.add(deserializeTask(tasks[i]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Takes a single Task object, and converts it into a String"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * to be written to a file or otherwise stored/transmitted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param t the Task object to be serialized"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return String representing the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static String serializeTask(Task t) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Type taskType \u003d t.getClass();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String serialized \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        if (taskType \u003d\u003d ToDo.class) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d \"T\" + PART_DELIMITER;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (taskType \u003d\u003d Event.class) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d \"E\" + PART_DELIMITER;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d ((Event) t).getEventTime() + PART_DELIMITER;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        } else if (taskType \u003d\u003d Deadline.class) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d \"D\" + PART_DELIMITER;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            serialized +\u003d ((Deadline) t).getDueDate() + PART_DELIMITER;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        serialized +\u003d t.getTitle() + PART_DELIMITER;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        serialized +\u003d (t.getDone()) ? \"Y\" : \"N\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return serialized;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * Takes a String generated by serializeTask() and attempts to deserialize it"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * into a single Task object (will be of correct subclass type, i.e. ToDo, Deadline, Event)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @param s A string, generated by serializeTask() to deserialize"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @return Task subclass (ToDo, Event, Deadline) as represented by s"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     * @throws DeserializerException if there is some error in the string."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public static Task deserializeTask(String s) throws DeserializerException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        String parts[];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        Task deserialized;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        parts \u003d s.split(PART_DELIMITER);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            if (parts[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                deserialized \u003d new ToDo(parts[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (parts[2].equals(\"Y\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    deserialized.setDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else if (parts[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                deserialized \u003d new Event(parts[2], parts[1]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (parts[3].equals(\"Y\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    deserialized.setDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else if (parts[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                deserialized \u003d new Deadline(parts[2], parts[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                if (parts[3].equals(\"Y\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                    deserialized.setDone();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "                throw new DeserializerException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "            throw new DeserializerException();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return deserialized;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 122
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Deadline(String title, String dueDate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Deadline(String title, String description, String dueDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return \"[D]\" + super.toString() + \", by \" + dueDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 24
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Event(String title, String eventTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Event(String title, String description, String eventTime) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title, description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return \"[E]\" + super.toString() + \", at \" + eventTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String getEventTime() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 24
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task(String title, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task(String title) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return title;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setTitle(String title) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void setNotDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return \"[\" + (isDone ? \"*\" : \" \") + \"] \" + title;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 52
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasksList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void loadTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        tasks \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void deleteTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public void markTaskDone(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        tasks.get(index).setDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 39
    }
  },
  {
    "path": "src/main/java/com/neilbaner/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "package com.neilbaner.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ToDo(String title) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public ToDo(String title, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        super(title, description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neilbaner"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neilbaner"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neilbaner": 17
    }
  }
]
