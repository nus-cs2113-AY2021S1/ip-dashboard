[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 1 | do ip project | 17 Sep 2020"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.fileaccess.FileAccess;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void printGreetingMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void printExitMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static String getCommand(String line) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return line.split(\" \")[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static String getTaskDescription(String command, String line) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (line.split(command).length \u003c 2 || line.split(command)[1].equals(\" \")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing duke.task description!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return line.substring(line.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (!line.contains(\"/by \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Missing or incorrect /by statement\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return line.substring(line.indexOf(\u0027 \u0027) + 1, line.indexOf(\"/by \") - 1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (!line.contains(\"/at \")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Missing or incorrect /at statement\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return line.substring(line.indexOf(\u0027 \u0027) + 1, line.indexOf(\"/at \") - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static String getTaskDate(String command, String line) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return line.split(\"/by \")[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return line.split(\"/at \")[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static int getCommandIndex(String command, String line) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (line.split(command).length \u003c 2 || line.split(command)[1].equals(\" \")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing index of duke.task!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return Integer.parseInt(line.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No integer index detected!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void addToTaskList(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this duke.task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"list is currently empty!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                System.out.println(counter++ + \".\" + task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void markAsDone(int index) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this duke.task as done:\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        taskList.get(index).setIsDone(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(taskList.get(index).getStatusIcon() + \" \" + taskList.get(index).getDescription());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void deleteTask(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(taskList.get(index).getStatusIcon() + \" \" + taskList.get(index).getDescription());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printGreetingMessage();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        // Initialize new instance of a TaskList object"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        taskList \u003d FileAccess.readFile();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        // Initialize Scanner and read in user input"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String command \u003d getCommand(line);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        while (!command.equals(COMMAND_BYE)) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_LIST:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    printTaskList();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_DONE:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    if (getCommandIndex(command, line) + 1 \u003e taskList.size()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Index specified is out of list size!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    markAsDone(getCommandIndex(command, line));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_DELETE:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    if (getCommandIndex(command, line) + 1 \u003e taskList.size()) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! Index specified is out of list size!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    deleteTask(getCommandIndex(command, line));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_TODO:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    addToTaskList(new ToDo(getTaskDescription(command, line)));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    addToTaskList(new Deadline(getTaskDescription(command, line), getTaskDate(command, line)));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                case COMMAND_EVENT:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    addToTaskList(new Event(getTaskDescription(command, line), getTaskDate(command, line)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            printHorizontalLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            // Read next line"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            command \u003d getCommand(line);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            FileAccess.writeFile(taskList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Unable to save file!\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        // Exit Message"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        printExitMessage();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 180,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 12
    }
  },
  {
    "path": "src/main/java/duke/fileaccess/FileAccess.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.fileaccess;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class FileAccess {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static ArrayList\u003cTask\u003e readFile(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        File f \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        Scanner s \u003d null;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String isDoneStatus;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            line \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            command \u003d line.split(\" \\\\| \")[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            isDoneStatus \u003d line.split(\" \\\\| \")[1];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskDescription \u003d line.split(\" \\\\| \")[2];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskList.add(new ToDo(taskDescription));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskDate \u003d line.split(\" \\\\| \")[3];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskList.add(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskDate \u003d line.split(\" \\\\| \")[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskList.add(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            // Add default statement"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (isDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskList.get(taskList.size() -1).setIsDone(true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void writeFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"T\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"D\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + ((Deadline) task).getBy());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"D\" + \" | \" + (task.getIsDone() ? \"1\" : \"0\") + \" | \" + task.getDescription() + \" | \" + ((Event) task).getAt());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 77
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String TICK \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String CROSS \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void setIsDone(Boolean bool) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.isDone \u003d bool;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 35
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 2,
      "-": 19
    }
  }
]
