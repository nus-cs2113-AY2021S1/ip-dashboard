[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 2,
      "-": 24
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 0 | return book | 2020-06-01"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 1 | do ip project | 2020-09-17"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "E | 0 | project meeting | 2020-10-01"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "D | 0 | finish ip week7 | 2020-09-19"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Main class of the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * The Duke program is an application which can store, display and check Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * There are 3 types of tasks, ToDo, Deadline, Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * @author Wang Wayne"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * @since 2020-09-21"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private final String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } finally{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        Duke duke \u003d new Duke(\"filePath\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 57,
      "-": 10
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showAddTaskMessage(task, tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 20
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return (this instanceof ExitCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 13,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showDeleteMessage(tasks, index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.deleteTask(this.index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.markAsDone(this.index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showMarkAsDoneMessage(tasks, index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showSavingMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        storage.write(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 15,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private String target;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public FindCommand(String target) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.target \u003d target;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.findTarget(target);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 19
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showHelp();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 12
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.print();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 12
    }
  },
  {
    "path": "src/main/java/duke/command/OccurCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class OccurCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public OccurCommand(LocalDate date) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ui.showOccurMessage(this.date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        tasks.printOccur(this.date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 22
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 12
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String COMMAND_OCCUR \u003d \"occur\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003eCOMMAND\u003c/code\u003e of a user input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return First part of the user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private static String getCommand(String fullCommand) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003etaskDescription\u003c/code\u003e of a \u003ccode\u003eTask\u003c/code\u003e from the user input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003etaskDescription\u003c/code\u003e part of the user input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when the user input is of a wrong format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private static String getTaskDescription(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String command \u003d getCommand(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (fullCommand.split(command).length \u003c 2"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            || fullCommand.split(command).equals(\" \")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing duke.task description!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return fullCommand.substring(fullCommand.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (!fullCommand.contains(\"/by \")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Missing or incorrect /by statement\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return fullCommand.substring(fullCommand.indexOf(\u0027 \u0027) + 1, fullCommand.indexOf(\"/by \") - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (!fullCommand.contains(\"/at \")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Missing or incorrect /at statement\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return fullCommand.substring(fullCommand.indexOf(\u0027 \u0027) + 1, fullCommand.indexOf(\"/at \") - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003etaskDate\u003c/code\u003e of a \u003ccode\u003eTask\u003c/code\u003e from the user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003etaskDate\u003c/code\u003e part of the user input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when the user input is of a wrong format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private static LocalDate getTaskDate(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String taskDateString;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        switch (getCommand(fullCommand)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskDateString \u003d fullCommand.split(\"/by \")[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return LocalDate.parse(taskDateString);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                throw new DukeException(\"Date specified is of wrong format! Use YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskDateString \u003d fullCommand.split(\"/at \")[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return LocalDate.parse(taskDateString);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                throw new DukeException(\"Date specified is of wrong format! Use YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_OCCUR:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskDateString \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                return LocalDate.parse(taskDateString);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                throw new DukeException(\"Date specified is of wrong format! Use YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003ecommandIndex\u003c/code\u003e of a user input, e.g. done 2 or delete 3."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns 2 or 3 respectively."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003ecommandIndex\u003c/code\u003e part of the user input."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when the user input is of a wrong format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private static int getCommandIndex(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String command \u003d getCommand(fullCommand);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (fullCommand.split(command).length \u003c 2 || fullCommand.split(command)[1].equals(\" \")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing index of duke.task!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return Integer.parseInt(fullCommand.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No integer index detected!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003etargetString\u003c/code\u003e when the find command is input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eString\u003c/code\u003e of the targetString to be found."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when the user input is of a wrong format."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static String getTarget(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String command \u003d getCommand(fullCommand);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (fullCommand.split(command).length \u003c 2"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                || fullCommand.split(command).equals(\" \")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing target!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return fullCommand.substring(fullCommand.indexOf(\u0027 \u0027) + 1);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Makes sense of the user input and returns the command object accordingly to the command given."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param fullCommand user input."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eCommand\u003c/code\u003e of sub-type depending on the command given."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when the program does not recognize the command given."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        switch (getCommand(fullCommand)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_HELP:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_BYE:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_LIST:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_TODO:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new AddCommand(new ToDo(getTaskDescription(fullCommand)));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new AddCommand(new Deadline(getTaskDescription(fullCommand), getTaskDate(fullCommand)));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_EVENT:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new AddCommand(new Event(getTaskDescription(fullCommand), getTaskDate(fullCommand)));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_DONE:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new DoneCommand(getCommandIndex(fullCommand));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_DELETE:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new DeleteCommand(getCommandIndex(fullCommand));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_FIND:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new FindCommand(getTarget(fullCommand));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        case COMMAND_OCCUR:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            return new OccurCommand(getTaskDate(fullCommand));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means!\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 169
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * This class deals with handling storage on the \u003ccode\u003eTaskList\u003c/code\u003e.\\n"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * There is a load method to import in the saved data from the specified file path."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * There is a write method to export the data to the specified file path."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Imports the \u003ccode\u003eTaskList\u003c/code\u003e data from specified file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e containing imported \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws DukeException when file not found, or file format is wrong."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        Scanner s \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new DukeException(\"No save file detected!\\nCreating fresh new task list...\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String isDoneStatus;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            line \u003d s.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskType \u003d line.split(\" \\\\| \")[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            isDoneStatus \u003d line.split(\" \\\\| \")[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            taskDescription \u003d line.split(\" \\\\| \")[2];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                tasks.add(new ToDo(taskDescription));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                // Might need to add try/catch for LocalDate.parse here"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskDate \u003d LocalDate.parse(line.split(\" \\\\| \")[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                tasks.add(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                taskDate \u003d LocalDate.parse(line.split(\" \\\\| \")[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                tasks.add(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                throw new DukeException(\"File wrong format!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (isDoneStatus.equals(\"1\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                tasks.get(tasks.size() -1).setIsDone(true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Exports the \u003ccode\u003eTaskList\u003c/code\u003e into a txt file at specified file path."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param tasks the current \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @throws IOException when there is an error due to writing the txt file."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void write(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (tasks.getTask(i) instanceof ToDo) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"T\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + (tasks.getTask(i).getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + tasks.getTask(i).getDescription());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } else if (tasks.getTask(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"D\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + (tasks.getTask(i).getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + tasks.getTask(i).getDescription() + \" | \""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + ((Deadline) tasks.getTask(i)).getBy());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } else if (tasks.getTask(i) instanceof Event) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                fw.write(\"E\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + (tasks.getTask(i).getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + tasks.getTask(i).getDescription() + \" | \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                        + ((Event) tasks.getTask(i)).getAt());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 110,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * \u003ch1\u003eDeadline\u003c/h1\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Represents a \u003ccode\u003eDeadline\u003c/code\u003e Task which is a subclass of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * with its corresponding deadline date stored as \u003ccode\u003eby\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * \u003ch1\u003eEvent\u003c/h1\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Represents a \u003ccode\u003eEvent\u003c/code\u003e Task which is a subclass of \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * with its corresponding event date stored as \u003ccode\u003eat\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * \u003ch1\u003eTask\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Represents a \u003ccode\u003eTask\u003c/code\u003e with its corresponding \u003ccode\u003etaskDescription\u003c/code\u003e and a \u003ccode\u003eisDone\u003c/code\u003e status"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * based on whether or not the task has been marked as done by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String TICK \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public static final String CROSS \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Task (String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Sets the \u003ccode\u003eisDone\u003c/code\u003e status of the Task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param bool true or false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void setIsDone(Boolean bool) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.isDone \u003d bool;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003eisDone\u003c/code\u003e status of the Task object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eboolean\u003c/code\u003e value of \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns an icon for the corresponding \u003ccode\u003eisDone\u003c/code\u003e status of the Task object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eString\u003c/code\u003e for either TICK or CROSS."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return (isDone ? TICK : CROSS);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the \u003ccode\u003etaskDescription\u003c/code\u003e of the TaskObject."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eString\u003c/code\u003e of the \u003ccode\u003etaskDescription\u003c/code\u003e."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Overriding \u003ccode\u003etoString()\u003c/code\u003e method for this Task Object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eString\u003c/code\u003e containing the \u003ccode\u003eisDone\u003c/code\u003e status icon and \u003ccode\u003etaskDescription\u003c/code\u003e."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * \u003ch1\u003eTaskList\u003c/h1\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Represents a list of tasks stored in an \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Adds a \u003ccode\u003eTask\u003c/code\u003e into the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param task \u003ccode\u003eTask\u003c/code\u003e to be added."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param index \u003ccode\u003eindex\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e to be deleted."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Marks a \u003ccode\u003eTask\u003c/code\u003e as done in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param index of the \u003ccode\u003eTask\u003c/code\u003e to be marked as done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        this.tasks.get(index).setIsDone(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns the size of the current \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eint\u003c/code\u003e size."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Returns a new \u003ccode\u003eTask\u003c/code\u003e at the specified \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param index of the \u003ccode\u003eTask\u003c/code\u003e to be returned."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @return \u003ccode\u003eTask\u003c/code\u003e at the specified index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Prints the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void print() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (this.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Your task list is currently empty!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                System.out.println(counter++ + \".\" + task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Finds and prints the \u003ccode\u003eTask\u003c/code\u003e containing the \u003ccode\u003etarget\u003c/code\u003e."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param target \u003ccode\u003eString\u003c/code\u003e to find in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void findTarget(String target) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (this.tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Your task list is currently empty!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (task.getDescription().contains(target)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    System.out.println(counter++ + \".\" + task);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                System.out.println(\"There were no matching tasks found!\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * Finds and prints the \u003ccode\u003eTask(s)\u003c/code\u003e occurring on the \u003ccode\u003eLocalDate\u003c/code\u003e date."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     * @param date \u003ccode\u003eLocalDate\u003c/code\u003e to find the occurring \u003ccode\u003eTask(s)\u003c/code\u003e."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void printOccur(LocalDate date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (((Deadline) task).getBy().equals(date)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    System.out.println(counter++ + \".\" + task);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                if (((Event) task).getAt().equals(date)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                    System.out.println(counter++ + \".\" + task);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        if (counter \u003d\u003d 1) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "            System.out.println(\"No tasks occur on that date\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 119
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * \u003ch1\u003eTodo\u003c/h1\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " * Represent a \u003ccode\u003eToDo\u003c/code\u003e Task which is a subclass of \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 16
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    private static Scanner s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Use command \u0027help\u0027 for a list of commands!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        return s.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showAddTaskMessage(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showMarkAsDoneMessage(TaskList tasks, int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(tasks.getTask(index).getStatusIcon() + \" \" + tasks.getTask(index).getDescription());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showDeleteMessage(TaskList tasks, int index) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(tasks.getTask(index).getStatusIcon() + \" \" + tasks.getTask(index).getDescription());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showSavingMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Attempting to save task list...\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showHelp() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Show help:\\n\\thelp\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Print all tasks in the TaskList:\\n\\tlist\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Create new Todo Task:\\n\\ttodo \u003ctaskDescription\u003e\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Create new deadline by specified date:\\n\\tdeadline \u003ctaskDescription\u003e /by \u003cYYYY-MM-DD\u003e\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Create new event at specified date:\\n\\tevent \u003ctaskDescription\u003e /at \u003cYYYY-MM-DD\u003e\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Mark task at specified index as done:\\n\\tdone \u003cindex\u003e\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Delete the task at specified index:\\n\\tdelete \u003cindex\u003e\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Find tasks that occur on specified date:\\n\\toccur \u003cYYYY-MM-DD\u003e\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Exit the program and saves the current TaskList:\\n\\tbye\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    public void showOccurMessage(LocalDate date) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "        System.out.println(\"Finding tasks that occur on \" + date + \":\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 72,
      "-": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangwaynesg"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wangwaynesg": 2,
      "-": 19
    }
  }
]
