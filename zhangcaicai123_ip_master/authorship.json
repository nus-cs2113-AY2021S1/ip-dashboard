[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "This app is to help user create, edit and store a task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Quick start "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Ensure you have Java 11 installed in your Computer."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Download the jar file from (link)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for your Duke app"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Double-click the file to start the app.  "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "If the setup is correct, you should see something like the below:  "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![welcome message](https://github.com/zhangcaicai123/ip/blob/master/docs/image/hello.png)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Type the command in the command box and press Enter to execute it.  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    Some example commands you can try:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `todo read a book`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `deadline return books /by 2pm`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `event attend the tutorial /at Friday 4pm`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `list`- show the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `done 1`- mark the first task in list as done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `delete 2`- delete the second task in the list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - `bye`- exit the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "1. Refer to the Features below for details of each command.  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "##Features"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Add  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Add todo `todo`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Add deadline `deadline`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "    - Add event `event`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- List `list`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Delete  `delete`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Mark as done `done`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Find `find`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- Exit `bye`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Add `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Add a new task to the task list   "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add todo task: `todo`  "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `todo TASK`   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `todo read a book`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add deadline task: `deadline`  "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `deadline TASK /by TIME`  "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `deadline return books /by 2pm`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "- add event task: `event`  "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `event TASK /at TIME`   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `event attend tutorial /at Friday 4pm`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:  "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![add](https://github.com/zhangcaicai123/ip/blob/master/docs/image/add.png)  "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![data file after adding](https://github.com/zhangcaicai123/ip/blob/master/docs/image/add%20file.png)  "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "For the deadline and event,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "the app also accepts dates in a format such as yyyy-mm-dd format (e.g., 2019-10-15) and print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)  "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `deadline TASK /by YYYY-MM-DD`  "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `deadline return books /by 2020-11-20`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:  "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![time](https://github.com/zhangcaicai123/ip/blob/master/docs/image/time.png)  "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![time file](https://github.com/zhangcaicai123/ip/blob/master/docs/image/time%20file.png)  "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### List `list`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Show the task list  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![list](https://github.com/zhangcaicai123/ip/blob/master/docs/image/list.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Delete `delete`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Delete a task from task list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `delete 2`  "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:   "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![delete](https://github.com/zhangcaicai123/ip/blob/master/docs/image/delete.png)  "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![data file after deleting](https://github.com/zhangcaicai123/ip/blob/master/docs/image/delete%20file.png)  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Mark as done `done`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Mark a task as done "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `done 1`  "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:   "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![done](https://github.com/zhangcaicai123/ip/blob/master/docs/image/done.png)  "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![data file after marking as done](https://github.com/zhangcaicai123/ip/blob/master/docs/image/done%20file.png)   "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Find `find`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Find task in task list with keyword"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `find KEYWORD` "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Examples: `find book`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![find](https://github.com/zhangcaicai123/ip/blob/master/docs/image/find.png)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "### Exit `bye`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Exit the program"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "Expected outcomes:  "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "![exit](https://github.com/zhangcaicai123/ip/blob/master/docs/image/exit.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|Actions|Formats|Examples|"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|-------|-------|--------|"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|todo|`todo TASK`|`todo read a book`|"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|deadline|`deadline TASK /by TIME`|`deadline return books /by 2pm`|"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|event|`event TASK /at TIME`|`event attend the tutorial /at Friday 4pm`|"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|list|`list`||"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|delete|`delete INDEX`|`delete 2`|"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|done|`done INDEX`|`done 1`|"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|find|`find KEYWORD`|`find book`|"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "|exit|`bye`||"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 90,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final Command c \u003d new Command();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tstorage \u003d new Storage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t//load tasks in data file to current task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void run() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tui.showWelcomeMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tboolean isExit \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\twhile (!isExit) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tString fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tc.setCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tc.execute(tasks, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tisExit \u003d c.isExit();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tui.showExitMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tnew Duke().run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 41,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Duke/Ui/ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Ui() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t//print horizontal line"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void showLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void showWelcomeMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"     Hello！ I\u0027m Duke\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void showExitMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Read user\u0027s command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String readCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString input;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tScanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tinput \u003d in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn input;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void showLoadingError() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"\t There are some errors when loading file.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printMarkMessage(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"       \" + task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 52
    }
  },
  {
    "path": "src/main/java/Duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Command() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Set user\u0027s input as command in Command class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param command user\u0027s command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void setCommand(String command) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.command \u003d command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return true if user type \"bye\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * false if not"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn command.equals(\"bye\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Execute the command e.g. add task, print list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void execute(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString option \u003d Parser.getOption(command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tswitch (option) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.printList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"done\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tdone(taskList, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\taddToDo(taskList, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\taddDeadline(taskList, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"event\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\taddEvent(taskList, storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tdelete(taskList, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"find\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tfind(taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tcase \"bye\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tdefault:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printIllegalCommandExceptionMessage();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tbreak;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Execute done command"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void done(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tint index \u003d Parser.getIndex(taskList, command) - 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tTask taskToMark \u003d taskList.get(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToMark.markedAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tUi.printMarkMessage(taskToMark);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tstorage.updateDoneToFile(index, taskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (OutOfIndexBound e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printOutOfIndexBoundMessage();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Add todo task to the task list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void addToDo(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tTodo taskToAdd \u003d new Todo(Parser.getTodo(command));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tstorage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyDescriptionExceptionMessage(\"todo\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Add deadline task to the task list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void addDeadline(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tString by \u003d Parser.getTime(command);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tDeadline taskToAdd \u003d new Deadline(Parser.getTask(command));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToAdd.setBy(by);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tstorage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyDescriptionExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyTimeExceptionMessage(\"deadline\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Add event to the task list"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void addEvent(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tString at \u003d Parser.getTime(command);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tEvent taskToAdd \u003d new Event(Parser.getTask(command));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToAdd.setAt(at);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.addTask(taskToAdd);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tstorage.appendToFile(taskToAdd.text() + System.lineSeparator());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyDescriptionExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyTimeException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyTimeExceptionMessage(\"event\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Delete task from task list"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param storage  the file stores all tasks in the list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void delete(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tint index \u003d Parser.getIndex(taskList, command) - 1;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.deleteTask(index);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tstorage.deleteTaskFromFile(index);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.printNumOfTasksInList();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (OutOfIndexBound e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printOutOfIndexBoundMessage();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (IOException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyIndexException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyIndexExceptionMessage();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Find task in the task list with keyword"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void find(TaskList taskList) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttry {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tString keyword \u003d Parser.getFind(command);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskList.printSearchResult(keyword);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} catch (EmptyFindException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\texception.printEmptyKeywordMessage();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 199
    }
  },
  {
    "path": "src/main/java/Duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;public class EmptyCommandException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 2
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 3
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyFindException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/Duke/exception/EmptyTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class EmptyTimeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 3
    }
  },
  {
    "path": "src/main/java/Duke/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class IllegalCommandException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 4
    }
  },
  {
    "path": "src/main/java/Duke/exception/OutOfIndexBound.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class OutOfIndexBound extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 3
    }
  },
  {
    "path": "src/main/java/Duke/exception/exception.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printLine() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printIllegalCommandExceptionMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(%n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printEmptyDescriptionExceptionMessage(String option) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! The description of a %s cannot be empty.%n\", option);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printEmptyTimeExceptionMessage(String option) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! You haven\u0027t set a time for the %s.%n\", option);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printOutOfIndexBoundMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! You seem to input wrong index of the task.%n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printEmptyIndexExceptionMessage(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! You did not type the index of the task.%n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static void printEmptyKeywordMessage(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t ☹ OOPS!!! You did not type the keyword.%n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 43
    }
  },
  {
    "path": "src/main/java/Duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.exception.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return user\u0027s command option e.g. todo,list,bye"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static String getOption(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString pattern \u003d \"^(todo|list|deadline|event|find|done|delete|bye).*\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tMatcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (m.find()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn m.group(1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn \"illegal\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return the description of user\u0027s input todo task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static String getTodo(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString todo_pattern \u003d \"todo (.*)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPattern r \u003d Pattern.compile(todo_pattern);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tMatcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (Pattern.matches(\"todo *\", command)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new EmptyDescriptionException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tm.find();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn m.group(1).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return the task description of user\u0027s input deadline or event"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws EmptyDescriptionException If description is null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static String getTask(String command) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString pattern \u003d \"(event|deadline)( .* )(/at|/by)( .*)\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tMatcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (Pattern.matches(\"event|deadline *\", command)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new EmptyDescriptionException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tm.find();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn m.group(2).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Returns the time for event or deadline."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Accept dates in yyyy-mm-dd format (e.g., 2019-10-15)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * and print in a different format such as MMM dd yyyy e.g., (Oct 15 2019)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return time for event or deadline task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws EmptyTimeException If no String for time information is found"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static String getTime(String command) throws EmptyTimeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString pattern \u003d \"(event|deadline)( .* )(/at|/by)(.*)\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString time;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tMatcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (m.find()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttime \u003d m.group(4).trim();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else throw new EmptyTimeException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString time_pattern \u003d \"\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\";//yyyy-mm-dd format"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tboolean isDate \u003d Pattern.matches(time_pattern, time);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (isDate) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tLocalDate Date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn Date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\", Locale.ENGLISH));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else return time;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return the keyword that user wants to search in the task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws EmptyFindException If no keyword is found"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static String getFind(String command) throws EmptyFindException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString pattern \u003d \"find *\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (Pattern.matches(pattern, command)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new EmptyFindException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn command.substring(command.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list of all tasks input"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return index the index of task that user wants to delete or mark as done"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws OutOfIndexBound     If the index \u003e size of list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws EmptyIndexException If user does not input any integer"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic static int getIndex(TaskList taskList, String command) throws OutOfIndexBound, EmptyIndexException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString pattern \u003d \"(done|delete)( )(\\\\d+)\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPattern r \u003d Pattern.compile(pattern);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tMatcher m \u003d r.matcher(command);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tint index;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (Pattern.matches(\"done|delete *\", command)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new EmptyIndexException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tm.find();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tindex \u003d Integer.parseInt(m.group(3));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (taskList.size() \u003c index || index \u003c 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new OutOfIndexBound();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn index;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 119
    }
  },
  {
    "path": "src/main/java/Duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.taskList.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final String directory \u003d projectRoot + \"/data\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate final String filePath \u003d directory + \"/duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Storage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Create directory if the directory does not exist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param directoryName directory path name"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return true if the directory exist or have been successfully created"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * false if fail to create the directory"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic boolean createDirectory(String directoryName) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile dir \u003d new File(directoryName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (!dir.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn dir.mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Create the data file to store task list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param pathName      the absolute path name of data file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param directoryName the directory path name"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void createFile(String pathName, String directoryName) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tboolean mkdirs \u003d createDirectory(directoryName);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (mkdirs) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tFile f \u003d new File(pathName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Load data file to current task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return loaded task list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile loadFile \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tArrayList\u003cTask\u003e loadList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (!loadFile.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tcreateFile(this.filePath, directory);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tScanner file \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttry {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tfile \u003d new Scanner(loadFile);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t} catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\te.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\twhile (file.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tString text \u003d file.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tTask taskToLoad \u003d parserTask(text);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tloadList.add(taskToLoad);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tfile.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"List has been loaded successfully.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn loadList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Transfer the line in data file into task to load"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param text each line of the data file"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return task need to load"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws DukeException if the text in data file cannot recognized as a task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate Task parserTask(String text) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tTask taskToLoad;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString time;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t//split each line into task description, done status and deadline/event time"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString[] Text \u003d text.trim().split(\" \\\\| \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString description \u003d Text[2];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString status \u003d Text[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (text.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t//Todo"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToLoad \u003d new Todo(description);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else if (text.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t//Deadline"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToLoad \u003d new Deadline(description);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttime \u003d Text[3];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t((Deadline) taskToLoad).setBy(time);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else if (text.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t//Event"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToLoad \u003d new Event(description);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttime \u003d Text[3];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t((Event) taskToLoad).setAt(time);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tthrow new DukeException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\ttaskToLoad.markedAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn taskToLoad;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Update done status for the task in file"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param index    the index of task in the list that needs to be marked as done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskList the list contains all tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void updateDoneToFile(int index, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tBufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString line;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tint lineNum \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\twhile ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tif (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\t//update done status"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\twriter.println(taskList.get(index).text());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\twriter.flush();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tlineNum++;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tlineNum++;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\twriter.println(line);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\twriter.flush();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treader.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\twriter.close();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t//replace original data file with new data file"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tf.delete();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tnewFile.renameTo(f);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Delete the task from data file"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param index the index of task in the list that needs to be deleted"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws IOException if cannot open, read or write the file"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void deleteTaskFromFile(int index) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile newFile \u003d new File(directory + \"/data-new.txt\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFile f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tBufferedReader reader \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tPrintWriter writer \u003d new PrintWriter(newFile);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tString line;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tint lineNum \u003d 0;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\twhile ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tif (lineNum \u003d\u003d index) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tlineNum++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tcontinue;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tlineNum++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\twriter.println(line);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\twriter.flush();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treader.close();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\twriter.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t//replace original data file with new data file"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tf.delete();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tnewFile.renameTo(f);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Add new line to the end of data file"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param textToAppend text needs to be added"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @throws IOException if cannot open and write the file"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tFileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tfw.write(textToAppend);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tfw.close();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 187
    }
  },
  {
    "path": "src/main/java/Duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprotected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Deadline(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void setBy(String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String text() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"D \" + super.text() + \" | \" + by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 23
    }
  },
  {
    "path": "src/main/java/Duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprotected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Event(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void setAt(String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String text() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"E \" + super.text() + \" | \" + at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 23
    }
  },
  {
    "path": "src/main/java/Duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprotected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprotected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tfinal String TICK_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tfinal String CROSS_SYMBOL \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn this.description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn (isDone ? TICK_SYMBOL : CROSS_SYMBOL); //return tick or X symbols"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void markedAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String text() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (this.isDone)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\treturn \"| 1 | \" + description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\telse return \"| 0 | \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 37
    }
  },
  {
    "path": "src/main/java/Duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tsuper(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t@Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic String text() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn \"T \" + super.text() ;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 18
    }
  },
  {
    "path": "src/main/java/Duke/taskList/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "package duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Assign the loaded list to this task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param loadedList the task list loaded from"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic TaskList(ArrayList\u003cTask\u003e loadedList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.taskList \u003d loadedList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Add new task to the task list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskToAdd the task that needs to be added to the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void addTask(Task taskToAdd) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tthis.taskList.add(taskToAdd);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintAddMessage(taskToAdd);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintNumOfTasksInList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Delete task from the task list with index of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param taskIndex the index of task which needs to be deleted"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tprintDeleteMessage(taskIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\ttaskList.remove(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Get the task with index"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param index the index of task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic Task get(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn this.taskList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Get the total number of tasks in the list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return the number of tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic int size() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn this.taskList.size();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void showLine() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Print the whole list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void printList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (this.size() \u003e 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tfor (Task task : this.taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tSystem.out.println(\"      \" + (this.taskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"\t You don\u0027t have any task in your list.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Print the message of adding new task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate void printAddMessage(Task task) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"      \" + task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Print the number of tasks in the list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void printNumOfTasksInList() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (this.taskList.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"     Now you have 1 task in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"     You don\u0027t have any task in your list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"     Now you have \" + this.taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Print the message of deleting a task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param index the index of task that needs to be deleted"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void printDeleteMessage(int index) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.println(\"\t Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tSystem.out.printf(\"\\t   %s%n\", this.taskList.get(index));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Find all the tasks which contain the keyword"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param keyword keyword to find task"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @return the list of tasks which contain the keyword"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tprivate ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tArrayList\u003cTask\u003e findList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tfor (Task task : this.taskList) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tif (task.getDescription().contains(keyword)) findList.add(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\treturn findList;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t/**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * Print the list of searching keyword in task list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t * @param keyword keyword to find task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\tpublic void printSearchResult(String keyword) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tArrayList\u003cTask\u003e results \u003d find(keyword);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tif (this.size() \u003e 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tfor (Task task : results) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t\tSystem.out.println(\"      \" + (results.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\t}"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t} else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t\tSystem.out.println(\"\t You don\u0027t have any matching task in your list.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\t}"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t\tshowLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "\t}"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhangcaicai123"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhangcaicai123": 157
    }
  }
]
