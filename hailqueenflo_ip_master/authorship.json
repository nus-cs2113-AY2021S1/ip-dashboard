[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"D|\" + isDone + \"|\" + this.description + \"|\" + this.by + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final int MAX_SIZE \u003d 100;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String FILE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String PARSE_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String PARSE_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static final String PARSE_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void writeToFile(String FILE_PATH) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                fw.write(task.writeToFile());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"Something went wrong!\" + e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void retrieveFromFile(String FILE_PATH) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String[] parseTask \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String taskType \u003d parseTask[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String taskIsDone \u003d parseTask[1];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                String taskDescription \u003d parseTask[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                // detect what type of task it is"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                case PARSE_TODO:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                case PARSE_DEADLINE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    String taskBy \u003d parseTask[3];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    task \u003d new Deadline(taskDescription, taskBy);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                case PARSE_EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    String taskAt \u003d parseTask[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    task \u003d new Event(taskDescription, taskAt);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    task \u003d new Task(taskDescription);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                if(taskIsDone.equals(\"true\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    task.markAsDone(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"This file is not found, creating a new file now!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printHorLine() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    // method to print"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printMessage(String content) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(content);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printHelloMessage() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     Hello! I\u0027m Duke\\n\" + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printTaskAddition(Task task, int index) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     Got it. I\u0027ve added this task: \\n\" + \"       \" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                task.toString() + \"\\n     Now you have \" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                index + \" tasks in the list.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            System.out.println(\"     \" + (index + 1) + \".\" +"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    \"     \" + task.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printCannotBeEmpty(String[] userInput) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     ☹ OOPS!!! The timing or description of \" + Arrays.toString(userInput) + \" cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void printInvalidMeaning() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void markAsDone(Task task) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        task.markAsDone(true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printMessage(\"     Nice! I\u0027ve marked this task as done: \\n\" + \"       \" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static Task createTypes (String input) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        String[] taskType \u003d input.split(\" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        int taskTypeLength;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            switch (taskType[0]) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                taskTypeLength \u003d 4;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                if (taskType.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                return new Todo(input.substring(taskTypeLength + 1));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                taskTypeLength \u003d 8;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                if(taskType.length \u003d\u003d 1 || !input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                int indexOfBy \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                return new Deadline(input.substring(taskTypeLength + 1, indexOfBy - 1),"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                        input.substring(indexOfBy + 4));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                taskTypeLength \u003d 5;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                if(taskType.length \u003d\u003d 1 || !input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                int indexOfAt \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                return new Event(input.substring(taskTypeLength + 1, indexOfAt - 1),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                        input.substring(indexOfAt + 4));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                printInvalidMeaning();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            printCannotBeEmpty(taskType);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int index) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \\n\" + \"       \" +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                tasks.get(index).toString());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        tasks.remove(tasks.get(index));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        System.out.println(\"     Now you have \" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHorLine();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        retrieveFromFile(FILE_PATH);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printHelloMessage();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        while (!userInput.equals(BYE)) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            if (userInput.equals(LIST)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            } else if (userInput.startsWith(DONE)) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    int indexOfNumber \u003d 5;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    int indexOfTask \u003d Integer.parseInt(userInput.substring(indexOfNumber)) - 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    markAsDone(tasks.get(indexOfTask));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    writeToFile(FILE_PATH);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    printMessage(\"     ☹ OOPS!!! Please input the number of the task you\u0027ve completed.\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            } else if (userInput.startsWith(DELETE)) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    int indexOfNumber \u003d 7;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    int indexOfTask \u003d Integer.parseInt(userInput.substring(indexOfNumber)) - 1;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    if (indexOfTask \u003e tasks.size()) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    deleteTask(tasks, indexOfTask);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    writeToFile(FILE_PATH);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    printMessage(\"     ☹ OOPS!!! This task does not exist.\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                Task newTask \u003d createTypes(userInput);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    tasks.add(newTask);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    printTaskAddition(newTask, tasks.size());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                    writeToFile(FILE_PATH);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        printByeMessage();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 210,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"E|\" + isDone + \"|\" + this.description + \"|\" + this.at + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public void markAsDone(boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "//    public String getBooleanStatus() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "//        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"write to file\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return this.getStatusIcon() + this.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 34
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    public String writeToFile() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "        return \"T|\" + isDone + \"|\" + this.description + \"\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hailqueenflo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hailqueenflo": 14
    }
  }
]
