[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printWelcome();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        runDuke(taskList);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printGoodbye();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke! \\n \" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printDividerLine() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"___________________________________ \\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon! :)\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void runDuke(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        Scanner userResponseScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String command;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        boolean quitResponseLoop \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        while (!quitResponseLoop) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            command \u003d userResponseScanner.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            if(command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                quitResponseLoop \u003d true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                TaskHelper.printTaskList(taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    int taskNumber \u003d TaskHelper.getTaskNumberToSetAsDone(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    TaskHelper.setTaskAsDone(taskNumber, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    TaskHelper.printTaskNumberParseError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    TaskHelper.printTaskNumberNotFound();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } else if (command.startsWith(\"todo\") || command.startsWith(\"deadline\") || command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    String[] taskCommand \u003d TaskHelper.splitTaskCommand(command);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    TaskHelper.addTaskToList(taskCommand, taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                    TaskHelper.printExceptionMessage(e.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                TaskHelper.printInvalidCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 63,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 15
    }
  },
  {
    "path": "src/main/java/MissingInformationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class MissingInformationException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    private String exceptionMessage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public MissingInformationException(String exceptionMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.exceptionMessage \u003d exceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return \"Oh no! \" + exceptionMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 16
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        setDescription(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static int getNumberOfTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return numberOfTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 40
    }
  },
  {
    "path": "src/main/java/TaskHelper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class TaskHelper {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public TaskHelper() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void addTodo(String taskDetails, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        Task newTodo \u003d new Todo(taskDetails);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        taskList.add(newTodo);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added this todo: \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(newTodo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void addDeadline(String taskDetails, ArrayList\u003cTask\u003e taskList) throws MissingInformationException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String[] deadlineDetails \u003d taskDetails.split(\"/by\", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        if(deadlineDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            throw new MissingInformationException(\"The deadline \u0027by\u0027 date/time was undetected!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String deadlineDescription \u003d deadlineDetails[0].trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String deadlineBy \u003d deadlineDetails[1].trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        Task newDeadline \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        taskList.add(newDeadline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added this deadline: \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(newDeadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void addEvent(String taskDetails, ArrayList\u003cTask\u003e taskList) throws MissingInformationException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String[] eventDetails \u003d taskDetails.split(\"/at\", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        if(eventDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            throw new MissingInformationException(\"The event \u0027at\u0027 date/time was undetected!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String eventDescription \u003d eventDetails[0].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String eventAt \u003d eventDetails[1].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        Task newEvent \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        taskList.add(newEvent);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Got it! I\u0027ve added this event: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(newEvent);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void addTaskToList(String[] taskCommand, ArrayList\u003cTask\u003e taskList) throws MissingInformationException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        if(taskCommand.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            throw new MissingInformationException(\"The details of a \" + taskCommand[0] + \" cannot be empty!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String taskType \u003d taskCommand[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String taskDetails \u003d taskCommand[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            addTodo(taskDetails, taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                addDeadline(taskDetails, taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } catch (MissingInformationException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                printExceptionMessage(e.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                addEvent(taskDetails, taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            } catch (MissingInformationException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                printExceptionMessage(e.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printTaskNumberMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printTaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        int taskCount;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        if(Task.getNumberOfTasks() \u003e 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            for (taskCount \u003d 0; taskCount \u003c Task.getNumberOfTasks(); taskCount++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "                System.out.println(taskCount + 1 + \". \" + taskList.get(taskCount));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            System.out.println(\"There are no tasks in your list!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void setTaskAsDone(int taskNumber, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        if(taskNumber \u003c\u003d Task.getNumberOfTasks() \u0026\u0026 taskNumber \u003e 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            Task currentTask \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "            System.out.println(\"Invalid task number to mark as done!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static int getTaskNumberToSetAsDone(String command) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        taskNumber \u003d Integer.parseInt(splitCommand[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static String[] splitTaskCommand(String command) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        String[] splitCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return splitCommand;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printInvalidCommand() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Sorry, I could not understand your command!\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printTaskNumberParseError() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Unable to obtain task number!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printTaskNumberNotFound() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"No task number detected!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printTaskNumberMessage() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"Now you have \" + Task.getNumberOfTasks() + \" task(s) in your list!\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public static void printExceptionMessage(String exceptionMessage) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(exceptionMessage);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    private static void printDividerLine() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        System.out.println(\"___________________________________ \\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 153
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "matthewgani"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "matthewgani"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "matthewgani": 13
    }
  }
]
