[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected int argCount;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String[] arguments;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        arguments \u003d new String[10];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void setCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void addArgument(String argument) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        if (argCount \u003d\u003d 9) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        arguments[argCount] \u003d argument;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        argCount++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getArgument(int id) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return arguments[id];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // For debug purposes"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void debug() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        System.out.println(\"Command: \" + command);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        System.out.println(\"Arguments: \" + Arrays.toString(arguments));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 37
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String token \u003d \"[D]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Deadline(String newName, String by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        super(newName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return super.toString(\"[D]\") + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected static String REPLY_BAR \u003d \"%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%-%\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Indents and wraps all of Duke\u0027s replies in the bars."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Has a single line version..."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    private static void reply(String response) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        System.out.println(\"\\n\" + REPLY_BAR + \"\\n \u003e\u003e\u003e \" + response + \"\\n\" + REPLY_BAR + \"\\n\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // and a multiline version as well."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    private static void reply(String[] responses) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        System.out.println(\"\\n\" + REPLY_BAR);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        for (String eachResponse : responses) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            System.out.println(\" \u003e\u003e\u003e \" + eachResponse);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        System.out.println(REPLY_BAR+\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Gracefully shuts down Duke."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Doesn\u0027t do much now, but I\u0027m guessing there will be file IO next time?"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    private static void stop() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        reply(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Main function. Main event loop happens here."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // The Parser instance is used to get user input and it returns a Command object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // The Command object, which stores information from the user in an accessible interface,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // is then used to pass information to the switch statement that holds the command logic."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        String[] greetings \u003d {\"Hello! I\u0027m Duke\", \"What can I do for you?\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        reply(greetings);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        boolean endLoop \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        Command latestCommand;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        // MAIN EVENT LOOP:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        while (!endLoop) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            parser.getUserInput();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            latestCommand \u003d parser.parseCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            // DEBUG:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            // latestCommand.debug();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            // SWITCH: Handles the latest command."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            // The functions in other classes are written to return neat strings so that they can be wrapped by the"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            // \u0027reply\u0027 function. This is to shove all formatting logic into the functions to keep things neat here."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            switch(latestCommand.getCommand()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"bye\": // Exit condition is here"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                stop();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                endLoop \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"list\": // List all tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                reply(taskList.listTasks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"done\": // Complete a task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                reply(taskList.completeTask(latestCommand.getArgument(0)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"todo\": // Add a task to the task list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"deadline\": // Add a task to the task list"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            case \"event\": // Add a task to the task list"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                reply(taskList.addTask(latestCommand));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "f0fz"
        },
        "content": "                reply(\"Invalid!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 64,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String token \u003d \"[E]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Event(String newName, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        super(newName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void setAt(String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return super.toString(\"[E]\") + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 22
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // User\u0027s input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void getUserInput() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        if (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // The main function of the Parser class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Uses getUserInput to get the next command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // It creates a new Command object and populates it with the information"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // from the user command. It then returns the Command object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Command parseCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        command.setCommand(input.split(\" \")[0].toLowerCase());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        if (command.getCommand().length() \u003d\u003d input.length()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            return command; // no args"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        input \u003d input.substring(command.getCommand().length() + 1); // remove command from input plus the extra space"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        // Arguments are of form \" /opt argument\", so we split by \" /\" to get \"opt argument\" strings"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        String[] inputArgs \u003d input.split(\" /\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        for (String eachArg : inputArgs) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            command.addArgument(eachArg);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 37
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Task(String newName){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        name \u003d newName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void setName(String newName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        name \u003d newName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String getCheck() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return isDone ? \"[\\u2713]\" : \"[\\u2717]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String toString(String token) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return token + getCheck() + \" \" + name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 33
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    private Task[] taskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    private int taskCount;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        taskList \u003d new Task[100];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        taskCount \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Adds task to taskList using the Command object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String addTask(Command command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        // First argument will always be the description of the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        String taskName \u003d command.getArgument(0).trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        // Extra argument for Deadline and Event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        String extraArg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        switch(command.getCommand().toLowerCase()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            taskList[taskCount] \u003d new Todo(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            extraArg \u003d command.getArgument(1).substring(3); // removing the \"by \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            taskList[taskCount] \u003d new Deadline(taskName, extraArg);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            extraArg \u003d command.getArgument(1).substring(3); // removing the \"at \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            taskList[taskCount] \u003d new Event(taskName, extraArg);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        taskCount++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return \"Added: \" + taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Returns a string indicating completion of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // If it\u0027s already complete, it will say so by returning the right sentence."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String[] completeTask(String taskIDString) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        if (taskIDString \u003d\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            return new String[]{\"You need to specify a task number!\",\"Use list to check.\"};"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        int taskID \u003d Integer.parseInt(taskIDString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        if (taskList[taskID-1].getDone()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            return new String[]{\"This task is already complete!\", \"Did you perhaps mean another task?\"};"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            taskList[taskID-1].setDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            return new String[]{\"I\u0027ve marked this task as done:\", \"[\\u2713] \" + taskList[taskID-1].getName()};"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    // Returns a string array of all the tasks to be done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String[] listTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        String[] outputList \u003d new String[taskCount + 1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        outputList[0] \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        Task eachTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        // Start from 1, since index 0 of outputList is occupied"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskCount; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            eachTask \u003d taskList[i-1];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "f0fz"
        },
        "content": "            outputList[i] \u003d i + \". \" + eachTask.toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return outputList;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    protected String token \u003d \"[T]\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public Todo(String newName){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        super(newName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "        return super.toString(\"[T]\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "f0fz": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "f0fz"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "f0fz"
        },
        "content": "todo wah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "f0fz"
        },
        "content": "deadline yee /by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "f0fz"
        },
        "content": "event haw /at today-tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "f0fz"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "f0fz"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "f0fz"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "f0fz"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "f0fz"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "f0fz"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "f0fz"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "f0fz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "f0fz": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "f0fz"
        },
        "content": "# check for EXPECTED.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "f0fz"
        },
        "content": "if [ ! -e \"./EXPECTED.TXT\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "f0fz"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    echo \"********** EXPECTED DOES NOT EXIST **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "f0fz"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "f0fz"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "f0fz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "f0fz"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "f0fz"
        },
        "content": "cd ../out/production/ip"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "f0fz"
        },
        "content": "java Duke \u003c ../../../text-ui-test/input.txt \u003e ../../../text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "f0fz"
        },
        "content": "cd ../../../text-ui-test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "f0fz": 11,
      "-": 36
    }
  }
]
