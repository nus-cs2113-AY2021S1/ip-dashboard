[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "When the program starts, you will be greeted with:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "1. List "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "2. Bye"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "3. Done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "4. Delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "5. Find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "6. Todo"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "7. Deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "8. Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 1: List"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Lists all the tasks currently inside Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t1. [D][✓] project (by: 9pm)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t2. [T][✘] read book"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t3. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 2: Bye"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Exits the program"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`Bye`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "bye"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 3: Done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Marks the task as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`done (index of task)`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    [T][✓] read book"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 4: Delete"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Deletes the task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`delete (index of task)`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tNoted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t[T][✓] read book"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tNow you have 2 in the list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 5: Find"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Find tasks with matching keyword"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`find (matching keyword)`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "find book"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t1. [D][✘] return book (by: June 6th)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t2. [T][✘] read book"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 6: Todo"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Add a todo task into your task list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`todo (description of todo task)`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "todo wash your laundry!"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t[T][✘] wash your laundry!"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tNow you have 4 tasks in the list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 7: Deadline"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Add a deadline task into your task list"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`deadline (description of deadline) /by (deadline of deadline task)`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "deadline ip project /by 2359"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t[D][✘] ip project (by: 2359)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tNow you have 5 tasks in the list."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "### Feature 8: Event"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Add an event task into your task list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "#### Usage:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Example of usage (without the parenthesis): "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "`event (description of event) /at (duration/timing of event)`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "event wedding ceremony /at This Saturday 7pm"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t[E][✘] wedding ceremony (at: This Saturday 7pm)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\tNow you have 6 tasks in the list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "\t____________________________________________________________"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "```"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "trolommonm": 164,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the bye command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 7
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Base class for all commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 7
    }
  },
  {
    "path": "src/main/java/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the deadline command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public DeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the description of the deadline task input by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Description of the deadline task input by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the deadline of the deadline task input by the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Deadline of the deadline task input by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 31
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the delete command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private int indexOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public DeleteCommand(int indexOfTask) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.indexOfTask \u003d indexOfTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the index of the task to be deleted"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Index of the task to be deleted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public int getIndexOfTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return indexOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 20
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Represents the done command input the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private int indexOfTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public DoneCommand(int indexOfTask) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.indexOfTask \u003d indexOfTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the index of the task to be marked as done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Index of the task to be marked as done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public int getIndexOfTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return indexOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 21
    }
  },
  {
    "path": "src/main/java/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the event command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public EventCommand(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the description of the event task input by the user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Description of the event task input by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the duration of the event task input by the user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Duration of the event task input by the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 30
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the find command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the keyword to be searched by the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Keyword to be searched by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getKeyword() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 20
    }
  },
  {
    "path": "src/main/java/Command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent an invalid command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 7
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the list command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 7
    }
  },
  {
    "path": "src/main/java/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent the todo command input by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the description of the todo task input by the user"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Description of the todo task input by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DoneCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.ListCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.TodoCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.TaskManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Contains the main initializations for the Duke chat bot program"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ui.printIntroduction();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Command command \u003d new Command();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            command \u003d parser.parseCommand(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (command instanceof ListCommand) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printTasks(taskManager.getTasksList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof ByeCommand) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printGoodBye();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof DoneCommand) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                DoneCommand doneCommand \u003d (DoneCommand)command;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.markTaskAsDone(doneCommand.getIndexOfTask());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof TodoCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                TodoCommand todoCommand \u003d (TodoCommand)command;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Todo todoTask \u003d new Todo(todoCommand.getDescription());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.addTask(todoTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof DeadlineCommand) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                DeadlineCommand deadlineCommand \u003d (DeadlineCommand)command;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Deadline deadlineTask \u003d new Deadline(deadlineCommand.getDescription(), deadlineCommand.getBy());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.addTask(deadlineTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof EventCommand) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                EventCommand eventCommand \u003d (EventCommand)command;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Event eventTask \u003d new Event(eventCommand.getDescription(), eventCommand.getAt());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.addTask(eventTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof DeleteCommand) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                DeleteCommand deleteCommand \u003d (DeleteCommand)command;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.deleteTask(deleteCommand.getIndexOfTask());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (command instanceof FindCommand) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                FindCommand findCommand \u003d (FindCommand)command;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.findAndPrintFilteredTasks(findCommand.getKeyword());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 69,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used whenever an Exception is thrown in Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 10
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DoneCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.InvalidCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.TodoCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DeadlineCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Handles the parsing of the user inputs into the chatbox."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the extracting of the index of tasks specified by the user to be marked as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return DoneCommand object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If an invalid index of task is specified or no index of task specified."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private DoneCommand handleDone(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new DoneCommand(indexOfTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Invalid index of task!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the index of the task to be marked as done!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the extraction of the description of the Todo task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return TodoCommand object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If no description is input by the user."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private TodoCommand handleTodo(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return new TodoCommand(description);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the splitting of the user input to extract the description"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * and the deadline of the Deadline task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return DeadlineCommand object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If description and/or deadline of task is not input"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private DeadlineCommand handleDeadline(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        int indexOfBy \u003d Arrays.asList(inputSplit).indexOf(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and/or deadline of the task!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, indexOfBy));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String by \u003d String.join(\" \","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, indexOfBy + 1, inputSplit.length));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty() \u0026\u0026 by.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and deadline of the task!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (description.isEmpty()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description of the task!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (by.isEmpty()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the deadline of the task!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return new DeadlineCommand(description, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the splitting of the user input to extract the description"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * and the duration of the Event task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return EventCommand object"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If description and/or duration of task is not input"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private EventCommand handleEvent(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        int indexOfAt \u003d Arrays.asList(inputSplit).indexOf(\"/at\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and/or duration of the event!\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, indexOfAt));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String at \u003d String.join(\" \","
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, indexOfAt + 1, inputSplit.length));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty() \u0026\u0026 at.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and duration of the event!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (description.isEmpty()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description of the event!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (at.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the duration of the event!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return new EventCommand(description, at);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the splitting of the user input to extract the index of task to be deleted."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return DeleteCommand object"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If an invalid index of task is specified or no index of task specified."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private DeleteCommand handleDelete(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new DeleteCommand(indexOfTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input a valid index of task!\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the index of task you want to delete!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Handles the splitting of the user input to extract the keyword to be searched."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param inputSplit User input that has already been split by an empty space"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return FindCommand object"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @throws DukeException If no keyword is specified."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private FindCommand handleFind(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String keyword \u003d inputSplit[1];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input a keyword to search for in your tasks!\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Parse the user input"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Command Object"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Command parseCommand(String input) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String command \u003d input.trim().toLowerCase().split(\" \")[0];"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleDone(inputSplit);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleTodo(inputSplit);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleDeadline(inputSplit);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleEvent(inputSplit);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleDelete(inputSplit);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return handleFind(inputSplit);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new InvalidCommand();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(\"Invalid command, please try again!\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 212
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private File dukeFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        createDataFolder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        createDukeFile();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private void createDataFolder() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        File dataFolder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (!dataFolder.isDirectory()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                dataFolder.mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (SecurityException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private void createDukeFile() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        File dukeFile \u003d new File(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (!dukeFile.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                dukeFile.createNewFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (SecurityException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.dukeFile \u003d dukeFile;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void saveTaskListToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dukeFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String textForTask \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int isDone \u003d task.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"T|\" + isDone + \"|\" + description + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Event event \u003d (Event)task;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"E|\" + isDone + \"|\" + description + \"|\" + event.getAt() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Deadline deadline \u003d (Deadline)task;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"D|\" + isDone + \"|\" + description + \"|\" + deadline.getBy() + \"\\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            fw.write(textForTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Scanner sc \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String[] lineSplit \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            switch (lineSplit[0]) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Todo(lineSplit[2]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Event(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Deadline(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                ui.printMessageWithDivider(\"Invalid task detected in Duke.txt!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (lineSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 105
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent a Deadline task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the deadline of this deadline object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Deadline of this deadline object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Override the String representation of deadline object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return String representation of deadline object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 30
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent an Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Return the duration of the event object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Duration of the event object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the String representation of the event object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return String representation of the event object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 30
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * The base class for all kinds of tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Unicode for the tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        // return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Mark task as done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns description of the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Description of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Override the String representation of task object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return String representation of task object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 55
    }
  },
  {
    "path": "src/main/java/Task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Handles adding, deleting, finding and marking of tasks as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskList \u003d storage.retrieveTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns the lists of tasks currently"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Lists of tasks in type ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Returns number of tasks in the taskList currently"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return Number of tasks in taskList"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Adds a task into the taskList"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ui.printMessageWithDivider(\"Got it. I\u0027ve added this task:\","
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                \"Now you have \" + getNumberOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Removes a task from the taskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param indexOfTask Index of the task to be removed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void deleteTask(int indexOfTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task removedTask \u003d taskList.remove(indexOfTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(\"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    removedTask.toString(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    \"Now you have \" + getNumberOfTasks() + \" in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Finds and prints the tasks with the matching keyword."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param keyword The keyword to be matched"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void findAndPrintFilteredTasks(String keyword) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (Task t: getTasksList()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                filteredTaskList.add(t);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ui.printFilteredTasks(filteredTaskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Mark the index of task to be done."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param indexOfTask Index of task to be marked as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void markTaskAsDone(int indexOfTask) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task task \u003d taskList.get(indexOfTask);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(\"Nice! I\u0027ve marked this task as done:\", task.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            ui.printMessageWithDivider(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Prints all the tasks in taskList"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ui.printTasks(getTasksList());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 120
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Used to represent a Todo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Overrides the String representation of the Todo object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @return String representation of the Todo object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 19
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " * Handles the output of messages to the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static final String dividerLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Prints messages to be displayed to the user, with divider line at the start and end."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param messages Messages that is to be displayed to the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printMessageWithDivider(String... messages) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (String message: messages) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            printWithIndentation(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Prints a message with indentation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param string The message to be printed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printWithIndentation(String string) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        System.out.println(\"\\t\" + string);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Print the divider line with indentation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printIntroduction() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printMessageWithDivider(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printMessageWithDivider(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Prints the lists of tasks currently."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            printWithIndentation((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * Print the filtered lists of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printFilteredTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            printWithIndentation((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printDivider();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 78
    }
  }
]
