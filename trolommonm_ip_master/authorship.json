[
  {
    "path": "src/main/java/Common/CommonFunctions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class CommonFunctions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static final String dividerLine \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public static void printWithIndentation(String string) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        System.out.println(\"\\t\" + string);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public static void printDivider() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        printWithIndentation(dividerLine);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Common.CommonFunctions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static TaskManager taskManager \u003d new TaskManager();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static void handleDone(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskManager.markTaskAsDone(indexOfTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Invalid index of task!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the index of the task to be marked as done!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static void handleTodo(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, 1, inputSplit.length));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Todo newTodo \u003d new Todo(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskManager.addTask(newTodo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static void handleDeadline(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        int indexOfBy \u003d Arrays.asList(inputSplit).indexOf(\"/by\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and/or deadline of the task!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, indexOfBy));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String by \u003d String.join(\" \","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, indexOfBy + 1, inputSplit.length));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty() \u0026\u0026 by.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and deadline of the task!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (description.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description of the task!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (by.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the deadline of the task!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskManager.addTask(newDeadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static void handleEvent(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        int indexOfAt \u003d Arrays.asList(inputSplit).indexOf(\"/at\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and/or duration of the event!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inputSplit, 1, indexOfAt));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String at \u003d String.join(\" \","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Arrays.copyOfRange(inputSplit, indexOfAt + 1, inputSplit.length));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (description.isEmpty() \u0026\u0026 at.isEmpty()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description and duration of the event!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (description.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the description of the event!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } else if (at.isEmpty()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the duration of the event!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Event newEvent \u003d new Event(description, at);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskManager.addTask(newEvent);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private static void handleDelete(String[] inputSplit) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int indexOfTask \u003d Integer.parseInt(inputSplit[1]) - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskManager.deleteTask(indexOfTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input a valid index of task!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            throw new DukeException(\"Please input the index of task you want to delete!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskManager.printIntroduction();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String[] inputSplit \u003d input.split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String command \u003d input.trim().toLowerCase().split(\" \")[0];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.printTasks();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                taskManager.printGoodBye();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    handleDone(inputSplit);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    handleTodo(inputSplit);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    handleDeadline(inputSplit);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    handleEvent(inputSplit);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    handleDelete(inputSplit);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                    CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                CommonFunctions.printMessage(\"Error command, please try again!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 148,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 7
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Common.CommonFunctions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private File dukeFile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        createDataFolder();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        createDukeFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private void createDataFolder() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        File dataFolder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (!dataFolder.isDirectory()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                dataFolder.mkdir();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (SecurityException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private void createDukeFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        File dukeFile \u003d new File(\"data/Duke.txt\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        if (!dukeFile.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                dukeFile.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (SecurityException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.dukeFile \u003d dukeFile;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void saveTaskListToFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        FileWriter fw \u003d new FileWriter(dukeFile);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String textForTask \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            int isDone \u003d task.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"T|\" + isDone + \"|\" + description + \"\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Event event \u003d (Event)task;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"E|\" + isDone + \"|\" + description + \"|\" + event.getAt() + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                Deadline deadline \u003d (Deadline)task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                textForTask \u003d \"D|\" + isDone + \"|\" + description + \"|\" + deadline.getBy() + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            fw.write(textForTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        Scanner sc \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            String[] lineSplit \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            switch (lineSplit[0]) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Todo(lineSplit[2]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Event(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task \u003d new Deadline(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                CommonFunctions.printMessage(\"Invalid task detected in Duke.txt!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            if (lineSplit[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 104
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 19
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 19
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        // return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 33
    }
  },
  {
    "path": "src/main/java/Task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Common.CommonFunctions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.awt.color.CMMException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            taskList \u003d storage.retrieveTasks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printWithIndentation(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printWithIndentation(task.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printWithIndentation(\"Now you have \" + getNumberOfTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void deleteTask(int indexOfTask) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task removedTask \u003d taskList.remove(indexOfTask);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printWithIndentation(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printWithIndentation(removedTask.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printWithIndentation(\"Now you have \" + getNumberOfTasks() + \" in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void markTaskAsDone(int indexOfTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            Task task \u003d taskList.get(indexOfTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            storage.saveTaskListToFile(taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(\"Index out of bounds!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printMessage(e.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        for (int i \u003d 0; i \u003c getNumberOfTasks(); i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "            CommonFunctions.printWithIndentation((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printDivider();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printIntroduction() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printMessage(\"Hello! I\u0027m Duke\\n\" + \"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        CommonFunctions.printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 99
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "trolommonm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "trolommonm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "trolommonm": 12
    }
  }
]
