[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui.printGreetingMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                String line \u003d ui.readInput();;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                Command c \u003d new Parser().evaluateInput(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                c.executeCommand(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }catch(DukeException e){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                ui.printInvalidInputMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void main(String[] args){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        new Duke(FILE_PATH).run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 49,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 4
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Command evaluateInput(String line) throws DukeException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String upperLine \u003d line.toUpperCase();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if(upperLine.startsWith(\"TODO\")){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new AddCommand(\"Todo\",line);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"LIST\")){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"DEADLINE\")){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new AddCommand(\"Deadline\",line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"EVENT\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new AddCommand(\"Event\",line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"BYE\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"DONE\")){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new DoneCommand(line);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"DELETE\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return new DeleteCommand(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lingsihui": 30
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int LENGTH_OF_DONE_SYMBOL \u003d 4;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int LENGTH_OF_NOT_DONE_SYMBOL \u003d 4;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final String DONE_SYMBOL \u003d \"|1| \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final String NOT_DONE_SYMBOl \u003d \"|0| \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Return an Array List of the tasks in file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, DukeException{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ArrayList\u003cTask\u003e storageTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            String line  \u003d s.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if(line.contains(DONE_SYMBOL)){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                addFileTask(storageTasks,line.substring(LENGTH_OF_DONE_SYMBOL));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                storageTasks.get(storageTasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            } else if (line.contains(NOT_DONE_SYMBOl)){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                addFileTask(storageTasks,line.substring(LENGTH_OF_NOT_DONE_SYMBOL));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return storageTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //add File task to ArrayList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void addFileTask(ArrayList\u003cTask\u003e storageTasks,String line) throws DukeException{"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if(line.startsWith(\"Deadline\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int slashPosition \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storageTasks.add(new Deadline(line ,slashPosition));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if(line.startsWith(\"Todo\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storageTasks.add(new Todo(line));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (line.startsWith(\"Event\")){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int slashPosition \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storageTasks.add(new Event(line ,slashPosition));;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void saveTaskToFile(String type,Task t, boolean isAppend){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            writeToFile(type,t,isAppend);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void writeToFile(String type, Task taskToAdd,boolean isAppend) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.filePath,isAppend);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String done;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (taskToAdd.getIsDone()){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            done \u003d DONE_SYMBOL;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            done \u003d NOT_DONE_SYMBOl;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (type.equals(\"Deadline\")){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            fw.write(done + type + taskToAdd.getDescription() + \"/by\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                    + taskToAdd.getBy() + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (type.equals(\"Event\")){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            fw.write(done + type + taskToAdd.getDescription() + \"/at\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                    + taskToAdd.getAt() + System.lineSeparator());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (type.equals(\"Todo\")){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            fw.write(done + type + taskToAdd.getDescription()"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                    + System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void updateTaskToFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        saveTaskToFile(tasks.get(0).getType(),tasks.get(0), false);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        for(int i \u003d 1; i\u003c tasks.size();i++){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            saveTaskToFile(tasks.get(i).getType(),tasks.get(i),true);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 100
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public final int MIN_DESCRIPTION_LENGTH \u003d 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int processEvent(String line) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if (!line.contains(\"/at\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return line.indexOf(\"/\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println(\"OOPS! Invalid Event Input\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int processDeadline(String line) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if (!line.contains(\"/by\")){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return line.indexOf(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println(\"OOPS! Invalid Deadline Input\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void addTask(Task t,Ui ui,Storage storage,String type){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if (t.getDescriptionLength() \u003c MIN_DESCRIPTION_LENGTH) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showAddTaskMessage(t,tasks.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storage.saveTaskToFile(type,t,true);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }catch(DukeException e){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.printInvalidTaskToAdd();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void deleteTask(String line,Ui ui,Storage storage){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int taskNum \u003d processTaskToDelete(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showDeleteTaskMessage(tasks,taskNum);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.remove(taskNum-1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storage.updateTaskToFile(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showInvalidTaskToDelete();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void markTaskAsDone(String line,Ui ui,Storage storage) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int taskNum \u003d processTaskToDelete(line);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.get(taskNum-1).markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showMarkedTaskMessage(tasks,taskNum);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            storage.updateTaskToFile(tasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.showInvalidTaskToMark();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int processTaskToDelete(String line) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if(!line.contains(\" \")){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if(words.length \u003c 2){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if(taskNum \u003e tasks.size() ){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return taskNum;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showList (Ui ui) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if(tasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.printTasksInList(tasks);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }catch (DukeException e){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            ui.printListIsEmptyMessage();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 106
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final String LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private  Scanner in;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    //Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printGreetingMessage () {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printByeMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String readInput(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printInvalidInputMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Opps! Sorry I don\u0027t know what you mean! :(\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showFileNotFoundError(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Invalid File content\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showAddTaskMessage(Task t, int size){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" task in the list.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printInvalidTaskToAdd(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"OOPS! Description cannot be empty!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showDeleteTaskMessage(ArrayList\u003cTask\u003e tasks, int taskNum){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Noted I have removed this task!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"\\t\"+ tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showInvalidTaskToDelete(){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"OOPS! Invalid task to delete!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showMarkedTaskMessage(ArrayList\u003cTask\u003e tasks,int taskNum){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"\\t\"+ tasks.get(taskNum-1));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void showInvalidTaskToMark(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"OOPS! Invalid task to Mark!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printTasksInList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void printListIsEmptyMessage(){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Your list is empty! :0\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 91
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public AddCommand(String type, String line){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (type.equals(\"Todo\")){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.addTask(new Todo(line),ui,storage,type);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (type.equals(\"Event\")){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int slashPosition \u003d tasks.processEvent(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.addTask(new Event(line,slashPosition),ui,storage,type);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (type.equals(\"Deadline\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            int slashPosition \u003d tasks.processDeadline(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            tasks.addTask(new Deadline(line,slashPosition),ui,storage,type);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 33
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract void executeCommand(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public DeleteCommand(String line){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        tasks.deleteTask(line,ui,storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 19
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private String line;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public DoneCommand(String line){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.line \u003d line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        tasks.markTaskAsDone(line,ui,storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void executeCommand (TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        tasks.showList(ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private static final int BY_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Deadline(String description, int slashPosition){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description.substring(DEADLINE_LENGTH,slashPosition));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.by \u003d description.substring(slashPosition + BY_LENGTH);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"Deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int getDescriptionLength() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return description.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int AT_LENGTH \u003d 3;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int EVENT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Event(String description,int slashPosition){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description.substring(EVENT_LENGTH,slashPosition));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.at \u003d description.substring(slashPosition + AT_LENGTH);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"Event\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int getDescriptionLength() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return description.length();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \" \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int getDescriptionLength() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return description.length();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int TODO_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description.substring(TODO_LENGTH));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public int getDescriptionLength() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return description.length();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"Todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 25
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at Sunday"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "deadline return book /by Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "event meeting /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "if [ -e \"./data/duke.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    rm data/duke.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/command/*.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 9,
      "-": 36
    }
  },
  {
    "path": "tmp.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Deadline return book /by Monday"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|1| Todo read book "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Deadline return book /by monday"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "|0| Event meeting /at sunday"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 24
    }
  }
]
