[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int BY_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.by \u003d by.substring(BY_LENGTH);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d 8;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int EVENT_LENGTH \u003d 5;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private static Task[] tasks \u003d new Task[100];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    private static int numOfTask \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        printGreetingMessage();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        boolean isExited \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        while (!isExited) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            line \u003d readInput(in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            isExited \u003d evaluateInput(line);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void printGreetingMessage () {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static String readInput (Scanner in) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static boolean evaluateInput (String line){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String upperLine \u003d line.toUpperCase();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        if (upperLine.startsWith(\"TODO\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            addTask(new Todo(line));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"LIST\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            showList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"DEADLINE\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            addDeadline(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"EVENT\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            addEvent(line);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"BYE\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            printByeMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else if (upperLine.startsWith(\"DONE\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            markTaskAsDone(line);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            printInvalidInputMessage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void printInvalidInputMessage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Invalid Input\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void markTaskAsDone(String line) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        tasks[taskNum - 1].markAsDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"\\t\" + tasks[taskNum - 1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void addEvent(String line) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int slashPosition  \u003d  line.indexOf(\"/\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String at \u003d line.substring(slashPosition + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String description \u003d line.substring(EVENT_LENGTH,slashPosition);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        addTask(new Event(description,at));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void addDeadline(String line) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int slashPosition  \u003d  line.indexOf(\"/\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String by \u003d line.substring(slashPosition + 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        String description \u003d line.substring(DEADLINE_LENGTH,slashPosition);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        addTask(new Deadline(description,by));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void addTask (Task t){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        tasks[numOfTask] \u003d t;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        numOfTask++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"\\t\" + t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Now you have \" + numOfTask + \" task in the list.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void showList () {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        int numbering \u003d 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        for (Task t: tasks){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            numbering++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            if(t \u003d\u003d null){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "            System.out.println(numbering + \". \" + t);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static void printByeMessage() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lingsihui": 103,
      "-": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int AT_LENGTH \u003d 2;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.at \u003d at.substring(AT_LENGTH);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.description \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public static final int TODO_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        super(description.substring(TODO_LENGTH));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "deadline return book /by Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "event meeting /at Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lingsihui"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lingsihui": 2,
      "-": 36
    }
  }
]
