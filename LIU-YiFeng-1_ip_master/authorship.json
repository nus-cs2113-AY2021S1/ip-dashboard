[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   What can I do for you?"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Available Commands:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   2. done (e.g done 1)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   3. todo (e.g todo homework)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   4. event (e.g event meeting /monday 2pm)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   5. deadline (e.g deadline project /monday 2359)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   6. bye"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   p.s all other inputs will be ignored!"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Please enter your command:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   -----------------------------------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 16,
      "-": 23
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final int MAX_CAPACITY \u003d 100;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final int INDEX_PAST_RECORD_STATUS \u003d 4;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void main (String[] args) throws IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printWelcomeMessage ();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        decodingUserCommands ();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printLine () {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"----------------------------------\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printBye () {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printGreeting () {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.print (greeting);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Reads user input and adds it to the task list accordingly"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Based on the input, new task of different types (e.g todo, event, deadline)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * will be created accordingly"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void decodingUserCommands () throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int listSize \u003d 0;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e ();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Task[] tasks \u003d new Task[MAX_CAPACITY];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        //importing pastRecord before reading user commands"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printImportingMessage ();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String pastRecordPath \u003d \"D:\\\\NUS\\\\Year 2 Sem 1\\\\CS2113T\\\\iP\\\\iPoutput.txt\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        File pastRecord \u003d new File (pastRecordPath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Scanner scanner \u003d new Scanner (pastRecord);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            while (scanner.hasNextLine ()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                listSize \u003d importPastRecord (listSize, list, tasks, scanner);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printDoneLoadingMessage ();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"There is no past record! You are a 1st time user\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        //Reading user commands after importing pastRecord"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Scanner in \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        input \u003d in.nextLine ();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        while (! input.equals (\"bye\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (input.equals (\"list\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                printList (list, tasks);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else if (input.startsWith (\"done\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                setDone (input, list, tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else if (input.startsWith (\"todo\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                listSize \u003d setTodo (input, listSize, list, tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else if (input.startsWith (\"event\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                listSize \u003d setEvent (input, listSize, list, tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else if (input.startsWith (\"deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                listSize \u003d setDeadline (input, listSize, list, tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else if (input.startsWith (\"delete\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                listSize \u003d setDelete (input, listSize, list, tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.println (\"\\u2639 \" + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                printLine ();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d in.nextLine ();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        //when switching off the programme, export the tasks as output text and print bye message"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        exportTasksAsOutputText (list, tasks);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printBye ();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int setDelete (String input, int listSize, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (list.size () \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.println (\"The list is empty\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                printLine ();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                String convertedDeleteInput;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                int taskNumberToDelete;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                convertedDeleteInput \u003d input.replaceAll (\"[^0-9]\", \"\");//replace all non-number with space"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskNumberToDelete \u003d Integer.parseInt (convertedDeleteInput);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskNumberToDelete \u003e list.size ()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    System.out.println (\"The task number is out of bound! Please type \\\"list\\\"\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    printLine ();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    listSize \u003d printDeleteMessage (listSize, list, tasks[taskNumberToDelete - 1], taskNumberToDelete);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"\\u2639 \" + \"OOPS!!! The task number of delete cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int importPastRecord (int listSize, ArrayList\u003cString\u003e list, Task[] tasks, Scanner scanner) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String content \u003d scanner.nextLine ();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int pastTaskStatus \u003d Integer.parseInt (content.substring (INDEX_PAST_RECORD_STATUS, INDEX_PAST_RECORD_STATUS + 1));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (content.startsWith (\"T\")) { //pastRecord has a todo task and add the todo to the task list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            String todoDescription \u003d \"todo \" + content.substring (INDEX_PAST_RECORD_STATUS + 4, content.length ());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d setTodo (todoDescription, listSize, list, tasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (pastTaskStatus \u003d\u003d 1) { //if pastTaskStatus is 1, mark it done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                tasks[listSize - 1].makeAsDone ();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (content.startsWith (\"E\")) { //pastRecord has a event task and add the event to the task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            String eventDescription \u003d \"event \" + content.substring (INDEX_PAST_RECORD_STATUS + 4, content.length () - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            eventDescription \u003d eventDescription.replace (\"(\", \"/\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d setEvent (eventDescription, listSize, list, tasks);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (pastTaskStatus \u003d\u003d 1) { //if pastTaskStatus is 1, mark it done"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                tasks[listSize - 1].makeAsDone ();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else if (content.startsWith (\"D\")) { //pastRecord has a deadline task and add the deadline to the task list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            String deadlineDescription \u003d \"event \" + content.substring (INDEX_PAST_RECORD_STATUS + 4, content.length () - 1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            deadlineDescription \u003d deadlineDescription.replace (\"(\", \"/\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d setEvent (deadlineDescription, listSize, list, tasks);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (pastTaskStatus \u003d\u003d 1) { //if pastTaskStatus is 1, mark it done"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                tasks[listSize - 1].makeAsDone ();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        content \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printDoneLoadingMessage () {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Done loading past record onto your task list!\\n\" + \"Updating task status based on past record\\n\" + \"updating...\\n\" + \".\\n\" + \".\\n\" + \"Done updating! Please type \\\"List\\\" to check!\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printImportingMessage () {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Importing data from previous record\" + System.lineSeparator () + \".\" + System.lineSeparator () + \".\" + System.lineSeparator () + \".\" + System.lineSeparator () + \".\" + System.lineSeparator () + \"please wait :)\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void exportTasksAsOutputText (ArrayList\u003cString\u003e list, Task[] tasks) throws IOException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        //need to change the filePath as the user\u0027s filePath"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String filePath \u003d \"D:\\\\NUS\\\\Year 2 Sem 1\\\\CS2113T\\\\iP\\\\iPoutput.txt\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        File file \u003d new File (filePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter (file.getAbsoluteFile ());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter (fileWriter);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (list.size () \u003d\u003d 0) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            bufferedWriter.write (\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size (); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (tasks[i].getStatusIcon () \u003d\u003d \"\\u2713\") {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    bufferedWriter.write (tasks[i].getType () + \" | \" + \"1\" + \" | \" + list.get (i) + \"\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    bufferedWriter.write (tasks[i].getType () + \" | \" + \"0\" + \" | \" + list.get (i) + \"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        bufferedWriter.close ();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int setDeadline (String input, int listSize, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d input.replace (\"deadline \", \"\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            int positionIndex \u003d input.indexOf (\"/\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            String date \u003d input.substring (positionIndex + 1, input.length ());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d input.substring (0, positionIndex);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            tasks[listSize] \u003d new Deadline (input, date);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            list.add (tasks[listSize].getDescription ());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d printAddTaskMessage (listSize, list, tasks);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (StringIndexOutOfBoundsException s) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"\\u2639 \" + \"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int printDeleteMessage (int listSize, ArrayList\u003cString\u003e list, Task task, int taskNumberToDelete) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"  [\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getType ()"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"]\""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getStatusIcon ()"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + list.get (taskNumberToDelete - 1));"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        list.remove (taskNumberToDelete - 1);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Now you have \" + list.size () + \" tasks in the list. and deletion happened\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        listSize--;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int setEvent (String input, int listSize, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d input.replace (\"event \", \"\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            int positionIndex \u003d input.indexOf (\"/\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            String date \u003d input.substring (positionIndex + 1, input.length ());"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d input.substring (0, positionIndex);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            tasks[listSize] \u003d new Event (input, date);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            list.add (tasks[listSize].getDescription ());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d printAddTaskMessage (listSize, list, tasks);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (StringIndexOutOfBoundsException s) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"\\u2639 \" + \"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int setTodo (String input, int listSize, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (input.equals (\"todo\") || input.equals (\"todo \")) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"\\u2639 \" + \"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            input \u003d input.replace (\"todo \", \"\");"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            list.add (input);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            tasks[listSize] \u003d new ToDo (input);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            listSize \u003d printAddTaskMessage (listSize, list, tasks);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int printAddTaskMessage (int listSize, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"  [\" + tasks[listSize].getType () + \"]\" + \"[\" + tasks[listSize].getStatusIcon () + \"] \" + list.get (listSize));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Now you have \" + list.size () + \" tasks in the list.\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        listSize++;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return listSize;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void setDone (String input, ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (list.size () \u003d\u003d 0) {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.println (\"The list is empty\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                printLine ();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                String convertedSetDoneInput;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                int taskNumberToBeDone;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                convertedSetDoneInput \u003d input.replaceAll (\"[^0-9]\", \"\");//replace all non-number with space"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskNumberToBeDone \u003d Integer.parseInt (convertedSetDoneInput);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskNumberToBeDone \u003e list.size ()) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    System.out.println (\"The task number is out of bound! Please type \\\"list\\\"\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    printLine ();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else if (tasks[taskNumberToBeDone - 1].isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    System.out.println (\"Chill man, this task is completed!\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    printLine ();"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    tasks[taskNumberToBeDone - 1].makeAsDone ();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    printDoneMessage (tasks[taskNumberToBeDone - 1]);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    printLine ();"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"\\u2639 \" + \"OOPS!!! The task number of done cannot be empty.\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            printLine ();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printList (ArrayList\u003cString\u003e list, Task[] tasks) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (list.size () \u003d\u003d 0) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (\"The list is empty\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size (); i++) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println (i + 1"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + \".[\""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + tasks[i].getType ()"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + \"]\""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + \"[\""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + tasks[i].getStatusIcon ()"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + \"] \" + list.get (i));"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printDoneMessage (Task task) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"  [\""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getType ()"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"]\""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getStatusIcon ()"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"] \""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getDescription ());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void printWelcomeMessage () {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printGreeting ();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"Available Commands:\\n\""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"1. list\\n\""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"2. done (e.g done 1)\\n\""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"3. delete (e.g delete 1)\\n\""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"4. todo (e.g todo homework)\\n\""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"5. event (e.g event meeting /monday 2pm)\\n\""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"6. deadline (e.g deadline project /monday 2359)\\n\""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"7. bye\\n\" + \"p.s all other inputs will be ignored!\\n\""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Please enter your command:\");"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine ();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 323,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Deadline(String description, String date){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + \"(\" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Event(String description, String date){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + \"(\" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 18
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Task(String description){ //setting up the constructor"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or cross symbols"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public boolean makeAsDone(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 23
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 7
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "asdhaksdhj"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "hi can you"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo reading"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo watching drama"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "event win toto/tmr"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "deadline win toto/tmr"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo againah?"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "REM compile the code into the bin folder; Compiling all the .java files in the directory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 5,
      "-": 18
    }
  }
]
