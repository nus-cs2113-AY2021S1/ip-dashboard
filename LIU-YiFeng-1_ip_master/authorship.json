[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "# Duke Project"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "* This is a CLI (Command Line Interface) application *written in OOP fashion*."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "* Helps user to save different types of tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "*Useful Links*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "* [User Guide](https://liu-yifeng-1.github.io/ip/)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 5,
      "-": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "_Duke_ is a program for users to store different types of tasks. _Duke_ is a simple client program and users can interact with _Duke_ by typing commands in the command prompt."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Importing data from previous record"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   please wait :)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Done loading past record onto your task list!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Updating task status based on past record"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   updating..."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   ."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Done updating! Please type \"List\" to check!"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   Type [help] to view available commands!"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   -----------------------------------------------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " ## Running jar file on Command Prompt"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " If you are running the jar file on Windows Command Prompt, please use the following command:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " chcp 65001"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " java -Dfile.encoding\u003dUTF-8 -jar .\\iP.jar"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "## Features for _Duke_"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "The following features are available for _Duke_:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "1. Keep track of todo, event and deadline types of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "2. List down all available tasks stored in the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "3. Find specific events based on input keyword."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "4. Save all available tasks into `Duke_output.txt`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "5. Extract data from `Duke_output.txt` and update the task list automatically."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "## Function List"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "The table below shows the available commands in _Duke_ and the corresponding function description."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Function Name | Function Description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "bye | terminates the program and saves all available tasks into `~/data/duke.txt`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "deadline | creates a deadline task with the given task description and task date"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete | deletes a specific task from the task list based on the given task index"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "done | mark a specific task from the task list as done, based on the given task index"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "event | creates an event task with the given task description and task date"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "find | prints out all tasks that contains the given keyword"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "help | prints out the available commands in _Duke_"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list | prints out all available tasks currently stored in the task list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "save | saves all available tasks into `Duke_output.txt`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo | creates a todo task with the given task description"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "## Available Commands in _Duke_"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "### Notes on command format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`command` - this is the exact command that you need to type in the terminal"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003cmust have content\u003e` - this is the parameter that you must supply to the program. E.g `todo \u003ctask description\u003e`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`[may have content]` -this is the parameter that you may want to supply to the program. E.g `event \u003ctask description\u003e /at \u003ctask date\u003e [task time]`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __Bye__"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Terminates the program and saves all available tasks into `~/data/duke.txt`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __deadline__ "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Creates a deadline task with the given task description and task date"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`deadline \u003ctask description\u003e /by \u003ctask date\u003e [task time]`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003ctask description\u003e` - description of the task that has a deadline. E.g project submission"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003ctask date\u003e` - date of the deadline that is due. E.g sunday"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`[task time]` - exact time of the deadline that is due. E.g 2359"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Example"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`deadline project submission /by 3 Oct` - creates a deadline task called \"project submission\" that is due on 3 Oct"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`deadline project submission /by 3 Oct 2359` - - creates a deadline task called \"project submission\" that is due on 3 Oct, 2359"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __delete__ "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Deletes a specific task from the task list based on the given task index"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003cindex\u003e` - the corresponding task index which you want to delete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Example"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`delete 4` - deletes the task with index 4 from your list of tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __done__"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Mark a specific task from the task list as done, based on the given task index"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003cindex\u003e` - the corresponding task index which you want to mark as done"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Example"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`done 3` - marks the task with index 3 from your list of tasks as done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __event__ "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Creates an event task with the given task description and task date"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`event \u003ctask description\u003e /at \u003ctask date\u003e [task time]`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003ctask description\u003e` - description of the task that is happening on certain date. E.g CNY celebration"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003ctask date\u003e` - date of the event that is happening. E.g 13 Feb"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`[task time]` - exact time of the event that is happening. E.g 2359"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Example"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`event CNY celebration /at 13 Feb` - creates an event task called \"CNY celebration\" that is happening on 13 Feb"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`event CNY celebration /at 13 Feb 10pm` - creates an event task called \"CNY celebration\" that is happening on 13 Feb 10pm"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __help__ "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Prints out the available commands in _Duke_"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __list__ "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Prints out all available tasks currently stored in the task list"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __save__ "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Saves all available tasks into `Duke_output.txt`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`save`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "#### __todo__ "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "Creates a todo task with the given task description"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Syntax"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`todo \u003ctask description\u003e`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`\u003ctask description\u003e` - description of the task that needs to do"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "##### Example"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "`todo homework` - creates a todo task called \"homework\" "
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 140,
      "-": 11
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String RECORD_PATH \u003d \"Duke_output.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printWelcomeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Storage.loadData(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        decodingUserCommands(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Decodes user input and execute the program accordingly."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 1. list - prints all tasks in the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 2. done - sets the status of the desired task as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 3. delete - deletes a desired task based on task index."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 4. todo - adds a new ToDo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 5. event - adds a new Event task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 6. deadline - adds a new Deadline task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 7. find - prints all tasks containing the given find key word."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 8. save - saves all tasks available to Duke_output.txt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 9. bye - exits the program and saves all tasks available to Duke_output.txt."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Program is always running until user inputs \"bye\"."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * p.s all other inputs will be ignored!"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList Task list which stores different types of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @throws IOException If the Storage class fails to read / write data."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static void decodingUserCommands(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Parser.parser(userInput, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } while (Parser.getRunStatus());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 48,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import static duke.Duke.RECORD_PATH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Storage class which deals with data loading and data saving."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static final int TASK_STATUS_STARTING_INDEX \u003d 4;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static final int TASK_STATUS_ENDING_INDEX \u003d 5;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static final int TASK_DESCRIPTION_STARTING_INDEX \u003d 8;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static final int STATUS_DONE_INDEX \u003d 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String STATUS_DONE_SYMBOL \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String TODO_TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String EVENT_TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String DEADLINE_TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String RESET_CONTENT_TO_BE_READ \u003d \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String TASK_DESCRIPTION_END_INDICATOR \u003d \"(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Loads data from Duke_output.txt for past record tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList Task list which stores different types of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void loadData(TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskStatus;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskDescriptionEndIndex;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskDateStartIndex;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskDateEndIndex;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        File pastRecord \u003d new File(RECORD_PATH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Scanner scanner \u003d new Scanner(pastRecord);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                String content \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskStatus \u003d Integer.parseInt(content.substring(TASK_STATUS_STARTING_INDEX, TASK_STATUS_ENDING_INDEX));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (content.startsWith(TODO_TASK_TYPE)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDescription \u003d content.substring(TASK_DESCRIPTION_STARTING_INDEX, content.length());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskList.addTask(new ToDo(taskDescription));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (taskStatus \u003d\u003d STATUS_DONE_INDEX) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        taskList.markDone(taskList.getSize());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else if (content.startsWith(EVENT_TASK_TYPE)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDescriptionEndIndex \u003d getTaskDescriptionEndIndex(content);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDateStartIndex \u003d taskDescriptionEndIndex + 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDateEndIndex \u003d content.length() - 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDescription \u003d content.substring(TASK_DESCRIPTION_STARTING_INDEX, taskDescriptionEndIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDate \u003d content.substring(taskDateStartIndex, taskDateEndIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskList.addTask(new Event(taskDescription, taskDate));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskStatus \u003d Integer.parseInt(content.substring(TASK_STATUS_STARTING_INDEX, TASK_STATUS_ENDING_INDEX));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (taskStatus \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        taskList.markDone(taskList.getSize()-1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else if (content.startsWith(DEADLINE_TASK_TYPE)) { //pastRecord has a deadline task and add the deadline to the task list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDescriptionEndIndex \u003d getTaskDescriptionEndIndex(content);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDateStartIndex \u003d taskDescriptionEndIndex + 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDateEndIndex \u003d content.length() - 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDescription \u003d content.substring(TASK_DESCRIPTION_STARTING_INDEX, taskDescriptionEndIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDate \u003d content.substring(taskDateStartIndex, taskDateEndIndex);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskList.addTask(new Deadline(taskDescription, taskDate));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskStatus \u003d Integer.parseInt(content.substring(TASK_STATUS_STARTING_INDEX, TASK_STATUS_ENDING_INDEX));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (taskStatus \u003d\u003d STATUS_DONE_INDEX) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        taskList.markDone(taskList.getSize()-1);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                content \u003d RESET_CONTENT_TO_BE_READ;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Messages.printNoPastRecordMessage();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Saves available tasks in the task list to Duke_output.txt when COMMAND_SAVE is detected."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList Task list which stores different types of tasks."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @throws IOException If failed to write the file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void saveData(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        File file \u003d new File(RECORD_PATH);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file.getAbsoluteFile());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (taskList.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"file close without saving as there is nothing to save!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskList.getTask(i).getStatusIcon().equals(STATUS_DONE_SYMBOL)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    bufferedWriter.write(taskList.getTask(i).saveData() + \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    bufferedWriter.write(taskList.getTask(i).saveData() + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(\"file saved\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Messages.printLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the index of the ending of the task description."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param content Saved input from Duke_output.txt."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return taskDescriptionEndIndex Index of the ending of the task description."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static int getTaskDescriptionEndIndex(String content) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskDescriptionEndIndex;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskDescriptionEndIndex \u003d content.indexOf(TASK_DESCRIPTION_END_INDICATOR);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskDescriptionEndIndex;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 131
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public abstract class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public DukeExceptions() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public abstract void printErrorMessage(String command);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class EmptyTaskDescriptionException extends DukeExceptions {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public EmptyTaskDescriptionException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"\\u2639 \" + \"OOPS!!! The task description cannot be empty.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NoDeadlineTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class NoDeadlineTimeException extends DukeExceptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public NoDeadlineTimeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"\\u2639 \" + \"OOPS!!! The time description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NoEventTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class NoEventTimeException extends DukeExceptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public NoEventTimeException () {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println (\"\\u2639 \" + \"OOPS!!! The time description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class UnknownCommandException extends DukeExceptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void printErrorMessage(String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"\\u2639 \" + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 12
    }
  },
  {
    "path": "src/main/java/duke/messages/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Messages class which deals with user interaction."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String SAD_FACE_EMOJI \u003d \"\\u2639 \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a dotted line to separate the content. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"----------------------------------\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"-------------------------------------------\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a good bye message to the user. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a greeting message to the user. */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printImportingMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printDoneLoadingMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Type [help] to view available commands!\");;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a message to inform the user that the past record has been loaded. */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printDoneLoadingMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Done loading past record onto your task list!\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Updating task status based on past record\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"updating...\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Done updating! Please type \\\"List\\\" to check!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a data loading message to the user. */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printImportingMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Importing data from previous record\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \".\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"please wait :)\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a welcome message to the user. */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printGreeting();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints all available commands to the user. */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printAvailableCommands() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Available Commands:\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"1. list\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"2. done (e.g done 1)\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"3. delete (e.g delete 1)\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"4. todo (e.g todo homework)\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"5. event (e.g event meeting /at monday 2pm)\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"6. deadline (e.g deadline project /by monday 2359)\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"7. find (e.g find monday)\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"8. save\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"9. bye\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"p.s all other inputs will be ignored!\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"Please enter your command:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints a task done message to the user."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param task Task which to be marked done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"  [\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getType()"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"]\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"[\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + task.getStatusIcon()"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"] \" + task.getDescription());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints all stored tasks in the task list."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList TaskList which contains all stored tasks."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(i + 1 + \".[\" + taskList.getTask(i).getType() + \"]\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + \"[\" + taskList.getTask(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    + taskList.getTask(i).getDescription());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints all stored tasks which contain the key word."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList TaskList which contains all stored tasks."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param keyword User defined key word which is to be searched through all tasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printFoundTasks(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int numberOfFoundTasks \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Searching for matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"To perform done or delete command, refer to the task index number\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            if (taskList.getTask(i).getDescriptionForFind().contains(keyword)) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                numberOfFoundTasks++;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                int taskIndex \u003d i+1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                System.out.println(numberOfFoundTasks + \".[\" + taskList.getTask(i).getType() + \"]\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        + \"[\" + taskList.getTask(i).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        + taskList.getTask(i).getDescription()"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        + \" [task index: \" + taskIndex + \"]\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        if (numberOfFoundTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            System.out.println(SAD_FACE_EMOJI + \"There is no matching task with\" + keyword);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user input empty ToDo task. */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyTodoError() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user input empty Event task. */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyEventError() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! The description / date of an event cannot be empty.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user input empty Deadline task. */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyDeadlineError() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! The description / date of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user did not input task number to be deleted. */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyDeleteError() {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI  + \"OOPS!!! The task number to be deleted cannot be empty.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user did not input task number to be marked as done. */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyDoneError() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI  + \"OOPS!!! The task number to be done cannot be empty.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user did not input find key word. */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyFindError() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! The find keyword cannot be empty.\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints a message to indicate a task is added successfully."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList TaskList which contains all stored tasks."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printTaskAddedMessage(TaskList taskList) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"  [\" + taskList.getTask(taskList.getSize()-1).getType() + \"]\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"[\" + taskList.getTask(taskList.getSize()-1).getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + taskList.getTask(taskList.getSize()-1).getDescription());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints a message to indicate a task is added successfully."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList TaskList which contains all stored tasks."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskNumberToDelete Index of task to be deleted."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printTaskDeletedMessage(TaskList taskList, int taskNumberToDelete) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"  [\" + taskList.getTask(taskNumberToDelete - 1).getType()"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                + \"]\" + \"[\" + taskList.getTask(taskNumberToDelete - 1).getStatusIcon() + \"] \" + taskList.getTask(taskNumberToDelete - 1).getDescription());"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskList.deleteTask(taskNumberToDelete - 1);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints an error message when the index of task to be deleted"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * or marked as done is larger than the size of the list."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printIndexOutOfBoundMessage() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"The task number is out of bound! Please type \\\"list\\\"\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Prints an error message when the user input is different from the available commands."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Available commands are as follows:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 1. list"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 2. done (e.g done 1)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 3. delete (e.g delete 1)"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 4. todo (e.g todo homework)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 5. event (e.g event meeting /monday 2pm)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 6. deadline (e.g deadline project /monday 2359)"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 7. find (e.g find monday)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 8. save"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 9. bye"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printInvalidInput() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a message to indicate that there is no task in the list. */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printEmptyListMessage() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"The list is empty\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a message to indicate that the task to be marked as done is already done. */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printTaskAlreadyDoneMessage() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"Chill man, this task is completed!\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints an error message when user input is not following the correct command format. */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printCommandFormatError() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(SAD_FACE_EMOJI + \"OOPS!!! Wrong input format. Please type help to see command examples\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /** Prints a message when Duke_output.txt has no content. */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void printNoPastRecordMessage() {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        System.out.println(\"There is no past record! You are a 1st time user\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        Messages.printLine();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 260
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Deadline class represents a deadline task which consists of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * a task description, task date and a task status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * constructor for Deadline class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Creates an Deadline task with the given task description and given task date,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * and sets the task status to default: false / not done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param description Description of the deadline being created."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param date Date of the deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return deadline description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + \" (\" + date + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return event description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescriptionForFind() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + date ;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the respective task type."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return D Default task type for deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Saves the task in a pre-determined format when writing to a file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return the required format when writing to a file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"D | \" + (isDone? \"1\" : \"0\") + \" | \" + description + \"(\" + date + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 62
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Event class represents an event task which consists of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * a task description, task date and a task status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * constructor for Event class."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Creates an Event task with the given task description and given task date,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * and sets the task status to default: false / not done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param description Description of the event being created."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param date Date of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the event."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return event description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + \" (\" + date + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return event description."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescriptionForFind() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description + date ;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the respective task type."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return E Default task type for event."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Saves the task in a pre-determined format when writing to a file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return the required format when writing to a file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"E | \" + (isDone? \"1\" : \"0\") + \" | \" + description + \"(\" + date + \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 62
    }
  },
  {
    "path": "src/main/java/duke/tasks/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import duke.messages.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Parser class which helps to decode and execute the user command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final int EMPTY_LIST_SIZE \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final int LENGTH_FOR_LIST_COMMAND \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final int LENGTH_FOR_BYE_COMMAND \u003d 3;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String EMPTY_INPUT \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String EMPTY_SPACE \u003d \" \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_HELP \u003d \"help\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String COMMAND_SAVE \u003d \"save\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String SPLITTER_FOR_TASK_DESCRIPTION_AND_DATE \u003d \"/\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String SPLITTER_FOR_DEADLINE_TASK_DESCRIPTION_AND_DATE \u003d \"/by\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String SPLITTER_FOR_EVENT_TASK_DESCRIPTION_AND_DATE \u003d \"/at\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private static boolean isRun \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Parsers the user input and execute the program accordingly."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 1. If the user input is \"list\","
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints an empty list message if there is no task available,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program prints all tasks available in the task list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 2. If the user input is \"bye\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - tasks available are saved to \"Duke_output.txt\" and prints bye message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 3. If the user input contains \"todo\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints empty todo error message if no task description,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program adds a new ToDo task and print task added message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 4. If the user input contains \"event\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints empty event error message if no task description or no task date,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program adds a new Event task and print task added message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 5. If the user input contains \"deadline\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints empty deadline error message if no task description or no task date,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program adds a new Deadline task and print task added message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 6. If the user input contains \"delete\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints empty delete error message if no task index,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints empty list message if there is no task available for deletion,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints index out of bound message if the given index is larger than the task list size,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program removes the task at the given index and print task deleted message."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 7. If the user input contains \"done\","
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints empty done error message if no task index,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints empty list message if there is no task available to be marked as done,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints task already done message if the task at the given index is already done,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints index out of bound message if the given index is larger than the task list size,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program marks the task at the given index as done and print task done message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 8. If the user input contains \"find\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints an empty find message if there is no find keyword,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - or prints a message to indicate no matching task,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - else program prints all tasks containing the keyword."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 9. If the user input is \"help\","
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - prints all available commands for the program."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 10. If the user input is \"save\","
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * - tasks available are saved to \"Duke_output.txt\" and prints file saved message."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * All other inputs are treated as invalid input and program prints invalid input error message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param userInput Input commands from the user."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param taskList TaskList which is used to store a list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static void parser(String userInput, TaskList taskList) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String[] convertedUserInput;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String taskDate;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String findKeyWord;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        convertedUserInput \u003d userInput.trim().split(EMPTY_SPACE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskType \u003d convertedUserInput[0];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            switch (taskType.toLowerCase()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (userInput.trim().length() \u003e LENGTH_FOR_LIST_COMMAND) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printInvalidInput();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else if (taskList.getSize() \u003d\u003d EMPTY_LIST_SIZE) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printEmptyListMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printAllTasks(taskList);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (userInput.trim().length() \u003e LENGTH_FOR_BYE_COMMAND) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printInvalidInput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Storage.saveData(taskList);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printBye();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    isRun \u003d false;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskDescription \u003d userInput.toLowerCase().trim().replace(COMMAND_TODO, EMPTY_INPUT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskDescription.trim().equals(EMPTY_INPUT)) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printEmptyTodoError();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskList.addTask(new ToDo(taskDescription.trim()));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printTaskAddedMessage(taskList);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskDescription \u003d userInput.toLowerCase().trim().replace(COMMAND_EVENT, EMPTY_INPUT);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskDescription.contains(SPLITTER_FOR_EVENT_TASK_DESCRIPTION_AND_DATE)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    int splitterIndex;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    splitterIndex \u003d taskDescription.indexOf(SPLITTER_FOR_TASK_DESCRIPTION_AND_DATE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    String correctedTaskDescription;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    correctedTaskDescription \u003d taskDescription.substring(0, splitterIndex);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDate \u003d taskDescription.substring(splitterIndex + 3, taskDescription.length());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (correctedTaskDescription.trim().equals(EMPTY_INPUT) || taskDate.trim().equals(EMPTY_INPUT)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        Messages.printEmptyEventError();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            taskList.addTask(new Event(correctedTaskDescription.trim(), taskDate.trim()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printTaskAddedMessage(taskList);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        } catch (StringIndexOutOfBoundsException s) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printEmptyEventError();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printCommandFormatError();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                taskDescription \u003d userInput.toLowerCase().trim().replace(COMMAND_DEADLINE, EMPTY_INPUT);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (taskDescription.contains(SPLITTER_FOR_DEADLINE_TASK_DESCRIPTION_AND_DATE)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    int splitterIndex;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    splitterIndex \u003d taskDescription.indexOf(SPLITTER_FOR_TASK_DESCRIPTION_AND_DATE);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    String correctedTaskDescription;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    correctedTaskDescription \u003d taskDescription.substring(0, splitterIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    taskDate \u003d taskDescription.substring(splitterIndex + 3, taskDescription.length());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (correctedTaskDescription.trim().equals(EMPTY_INPUT) || taskDate.trim().equals(EMPTY_INPUT)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        Messages.printEmptyEventError();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            taskList.addTask(new Deadline(correctedTaskDescription.trim(), taskDate.trim()));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printTaskAddedMessage(taskList);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        } catch (StringIndexOutOfBoundsException s) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printEmptyEventError();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printCommandFormatError();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (taskList.getSize() \u003d\u003d EMPTY_LIST_SIZE) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        Messages.printEmptyListMessage();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        taskIndex \u003d getTaskIndex(convertedUserInput[1]);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        if (taskIndex \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printIndexOutOfBoundMessage();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printTaskDeletedMessage(taskList, taskIndex);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printEmptyDeleteError();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    if (taskList.getSize() \u003d\u003d EMPTY_LIST_SIZE) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        Messages.printEmptyListMessage();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        taskIndex \u003d getTaskIndex(convertedUserInput[1]);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        if (taskIndex \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printIndexOutOfBoundMessage();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        } else if (taskList.getTask(taskIndex - 1).isDone) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printTaskAlreadyDoneMessage();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            taskList.getTask(taskIndex - 1).makeAsDone();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                            Messages.printDoneMessage(taskList.getTask(taskIndex - 1));"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } catch (NumberFormatException n) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printEmptyDoneError();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_FIND:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                findKeyWord \u003d userInput.toLowerCase().trim().replace(COMMAND_FIND, EMPTY_INPUT);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                if (findKeyWord.trim().equals(EMPTY_INPUT)) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printEmptyFindError();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                    Messages.printFoundTasks(taskList, findKeyWord.trim());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_HELP:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                Messages.printAvailableCommands();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            case COMMAND_SAVE:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                Storage.saveData(taskList);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                Messages.printInvalidInput();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | IOException a) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "            Messages.printCommandFormatError();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns a task index which will be used for task deletion or marking the task done."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param input User input for the program."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return index Task index which is used for task deletion or marking done."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static int getTaskIndex(String input) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        String convertedInput;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        convertedInput \u003d input.replaceAll(\"[^0-9]\", \"\");//replace all non-number with space"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        index \u003d Integer.parseInt(convertedInput);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the status of the program."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * The program will keep taking user input unless COMMAND_BYE is detected."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return isRun Status tracker for the program."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static boolean getRunStatus() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return isRun;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 240
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * Task class represents a task which consists of a task description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * and a task status isDone."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String STATUS_DONE \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public static final String STATUS_UNDONE \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * constructor for Task class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Creates a Task with the given task description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * and sets the task status to default: false / not done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param description Description of the task being created."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the task status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return isDone Tick symbol when isDone is true and cross symbol when isDone is false."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return (isDone ? STATUS_DONE : STATUS_UNDONE); //return tick or cross symbols"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the respective task type."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Will be overridden by different task type."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns T is task is todo type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns E if task is event type."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns D if task is deadline type."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return T Default task type for task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the task status as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return isDone Task status is updated to done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public boolean makeAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return description Task description."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return description Task description."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String getDescriptionForFind() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Saves the task in a pre-determined format when writing to a file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Will be overridden by the type of tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return null"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 84
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * TaskList class represents a list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * constructor for TaskList class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Creates a taskList consists of an array of Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Adds a given type of task to the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Types of task available:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 1.ToDo"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 2.Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * 3.Deadline"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param t Any type of above-mentioned task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Removes a specific task from the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param index Index of the task to be removed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Marks a specific task from the task list as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param index Index of the task to be marked as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public void markDone(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        taskList.get(index).makeAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns the total number of tasks available in the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return number of tasks in the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Returns a specific task from the task list as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param index Index of the task to be returned."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return the task at the given index."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 69
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * ToDo class represents a todo task which consists of"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " * a task description and a task status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * constructor for ToDo class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Creates a ToDo task with the given task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * and sets the task status to default: false / not done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @param description Description of the task being created."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * Saves the task in a pre-determined format when writing to a file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     * @return the required format when writing to a file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "        return \"T | \" + (isDone? \"1\" : \"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "asdhaksdhj"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo reading"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo watching drama"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "event win toto/tmr"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "deadline win toto/tmr"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "todo againah?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "REM compile the code into the bin folder; Compiling all the .java files in the directory"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java ..\\src\\main\\java\\duke\\messages\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LIU-YiFeng-1"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LIU-YiFeng-1": 5,
      "-": 18
    }
  }
]
