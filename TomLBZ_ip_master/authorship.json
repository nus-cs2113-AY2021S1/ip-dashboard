[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][✘] this is a demo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][✘] this is another demo (at: shit)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[D][✘] ok fine (by: god knows)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][✘] e (at: 7:00am)"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UnknownAction;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.Action;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Command implements Help {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode args;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode[] flattenedArgs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private HelpText helpText;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Action action;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String result \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Command(ParamNode args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        name \u003d args.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        flattenedArgs \u003d new ParamNode[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (args.thisData !\u003d null) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        helpText \u003d Constants.helpMap.getOrDefault(name, HelpText.UNKNOWN); // later change to help."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        initiateAction();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private boolean isArgsValid() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String targetArg \u003d Constants.paramMap.get(name);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (targetArg \u003d\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true; // does not need any parameter"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (ParamNode node: flattenedArgs) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (targetArg.equals(node.name)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void initiateAction() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        action \u003d Constants.actionMap.getOrDefault(name, new UnknownAction());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void execute(TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isArgsValid()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                action.prepare(args);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result \u003d action.act(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder(Constants.INVALID);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String string: getSyntax()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(string).append(Constants.TAB);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d builder.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result.equals(Constants.messageMap.get(Constants.BYE));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return helpText.description;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] getSyntax() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return helpText.syntax;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] getUsages() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return helpText.usages;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return helpText.toString();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return args.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 98
    }
  },
  {
    "path": "src/main/java/command/Help.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public interface Help {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getName();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getDescription();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] getSyntax();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] getUsages();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getHelp();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 15
    }
  },
  {
    "path": "src/main/java/command/HelpText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public enum HelpText {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    BYE("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"bye\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Quit the program\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"bye\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"bye\\\" \u003e\u003e quits the program\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    CLEAR("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"clear\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Clear the task list\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"clear\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"clear\\\" \u003e\u003e clears the task list\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DEADLINE("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"deadline\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Add a deadline to the task list\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"deadline [description] /by [time]\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"deadline ddl /by 5:00pm\\\" \u003e\u003e adds a deadline with description \\\"ddl\\\" and time \\\"5:00pm\\\"\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DELETE("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"delete\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Delete a task from the task list\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"delete [index]\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"delete 1\\\" \u003e\u003e deletes the task with index 1 from the task list\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DONE("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"done\","
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Mark a task as done\","
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"done [index]\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"done 1\\\" \u003e\u003e marks the task with index 1 as done\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    EVENT("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"event\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Add an event to the task list\","
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"event [description] /at [time]\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"event e /at 7:00am\\\" \u003e\u003e adds an event with description \\\"e\\\" and time \\\"7:00am\\\"\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    HELP("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"help\","
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Print the list of available commands, or print the details of a specified command\","
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"help [target]\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"target: the name of the target command\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"help\\\" \u003e\u003e prints the list of available commands\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"2. \\\"help event\\\" \u003e\u003e prints the details of the \\\"event\\\" command\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LIST("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"list\","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Print a list of all added tasks\","
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"list\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"list\\\" \u003e\u003e list all added tasks\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    TODO("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"todo\","
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Add a todo to the task list\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"todo [description]\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"1. \\\"todo class\\\" \u003e\u003e adds a todo with description \\\"class\\\"\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNDONE("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"undone\","
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Mark a task as undone\","
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"undone [index]\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"undone 1\\\" \u003e\u003e marks the task with index 1 as undone\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNKNOWN("
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"unknown\","
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            \"Prints the error message for an unrecognized command\","
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"unknown\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            },"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            new String[]{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"1. \\\"unknown\\\" \u003e\u003e prints \\\"OOPS, I don\u0027t know what that means :-( Try \\\"help\\\"!\\\"\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] syntax;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] usages;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    HelpText(String name, String description, String[] syntax, String[] usages) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.syntax \u003d syntax;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.usages \u003d usages;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String arrayToString(String[] input) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String string: input) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(string).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder(\"Name:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stringBuilder.append(Constants.SPACE).append(name).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stringBuilder.append(\"Description:\").append(Constants.SPACE).append("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                description).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stringBuilder.append(\"Syntax:\").append(Constants.WIN_NEWLINE).append(arrayToString(syntax));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        stringBuilder.append(\"Usages:\").append(Constants.WIN_NEWLINE).append(arrayToString(usages));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 139
    }
  },
  {
    "path": "src/main/java/command/Lexer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Lexer {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String getCommand(String s, int i) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int j \u003d i;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (j \u003c s.length()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (Character.isLetter(s.charAt(j))) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return s.substring(i, j);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String getAtom(String s, int i) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int j \u003d i;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (j \u003c s.length()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            char c \u003d s.charAt(j);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (c !\u003d Constants.CHAR_SPACE \u0026\u0026 c !\u003d Constants.CMD_END) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return s.substring(i, j);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cToken\u003e analyze(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cToken\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String inString \u003d input.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isCommand \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 0; i \u003c inString.length(); ) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            char c \u003d inString.charAt(i);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            switch (c) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            case Constants.LPAREN:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result.add(new Token(Types.LPA, c));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            case Constants.RPAREN:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result.add(new Token(Types.RPN, c));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            case Constants.CHAR_SPACE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            case Constants.PARAM:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String command \u003d getCommand(inString, i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i +\u003d command.length();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result.add(new Token(Types.PAR, command));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            case Constants.CMD_END:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result.add(new Token(Types.END, c));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isCommand \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            default:    //atom or cmd"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String atom \u003d getAtom(inString, i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                i +\u003d atom.length();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (isCommand) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    result.add(new Token(Types.COM, atom));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isCommand \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    result.add(new Token(Types.STR, atom));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 77
    }
  },
  {
    "path": "src/main/java/command/ParamNode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ParamNode {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode thisData;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode nextData;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode(ArrayList\u003cToken\u003e tokens) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cToken\u003e tokensClone \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (Token token: tokens) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tokensClone.add(new Token(token.token, token.string));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Token head \u003d tokensClone.get(0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tokensClone.remove(head);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int splitIndex \u003d splitIndex(tokensClone, head.token);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cToken\u003e thisTokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cToken\u003e nextTokens \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        name \u003d head.string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (splitIndex \u003c 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            nextTokens.addAll(tokensClone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (int i \u003d 0; i \u003c tokensClone.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (i \u003c\u003d splitIndex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    thisTokens.add(tokensClone.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    nextTokens.add(tokensClone.get(i));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (thisTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            thisData \u003d new ParamNode(thisTokens);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            thisData \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Token endToken \u003d nextTokens.get(0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            while (endToken.token.equals(Types.END)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                nextTokens.remove(endToken);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    endToken \u003d nextTokens.get(0);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (nextTokens.size() \u003e 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            nextData \u003d new ParamNode(nextTokens);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            nextData \u003d null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ParamNode(String name, ParamNode thisData, ParamNode nextData) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.thisData \u003d thisData;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.nextData \u003d nextData;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int splitIndex(ArrayList\u003cToken\u003e tokens, Types type) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isString \u003d type.equals(Types.STR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for ( ; i \u003c tokens.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Token token \u003d tokens.get(i);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (type.equals(Types.STR)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (!token.token.equals(Types.STR)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    return i - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (token.token.equals(type) || token.token.equals(Types.END)) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    return i - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return i - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String shiftTab(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] strings \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String string: strings) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(Constants.TAB).append(string).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toFlatString() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String myName \u003d name \u003d\u003d null ? \"\" : name + \" \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String nextName \u003d thisData \u003d\u003d null ? \"\" : thisData.toFlatString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return (myName + nextName).trim();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (thisData !\u003d null) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            data \u003d \" {\" + Constants.WIN_NEWLINE + shiftTab(thisData.toString()) + \"}\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String next \u003d nextData \u003d\u003d null ? \"\" : Constants.WIN_NEWLINE + nextData.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return name + data + next;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cParamNode\u003e flatten() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cParamNode\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        output.add(new ParamNode(name, thisData, nextData));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ParamNode nextNode \u003d output.get(index).nextData;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (nextNode !\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output.get(index).nextData \u003d null;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output.add(new ParamNode(nextNode.name, nextNode.thisData, nextNode.nextData));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            nextNode \u003d nextNode.nextData;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 121
    }
  },
  {
    "path": "src/main/java/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Lexer lexer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lexer \u003d new Lexer();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cCommand\u003e parseTree(ArrayList\u003cToken\u003e input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ParamNode node \u003d new ParamNode(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cParamNode\u003e flattened \u003d node.flatten();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cCommand\u003e commands \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (ParamNode args: flattened) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            commands.add(new Command(args));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cCommand\u003e parse(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return parseTree(lexer.analyze(input));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 27
    }
  },
  {
    "path": "src/main/java/command/Token.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Token {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Types token;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public final String string;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Token(Types t, char c) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.token \u003d t;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.string \u003d Character.toString(c);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Token(Types t, String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.token \u003d t;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.string \u003d s;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void changeType(Types newType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.token \u003d newType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (token \u003d\u003d Types.STR) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return \"STR\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (token \u003d\u003d Types.PAR) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return \"PAR\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (token \u003d\u003d Types.COM) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return \"COM\\t\u003c\" + string + \"\u003e\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return token.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 32
    }
  },
  {
    "path": "src/main/java/command/Types.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public enum Types {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LPA,    //left parenthesis"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    RPN,    //right parenthesis"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    STR,    //string"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    PAR,    //parameter indicator"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    COM,    //command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    END,    //line end"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    ATM,    //atomic"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 11
    }
  },
  {
    "path": "src/main/java/command/action/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected ParamNode args;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected ParamNode[] flattenedArgs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isExiting \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Action() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        args \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Action(ParamNode args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        prepare(args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.messageMap.getOrDefault(args.name, Constants.INVALID);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        flattenedArgs \u003d new ParamNode[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (args.thisData !\u003d null) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            flattenedArgs \u003d args.thisData.flatten().toArray(flattenedArgs);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String replaceStrings(String source, String text, int count) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String output \u003d source.replace(Constants.TEXT_PLACEHOLDER, text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output.replace(Constants.NUMBER_PLACEHOLDER, String.valueOf(count));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected int getIndex(String input) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int index \u003d -1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (input.length() !\u003d 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        char character \u003d input.toCharArray()[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Character.isDigit(character)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            index \u003d Integer.parseInt(input) - 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Character.isLetter(character)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            character \u003d Character.toUpperCase(character);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            index \u003d (int)character - Constants.LETTER_OFFSET - 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            index \u003d -1;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 54
    }
  },
  {
    "path": "src/main/java/command/action/ByeAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ByeAction extends Action {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ByeAction() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isExiting \u003d true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 12
    }
  },
  {
    "path": "src/main/java/command/action/ClearAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ClearAction extends Action {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.tasks.clear();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return super.act(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14
    }
  },
  {
    "path": "src/main/java/command/action/DeadlineAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class DeadlineAction extends Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Deadline ddl \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.tasks.add(ddl);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, ddl.toString(), tasks.tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        by \u003d flattenedArgs[1].thisData.toFlatString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 26
    }
  },
  {
    "path": "src/main/java/command/action/DeleteAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class DeleteAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.tasks.size()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Task task \u003d tasks.tasks.get(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.tasks.remove(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, task.toString(), tasks.tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 28
    }
  },
  {
    "path": "src/main/java/command/action/DoneAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class DoneAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Task task \u003d tasks.tasks.get(index);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return result.replace(Constants.TEXT_PLACEHOLDER, task.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 29
    }
  },
  {
    "path": "src/main/java/command/action/EventAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class EventAction extends Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Event event \u003d new Event(description, at);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.tasks.add(event);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, event.toString(), tasks.tasks.size());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        at \u003d flattenedArgs[1].thisData.toFlatString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d flattenedArgs[0].toFlatString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 26
    }
  },
  {
    "path": "src/main/java/command/action/HelpAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.HelpText;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class HelpAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    boolean isDetailed \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    HelpText helpText \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isDetailed \u0026\u0026 helpText !\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return helpText.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (HelpText help: HelpText.values()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                builder.append(\"Command: \").append(help.name).append(Constants.TAB).append(Constants.TAB).append("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        \"Description: \").append(help.description).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(Constants.HELP_PROMPT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return builder.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (flattenedArgs.length \u003e 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String target \u003d flattenedArgs[0].name;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (target !\u003d null) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isDetailed \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                helpText \u003d Constants.helpMap.get(target);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 39
    }
  },
  {
    "path": "src/main/java/command/action/ListAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ListAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.indexOption \u003d MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (Task task: tasks.tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            builder.append(task.toString()).append(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return builder.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 20
    }
  },
  {
    "path": "src/main/java/command/action/TodoAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class TodoAction extends Action {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.tasks.add(todo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return replaceStrings(result, todo.toString(), tasks.tasks.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d args.thisData.toFlatString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 24
    }
  },
  {
    "path": "src/main/java/command/action/UndoneAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UndoneAction extends Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Task task \u003d tasks.tasks.get(index);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDEX_OUT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            task.markAsUndone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String result \u003d super.act(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return result.replace(Constants.TEXT_PLACEHOLDER, task.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void prepare(ParamNode args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super.prepare(args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        index \u003d getIndex(args.thisData.name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 29
    }
  },
  {
    "path": "src/main/java/command/action/UnknownAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package command.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.ParamNode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UnknownAction extends Action{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String act(TaskList tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.messageMap.getOrDefault(Constants.UNKNOWN, Constants.INVALID);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.Help;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.Action;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ByeAction;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ClearAction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DeadlineAction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DeleteAction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.DoneAction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.EventAction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.HelpAction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.ListAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.TodoAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UndoneAction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.action.UnknownAction;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.HelpText;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final char LPAREN \u003d \u0027(\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final char RPAREN \u003d \u0027)\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final char PARAM \u003d \u0027/\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final char CMD_END \u003d \u0027;\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final char CHAR_SPACE \u003d \u0027 \u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String LINE_UNIT \u003d \"_\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DOT \u003d \".\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_LEFT \u003d \"[\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_RIGHT \u003d \"]\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_LEFT \u003d \"(\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_RIGHT \u003d \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TODO_ICON \u003d ICON_LEFT + \"T\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String EVENT_ICON \u003d ICON_LEFT + \"E\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DDL_ICON \u003d ICON_LEFT + \"D\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_SIGNATURE \u003d ICON_RIGHT + ICON_LEFT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT + ICON_LEFT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BODY_SIGNATURE \u003d ICON_RIGHT + SPACE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BODY_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_SIGNATURE \u003d SPACE + PARAM_LEFT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_SEPARATOR \u003d LINE_UNIT + PARAM_LEFT;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DETAILS_SIGNATURE \u003d \": \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TICK_ICON \u003d ICON_LEFT + TICK + ICON_RIGHT;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CROSS_ICON \u003d ICON_LEFT + CROSS + ICON_RIGHT;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String RETURN \u003d \"\\r\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String WIN_NEWLINE \u003d RETURN + NEWLINE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ZERO_LENGTH_STRING \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TEXT_PLACEHOLDER \u003d \"_t_\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NUMBER_PLACEHOLDER \u003d \"_n_\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String FILENAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String HELP \u003d \"help\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String UNDONE \u003d \"undone\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String UNKNOWN \u003d \"unknown\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String INDEX_OUT \u003d \"Index out of range.\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ADDED \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String REMOVED \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String COUNT_PREFIX \u003d \"Now you have \";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String COUNT_SUFFIX \u003d \" tasks in the list.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CHANGED \u003d Constants.WIN_NEWLINE + Constants.TEXT_PLACEHOLDER"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            + Constants.WIN_NEWLINE + Constants.COUNT_PREFIX + Constants.NUMBER_PLACEHOLDER"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            + Constants.COUNT_SUFFIX;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String INVALID \u003d \"Invalid Command! Please check the syntax.\" + WIN_NEWLINE;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String WELCOME \u003d \"Hello, I\u0027m Duke. What can I do for you?\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String HELP_PROMPT \u003d \"Use \\\"help [target]\\\" to see details :) Try \\\"help help\\\"!\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int LINE_REPETITION \u003d 60;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int NO_INDENT \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_1 \u003d 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_2 \u003d 2;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_3 \u003d 3;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int LETTER_OFFSET \u003d 64;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, Action\u003e actionMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(BYE, new ByeAction()),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(CLEAR, new ClearAction()),"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, new DeadlineAction()),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DELETE, new DeleteAction()),"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DONE, new DoneAction()),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, new EventAction()),"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(HELP, new HelpAction()),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(LIST, new ListAction()),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TODO, new TodoAction()),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNDONE, new UndoneAction()),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, new UnknownAction()));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, HelpText\u003e helpMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(BYE, HelpText.BYE),"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(CLEAR, HelpText.CLEAR),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, HelpText.DEADLINE),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DELETE, HelpText.DELETE),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DONE, HelpText.DONE),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, HelpText.EVENT),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(HELP, HelpText.HELP),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(LIST, HelpText.LIST),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TODO, HelpText.TODO),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNDONE, HelpText.UNDONE),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, HelpText.UNKNOWN));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, String\u003e paramMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, \"by\"),"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, \"at\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final Map\u003cString, String\u003e messageMap \u003d Map.ofEntries("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(BYE,\"Bye. Hope to see you again soon!\"),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(CLEAR, \"Nice! I\u0027ve cleared everything in the list.\"),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DEADLINE, Constants.ADDED + Constants.CHANGED),"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DELETE, Constants.REMOVED + Constants.CHANGED),"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(DONE, \"Nice! I\u0027ve marked this task as done:\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + Constants.WIN_NEWLINE + Constants.TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(EVENT, Constants.ADDED + Constants.CHANGED),"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(HELP, Constants.TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(LIST, Constants.TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(TODO, Constants.ADDED + Constants.CHANGED),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNDONE, \"Nice! I\u0027ve marked this task as undone:\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    + Constants.WIN_NEWLINE + Constants.TEXT_PLACEHOLDER),"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Map.entry(UNKNOWN, \"OOPS, I don\u0027t know what that means :-( Try \\\"help\\\"!\"));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 124
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import io.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final UI ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Duke(String directory, String fileName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        storage \u003d new Storage(directory, fileName, parser);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ui.showText(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String fullCommand \u003d ui.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                ArrayList\u003cCommand\u003e commands \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (Command c: commands) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    c.execute(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    ui.update(c.result, tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    storage.saveTasks(tasks.tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                ui.showText(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        new Duke(Constants.PATH, Constants.FILENAME).run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageOptions indexOption;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        indexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void loadList(ArrayList\u003cTask\u003e input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 21
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageWrapper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Scanner inputGetter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private MessageFormat msgFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private MessageWrapper msgWrapper;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        inputGetter \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgFormat \u003d new MessageFormat(new MessageOptions[]{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_INDENT_1,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_BEFORE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.INDENTED_2,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.AUTO_RETURN,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_AFTER"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper \u003d new MessageWrapper(Constants.LINE_REPETITION, Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(Constants.WELCOME, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void showText(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] lines \u003d input.split(Constants.WIN_NEWLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(lines, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void update(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (input \u003d\u003d null || input.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            msgFormat.addMessageOption(tasks.indexOption);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            showText(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            msgFormat.removeMessageOption(tasks.indexOption);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        tasks.indexOption \u003d MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return inputGetter.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 51
    }
  },
  {
    "path": "src/main/java/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class InvalidCommandException extends CommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UnknownCommandException extends CommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/io/FileLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FileLoader extends IO {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FileLoader(String path, String fileName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String[] loadAllLines() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] lines \u003d new String[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            lines \u003d Files.readAllLines("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Paths.get(path + \"/\" + fileName), StandardCharsets.UTF_8).toArray(lines);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return lines;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 27
    }
  },
  {
    "path": "src/main/java/io/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FileSaver extends IO{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FileSaver(String path, String fileName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder strBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                strBuilder.append(task.toString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Files.writeString("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Paths.get(path + \"/\" + fileName),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    strBuilder.toString(), StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean save(String string) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Files.writeString(Paths.get(path + \"/\" + fileName),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    string, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 43
    }
  },
  {
    "path": "src/main/java/io/IO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class IO {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public IO(String path, String fileName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean isFileInvalid()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throws IOException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isValidated \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        File path \u003d new File(this.path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!path.exists() || !path.isDirectory()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isValidated \u003d path.mkdirs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        File file \u003d new File(this.path + \"/\" + this.fileName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!file.exists() || !file.isFile()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isValidated \u003d isValidated \u0026\u0026 file.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return !isValidated;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 30
    }
  },
  {
    "path": "src/main/java/io/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private FileLoader loader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private FileSaver saver;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Storage(String directory, String fileName, Parser parser) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        loader \u003d new FileLoader(directory, fileName);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        saver \u003d new FileSaver(directory, fileName);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        saver.save(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] lines \u003d loader.loadAllLines();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (String line: lines) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String output \u003d dataToCommand(line, index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (!output.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ArrayList\u003cCommand\u003e commands \u003d parser.parse(output);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Command c: commands) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                c.execute(list);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String dataToCommand(String input, int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String output \u003d Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String iconCleared \u003d input.replace(Constants.ICON_SIGNATURE, Constants.ICON_SEPARATOR);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] iconSeparated \u003d iconCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        switch (iconSeparated[0]) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.TODO_ICON:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output \u003d Constants.TODO + Constants.SPACE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.EVENT_ICON:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output \u003d Constants.EVENT + Constants.SPACE;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.DDL_ICON:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output \u003d Constants.DEADLINE + Constants.SPACE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return output; //break is unreachable"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String statusCleared \u003d iconSeparated[1].replace(Constants.BODY_SIGNATURE, Constants.BODY_SEPARATOR);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] statusSeparated \u003d statusCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (statusSeparated[0].equals(Constants.TICK_ICON)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String bodyCleared \u003d statusSeparated[1].replace(Constants.PARAM_SIGNATURE, Constants.PARAM_SEPARATOR);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] bodySeparated \u003d bodyCleared.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (bodySeparated.length \u003d\u003d 1) { // no params"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output +\u003d bodyCleared;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output +\u003d bodySeparated[0] + Constants.SPACE;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String params \u003d bodySeparated[1].replace(Constants.PARAM_LEFT, Constants.ZERO_LENGTH_STRING).replace("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Constants.PARAM_RIGHT,Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output +\u003d Constants.PARAM + params.replace(Constants.DETAILS_SIGNATURE, Constants.SPACE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            output +\u003d Constants.CMD_END + Constants.DONE + Constants.SPACE + (index + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 82
    }
  },
  {
    "path": "src/main/java/jobs/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.DDL_ICON + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 17
    }
  },
  {
    "path": "src/main/java/jobs/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.EVENT_ICON + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 17
    }
  },
  {
    "path": "src/main/java/jobs/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return (isDone ? Constants.TICK : Constants.CROSS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void markAsUndone(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 30
    }
  },
  {
    "path": "src/main/java/jobs/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ToDo(String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 14
    }
  },
  {
    "path": "src/main/java/messages/MessageFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class MessageFormat {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final ArrayList\u003cMessageOptions\u003e messageOptionsList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageFormat(MessageOptions[] options){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(options));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void addMessageOption(MessageOptions option){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList.add(option);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void removeMessageOption(MessageOptions option){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList.remove(option);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageOptions[] getMessageOptions(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageOptions[] output \u003d new MessageOptions[messageOptionsList.size()];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return messageOptionsList.toArray(output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 25
    }
  },
  {
    "path": "src/main/java/messages/MessageOptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public enum MessageOptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_1,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_2,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_3,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_BEFORE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_1,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_2,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_3,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    NOT_INDEXED,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDEXED_NUM,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDEXED_ABC,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    AUTO_RETURN,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_AFTER"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16
    }
  },
  {
    "path": "src/main/java/messages/MessageWrapper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class MessageWrapper {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String lineBase;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageWrapper(int length, String baseUnit){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        setLineBase(length, baseUnit);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void setLineBase(int length, String baseUnit){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lineBase \u003d baseUnit.repeat(length);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String wrap(String input, MessageOptions[] options){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return wrap(new String[]{input}, options);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String wrap(String[] inputs, MessageOptions[] options){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isLineBefore \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_BEFORE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isLineAfter \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_AFTER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isAutoReturn \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.AUTO_RETURN);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageOptions indexOption \u003d getIndexOption(options);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int lineIndent \u003d getLineIndent(options);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int textIndent \u003d getTextIndent(options);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isLineBefore){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for(int i \u003d 0; i \u003c inputs.length; i++){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildMessage("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    textIndent, index, inputs[i], isAutoReturn, indexOption));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isLineAfter){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(String[] inputs, MessageOptions[] options){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        System.out.print(wrap(inputs, options));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(String input, MessageOptions[] options){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        System.out.print(wrap(input, options));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int getLineIndent(MessageOptions[] options){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_1)){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_2)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_3)){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int getTextIndent(MessageOptions[] options){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDENTED_1)){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_2)){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_3)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private MessageOptions getIndexOption(MessageOptions[] options){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDEXED_NUM)){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDEXED_ABC)){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return MessageOptions.INDEXED_ABC;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String buildLine(int lineIndent, String lineBase){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.TAB.repeat(lineIndent) +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                lineBase + Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String buildMessage(int indent, int index, String message,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            boolean isAutoReturn, MessageOptions indexOption){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String formattedMessage \u003d Constants.TAB.repeat(indent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if(index \u003e 0){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if(indexOption \u003d\u003d MessageOptions.INDEXED_NUM){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formattedMessage +\u003d index + Constants.DOT;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else if (indexOption \u003d\u003d MessageOptions.INDEXED_ABC){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formattedMessage +\u003d (char)(index +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        Constants.LETTER_OFFSET) + Constants.DOT;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        formattedMessage +\u003d message;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isAutoReturn){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            formattedMessage +\u003d Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return formattedMessage;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 107
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][✘] task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][✘] do stuff (at:  2)"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "deadline ddl /by 10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "event /at 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "event do stuff /at 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "undone A"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "undone c"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\exceptions\\*.java ..\\src\\main\\java\\jobs\\*.java ..\\src\\main\\java\\messages\\*.java ..\\src\\main\\java\\io\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2,
      "-": 19
    }
  }
]
