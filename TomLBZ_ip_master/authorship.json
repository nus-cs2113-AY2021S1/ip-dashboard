[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][✓] bbdbc"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][✘] cahvcbj"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2
    }
  },
  {
    "path": "src/main/java/duke/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.EmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageWrapper;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final MessageFormat format;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final MessageWrapper wrapper;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final CommandParser parser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String result \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private boolean isUpdatable \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public CommandHandler(CommandParser parser, MessageFormat format, MessageWrapper wrapper){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.format \u003d format;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.wrapper \u003d wrapper;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean isPendingUpdate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return isUpdatable;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void updateStatus(boolean success) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isUpdatable \u003d !success;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getCommandResult() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cTask\u003e getAddedTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String[] getCommandStrings(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] commands \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            commands[i] \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return commands;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private static String[] getAddTaskMessage(String description, int count) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"Got it. I\u0027ve added this task\","
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formatListCount(count)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        };"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private static String[] getRemoveTaskMessage(String description, int count) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\","
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                description,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formatListCount(count)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private static String formatListCount(int count) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return \"Now you have \" + count + \" tasks in the list.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private static int getListedIndex(String parameter) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (parameter.length() !\u003d 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        char character \u003d parameter.toCharArray()[0];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Character.isDigit(character)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Integer.parseInt(parameter) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Character.isLetter(character)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            character \u003d Character.toUpperCase(character);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return (int)character - Constants.LETTER_OFFSET - 1;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Task getTask("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            MessageFormat msgFormat, CommandParser cmdParser,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            MessageWrapper msgWrapper, ArrayList\u003cTask\u003e addedTasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int index \u003d getListedIndex(cmdParser.getParameter());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d addedTasks.size()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            msgWrapper.show("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    \"Index out of range.\","
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return addedTasks.get(index);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void handleException(Exception e, Commands flag) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String unknown \u003d \"x_x OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String illegal \u003d \"x_x OOPS!!! The \\\"_SIGN_\\\" parameter of the _NAME_ command is missing.\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String empty \u003d \"x_x OOPS!!! The parameter \\\"_SIGN_\\\" cannot be empty.\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String missing \u003d \"x_x OOPS!!! The description of the \\\"_NAME_\\\" command cannot be empty.\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (e instanceof EmptyCommandException) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    empty.replace(\"_SIGN_\", flag.SIGN.trim()),"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (e instanceof IllegalCommandException) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    illegal.replace(\"_SIGN_\", flag.SIGN.trim())"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                            .replace(\"_NAME_\", flag.NAME.trim()),"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (e instanceof MissingDescriptionException) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    missing.replace(\"_NAME_\",flag.NAME.trim()),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (e instanceof UnknownCommandException) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap(unknown, format.getMessageOptions());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    new String[]{\"An unknown Exception has occurred.\", e.getMessage()},"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean handleCommand(String userInput) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            parser.parse(userInput);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            handleException(e, parser.getFlag());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true; //although there is exception, still should continue."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Commands flag \u003d parser.getFlag();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (flag \u003d\u003d null) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true; //although no flag, still should continue."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String doTaskPrefix \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String undoTaskPrefix \u003d \"Nice! I\u0027ve marked this task as undone:\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String cleared \u003d \"Nice! I\u0027ve cleared everything in the list.\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String bye \u003d \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        switch (flag) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] commands \u003d getCommandStrings(tasks);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            format.addMessageOption(MessageOptions.INDEXED_NUM);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap(commands, format.getMessageOptions());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            format.removeMessageOption(MessageOptions.INDEXED_NUM);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap(bye, format.getMessageOptions());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return false; //break is unreachable"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Task task \u003d getTask(format, parser, wrapper, tasks);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (task !\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        new String[]{ doTaskPrefix, task.toString()},"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        format.getMessageOptions());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isUpdatable \u003d true;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case UNDONE:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Task taskDone \u003d getTask(format, parser, wrapper, tasks);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (taskDone !\u003d null) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                taskDone.markAsUndone();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        new String[]{ undoTaskPrefix, taskDone.toString()},"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        format.getMessageOptions());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isUpdatable \u003d true;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Task taskToRemove \u003d getTask(format, parser, wrapper, tasks);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (taskToRemove !\u003d null) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                tasks.remove(taskToRemove);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        getRemoveTaskMessage(taskToRemove.toString(), tasks.size()),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        format.getMessageOptions());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                isUpdatable \u003d true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case CLEAR:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks.clear();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap(cleared, format.getMessageOptions());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isUpdatable \u003d true;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            ToDo todo \u003d new ToDo(userInput);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks.add(todo);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    getAddTaskMessage(todo.toString(), tasks.size()),"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isUpdatable \u003d true;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Deadline ddl \u003d new Deadline(userInput);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks.add(ddl);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    getAddTaskMessage(ddl.toString(), tasks.size()),"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isUpdatable \u003d true;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Event event \u003d new Event(userInput);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            tasks.add(event);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            result \u003d wrapper.wrap("
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    getAddTaskMessage(event.toString(), tasks.size()),"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    format.getMessageOptions());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isUpdatable \u003d true;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 220
    }
  },
  {
    "path": "src/main/java/duke/CommandParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.EmptyCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.MissingDescriptionException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import exceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class CommandParser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private Commands flag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String parameter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public CommandParser(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        flag \u003d Commands.UNKNOWN;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        parameter \u003d Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void parse(String rawInput) throws"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            EmptyCommandException, IllegalCommandException,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            UnknownCommandException, MissingDescriptionException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (rawInput \u003d\u003d null) return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] input \u003d rawInput.split(Constants.SPACE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        updateFlag(input[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        parameter \u003d Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (flag.isNeedParameter()){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if(rawInput.contains(flag.SIGN)){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String[] splitInput \u003d rawInput.split(flag.SIGN);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (splitInput.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new EmptyCommandException(flag);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                parameter \u003d splitInput[1].trim();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (parameter.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new EmptyCommandException(flag);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String description \u003d splitInput[0].replace(flag.NAME,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (description.equals(Constants.ZERO_LENGTH_STRING)){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    throw new MissingDescriptionException(flag);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IllegalCommandException(flag);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (flag.isNeedTarget()){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String target \u003d rawInput.replace(flag.NAME,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (target.equals(Constants.ZERO_LENGTH_STRING)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new MissingDescriptionException(flag);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            parameter \u003d target;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (flag.equals(Commands.UNKNOWN)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Commands getFlag(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return flag;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getParameter(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return parameter.trim();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private void updateFlag(String command) throws UnknownCommandException{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Commands[] commandValues \u003d Commands.values();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (Commands cmdValue: commandValues) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (command.equals(cmdValue.NAME)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                flag \u003d cmdValue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        throw new UnknownCommandException(); //break is unreachable"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 72
    }
  },
  {
    "path": "src/main/java/duke/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNDONE(\"undone\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    CLEAR(\"clear\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    DEADLINE(\"deadline\", \"/by\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    EVENT(\"event\", \"/at\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    UNKNOWN(\"unknown\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public final String SIGN;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public final String NAME;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    Commands(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.NAME \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        SIGN \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    Commands(String name, String sign){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.NAME \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.SIGN \u003d sign;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    boolean isNeedParameter(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return this.SIGN !\u003d null \u0026\u0026 !this.SIGN.equals(Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    boolean isNeedTarget(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return !this.equals(LIST) \u0026\u0026 !this.equals(BYE) \u0026\u0026 !this.equals(CLEAR);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 36
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String LINE_UNIT \u003d \"_\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DOT \u003d \".\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String SPACE \u003d \" \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_LEFT \u003d \"[\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_RIGHT \u003d \"]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_LEFT \u003d \"(\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TODO_ICON \u003d ICON_LEFT + \"T\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String EVENT_ICON \u003d ICON_LEFT + \"E\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DDL_ICON \u003d ICON_LEFT + \"D\" + ICON_RIGHT;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_SIGNATURE \u003d ICON_RIGHT + ICON_LEFT;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ICON_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT + ICON_LEFT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BODY_SIGNATURE \u003d ICON_RIGHT + SPACE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String BODY_SEPARATOR \u003d ICON_RIGHT + LINE_UNIT;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_SIGNATURE \u003d SPACE + PARAM_LEFT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PARAM_SEPARATOR \u003d LINE_UNIT + PARAM_LEFT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String DETAILS_SIGNATURE \u003d \": \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String TAB \u003d \"\\t\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String RETURN \u003d \"\\r\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String WIN_NEWLINE \u003d RETURN + NEWLINE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String ZERO_LENGTH_STRING \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String PATH \u003d \"./data\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final String FILENAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int LINE_REPETITION \u003d 60;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int NO_INDENT \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_1 \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_2 \u003d 2;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int INDENT_3 \u003d 3;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public static final int LETTER_OFFSET \u003d 64;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 35
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import io.FileLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import io.FileSaver;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageOptions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import messages.MessageWrapper;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        Scanner inputGetter \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        FileSaver fileSaver \u003d new FileSaver(Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        FileLoader fileLoader \u003d new FileLoader(Constants.PATH, Constants.FILENAME);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        CommandParser parser \u003d new CommandParser();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageFormat msgFormat \u003d new MessageFormat(new MessageOptions[]{"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_INDENT_1,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_BEFORE,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.INDENTED_2,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.AUTO_RETURN,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_AFTER"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageWrapper msgWrapper \u003d new MessageWrapper("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                Constants.LINE_REPETITION, Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        CommandHandler commandHandler \u003d new CommandHandler(parser, msgFormat, msgWrapper);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        ArrayList\u003cTask\u003e addedTasks \u003d fileLoader.loadSavedTasks(commandHandler);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] greetings \u003d new String[] {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \" Hello! I\u0027m duke.Duke\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                \" What can I do for you?\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        msgWrapper.show(greetings, msgFormat.getMessageOptions());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String userInput \u003d inputGetter.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isRunning \u003d commandHandler.handleCommand(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            System.out.print(commandHandler.getCommandResult());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (commandHandler.isPendingUpdate()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                addedTasks \u003d commandHandler.getAddedTasks();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                boolean isSaved \u003d fileSaver.save(addedTasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                commandHandler.updateStatus(isSaved);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 44,
      "-": 3
    }
  },
  {
    "path": "src/main/java/exceptions/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class CommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class EmptyCommandException extends CommandException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Commands flag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public EmptyCommandException(Commands flag){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.flag \u003d flag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/exceptions/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class IllegalCommandException extends CommandException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Commands flag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public IllegalCommandException(Commands flag){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.flag \u003d flag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/exceptions/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class MissingDescriptionException extends CommandException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Commands flag;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MissingDescriptionException(Commands flag){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.flag \u003d flag;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 10
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class UnknownCommandException extends CommandException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 4
    }
  },
  {
    "path": "src/main/java/io/FileLoader.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.CommandHandler;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Commands;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FileLoader extends IO {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FileLoader(String path, String fileName) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ArrayList\u003cTask\u003e loadSavedTasks(CommandHandler handler) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] lines \u003d new String[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            lines \u003d Files.readAllLines("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Paths.get(path + \"/\" + fileName), StandardCharsets.UTF_8).toArray(lines);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int numberOfTasks \u003d 1; //"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (String line: lines) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                if (line \u003d\u003d null || line.equals(\"\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                String[] commands \u003d getCommands(line, numberOfTasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                for (String command: commands) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    handler.handleCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                numberOfTasks++;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return handler.getAddedTasks();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String removeBracket(String input) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String output \u003d input.trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        output \u003d output.substring(1, output.length() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String getCommand(String icon, String description, String detail) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        switch (icon) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.TODO_ICON: // break is unreachable"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Commands.TODO.NAME + Constants.SPACE + description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.EVENT_ICON: // break is unreachable"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Commands.EVENT.NAME + Constants.SPACE + description + Constants.SPACE +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Commands.EVENT.SIGN + Constants.SPACE + detail;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        case Constants.DDL_ICON: // break is unreachable"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Commands.DEADLINE.NAME + Constants.SPACE + description + Constants.SPACE +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Commands.DEADLINE.SIGN + Constants.SPACE + detail;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return \"\"; //break is unreachable."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String getStateCommand(String state, int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (state.equals(Constants.TICK)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Commands.DONE.NAME + Constants.SPACE + index;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (state.equals(Constants.CROSS)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Commands.UNDONE.NAME + Constants.SPACE + index;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String[] getCommands(String taskText, int taskIndex) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String text \u003d taskText.replace(Constants.ICON_SIGNATURE,Constants.ICON_SEPARATOR);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        text \u003d text.replace(Constants.BODY_SIGNATURE,Constants.BODY_SEPARATOR);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] iconSeparated \u003d text.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String icon \u003d iconSeparated[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String state \u003d iconSeparated[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder body \u003d new StringBuilder();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for (int i \u003d 2; i \u003c iconSeparated.length; i++) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            body.append(iconSeparated[i]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String description \u003d body.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d description.replace(Constants.PARAM_SIGNATURE,Constants.PARAM_SEPARATOR);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] paramSeparated \u003d description.split(Constants.LINE_UNIT);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d paramSeparated[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String detail \u003d \"\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (paramSeparated.length \u003e 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String param \u003d removeBracket(paramSeparated[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            String[] paramDetails \u003d param.split(Constants.DETAILS_SIGNATURE);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            detail \u003d paramDetails[1].trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return new String[]{"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                getCommand(icon, description, detail),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                getStateCommand(removeBracket(state), taskIndex)};"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 98
    }
  },
  {
    "path": "src/main/java/io/FileSaver.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import jobs.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class FileSaver extends IO{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public FileSaver(String path, String fileName) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(path, fileName);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public boolean save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            StringBuilder strBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                strBuilder.append(task.toString()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if (isFileInvalid()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                throw new IOException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            Files.writeString("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    Paths.get(path + \"/\" + fileName),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    strBuilder.toString(), StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 33
    }
  },
  {
    "path": "src/main/java/io/IO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package io;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class IO {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public IO(String path, String fileName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean isFileInvalid()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            throws IOException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isValidated \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        File path \u003d new File(this.path);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!path.exists() || !path.isDirectory()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isValidated \u003d path.mkdirs();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        File file \u003d new File(this.path + \"/\" + this.fileName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (!file.exists() || !file.isFile()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            isValidated \u003d isValidated \u0026\u0026 file.createNewFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return !isValidated;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 30
    }
  },
  {
    "path": "src/main/java/jobs/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Deadline(String rawDescription){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(rawDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        by \u003d deadline();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void updateDescription(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.rawDescription.split(Commands.DEADLINE.SIGN)[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.description.replace(Commands.DEADLINE.NAME, Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.description.trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String deadline(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] splitDescription \u003d rawDescription.split(Commands.DEADLINE.SIGN);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (splitDescription.length \u003e 1){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return splitDescription[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.DDL_ICON + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 32
    }
  },
  {
    "path": "src/main/java/jobs/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Event(String rawDescription){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(rawDescription);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        at \u003d timing();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void updateDescription(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.rawDescription.split(Commands.EVENT.SIGN)[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.description.replace(Commands.EVENT.NAME, Constants.ZERO_LENGTH_STRING);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.description.trim();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String timing(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String[] splitDescription \u003d rawDescription.split(Commands.EVENT.SIGN);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (splitDescription.length \u003e 1){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return splitDescription[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.ZERO_LENGTH_STRING;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.EVENT_ICON + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 32
    }
  },
  {
    "path": "src/main/java/jobs/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String rawDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public Task(String rawDescription){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.rawDescription \u003d rawDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        updateDescription();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void updateDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        description \u003d rawDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return (isDone ? Constants.TICK : Constants.CROSS);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void markAsUndone(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 35
    }
  },
  {
    "path": "src/main/java/jobs/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package jobs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public ToDo(String rawDescription){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        super(rawDescription);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    protected void updateDescription(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        this.description \u003d this.rawDescription.replace("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                Commands.TODO.NAME, Constants.ZERO_LENGTH_STRING).trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.TODO_ICON + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 20
    }
  },
  {
    "path": "src/main/java/messages/MessageFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class MessageFormat {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private final ArrayList\u003cMessageOptions\u003e messageOptionsList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageFormat(MessageOptions[] options){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList \u003d new ArrayList\u003c\u003e(Arrays.asList(options));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void addMessageOption(MessageOptions option){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList.add(option);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void removeMessageOption(MessageOptions option){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        messageOptionsList.remove(option);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageOptions[] getMessageOptions(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageOptions[] output \u003d new MessageOptions[messageOptionsList.size()];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return messageOptionsList.toArray(output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 25
    }
  },
  {
    "path": "src/main/java/messages/MessageOptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public enum MessageOptions {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_1,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_2,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_INDENT_3,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_BEFORE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_1,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_2,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDENTED_3,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    NOT_INDEXED,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDEXED_NUM,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    INDEXED_ABC,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    AUTO_RETURN,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    LINE_AFTER"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 16
    }
  },
  {
    "path": "src/main/java/messages/MessageWrapper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "package messages;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "public class MessageWrapper {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String lineBase;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public MessageWrapper(int length, String baseUnit){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        setLineBase(length, baseUnit);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void setLineBase(int length, String baseUnit){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        lineBase \u003d baseUnit.repeat(length);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String wrap(String input, MessageOptions[] options){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return wrap(new String[]{input}, options);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public String wrap(String[] inputs, MessageOptions[] options){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isLineBefore \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_BEFORE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isLineAfter \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.LINE_AFTER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        boolean isAutoReturn \u003d Arrays.asList(options).contains("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                MessageOptions.AUTO_RETURN);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        MessageOptions indexOption \u003d getIndexOption(options);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int lineIndent \u003d getLineIndent(options);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        int textIndent \u003d getTextIndent(options);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isLineBefore){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        for(int i \u003d 0; i \u003c inputs.length; i++){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            int index \u003d i + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildMessage("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                    textIndent, index, inputs[i], isAutoReturn, indexOption));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isLineAfter){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            stringBuilder.append(buildLine(lineIndent, lineBase));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(String[] inputs, MessageOptions[] options){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        System.out.print(wrap(inputs, options));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    public void show(String input, MessageOptions[] options){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        System.out.print(wrap(input, options));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int getLineIndent(MessageOptions[] options){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_1)){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_2)){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.LINE_INDENT_3)){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private int getTextIndent(MessageOptions[] options){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDENTED_1)){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_2)){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_2;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDENTED_3)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return Constants.INDENT_3;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.NO_INDENT;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private MessageOptions getIndexOption(MessageOptions[] options){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (Arrays.asList(options).contains(MessageOptions.INDEXED_NUM)){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return MessageOptions.INDEXED_NUM;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        } else if (Arrays.asList(options).contains(MessageOptions.INDEXED_ABC)){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            return MessageOptions.INDEXED_ABC;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return MessageOptions.NOT_INDEXED;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String buildLine(int lineIndent, String lineBase){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return Constants.TAB.repeat(lineIndent) +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                lineBase + Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    private String buildMessage(int indent, int index, String message,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            boolean isAutoReturn, MessageOptions indexOption){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        String formattedMessage \u003d Constants.TAB.repeat(indent);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if(index \u003e 0){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            if(indexOption \u003d\u003d MessageOptions.INDEXED_NUM){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formattedMessage +\u003d index + Constants.DOT;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            } else if (indexOption \u003d\u003d MessageOptions.INDEXED_ABC){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                formattedMessage +\u003d (char)(index +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "                        Constants.LETTER_OFFSET) + Constants.DOT;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        formattedMessage +\u003d message;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        if (isAutoReturn){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "            formattedMessage +\u003d Constants.WIN_NEWLINE;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "        return formattedMessage;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 107
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[T][✘] task1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "[E][✘] do stuff (at:  2)"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "todo task1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "deadline ddl /by 10pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "event /at 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "event do stuff /at 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "undone A"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "undone c"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\exceptions\\*.java ..\\src\\main\\java\\jobs\\*.java ..\\src\\main\\java\\messages\\*.java ..\\src\\main\\java\\io\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TomLBZ"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TomLBZ": 2,
      "-": 19
    }
  }
]
