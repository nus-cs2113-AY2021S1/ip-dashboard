[
  {
    "path": "src/main/java/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddDeadlineCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddDeadlineCommand(String fullCommand){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws DukeDeadlineException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 9;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/by\")-1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfBy \u003d fullCommand.indexOf(\"/by\") + 4;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfBy \u003d fullCommand.length();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeDeadlineException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String by \u003d fullCommand.substring(startOfBy,endOfBy);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(message.isEmpty() || by.isEmpty()){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeDeadlineException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Deadline temp \u003d new Deadline(message, false, by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            temp.printDeadline();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 30
    }
  },
  {
    "path": "src/main/java/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddEventCommand(String fullCommand){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws DukeEventException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 6;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.indexOf(\"/at\")-1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfAt \u003d fullCommand.indexOf(\"/at\") + 4;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfAt \u003d fullCommand.length();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(endOfMessage \u003c\u003d startOfMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeEventException();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage, endOfMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String at \u003d fullCommand.substring(startOfAt,endOfAt);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(message.isEmpty() || at.isEmpty()){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeEventException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Event temp \u003d new Event(message, false,at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().add(temp);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        temp.printEvent();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 29
    }
  },
  {
    "path": "src/main/java/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class AddTodoCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public AddTodoCommand(String fullCommand){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList) throws DukeTodoException{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int startOfMessage \u003d 5;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int endOfMessage \u003d fullCommand.length();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(endOfMessage \u003c\u003d startOfMessage){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeTodoException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String message \u003d fullCommand.substring(startOfMessage,endOfMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(message.isEmpty()){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            throw new DukeTodoException();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Todo temp \u003d new Todo(message, false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().add(temp);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            temp.printTodo();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 27
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    abstract void execute(TaskList tasklist) throws DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Deadline(String description,boolean isDone, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printDeadline(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 21
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DeleteCommand(String fullCommand){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Task task \u003d taskList.getList().get(number-1);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        taskList.getList().remove(number-1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printDelete(task,taskList.getList().size());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 19
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fullCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String[] message \u003d this.fullCommand.split(\" \");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            int number \u003d Integer.valueOf(message[1]);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            taskList.getList().get(number-1).markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Ui.printDone(taskList.getList().get(number-1));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String FILENAME \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Duke(String FILENAME) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        storage \u003d new Storage(FILENAME);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        storage.load(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printStart();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String fullCommand \u003d Ui.readCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                c.execute(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                tasks.saveTask(storage.getFileName());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (DukeTodoException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printTodoError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (DukeDeadlineException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printDeadlineError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (DukeEventException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printEventError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.printWritingError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printBye();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        new Duke(FILENAME).run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "jialerk": 40
    }
  },
  {
    "path": "src/main/java/DukeDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DukeDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/DukeEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DukeEventException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/DukeTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class DukeTodoException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 2
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Event(String description,boolean isDone, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printEvent(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jialerk": 23
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ExitCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList tasklist){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printList(taskList.getList());"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static Command parse(String fullCommand){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        if(fullCommand.equals(\"bye\")){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }else if (fullCommand.startsWith(\"done \")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddDeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else if (fullCommand.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new AddEventCommand(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }else if (fullCommand.startsWith(\"delete \")){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            return new SorryCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 22
    }
  },
  {
    "path": "src/main/java/SorryCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class SorryCommand extends Command{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void execute(TaskList taskList){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Ui.printError();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 10
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Storage(String fileName){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.file \u003d new File(fileName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getFileName(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void load(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            getFile(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.fileNotFoundError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }catch(IOException e1){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                Ui.createFileError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private void getFile(TaskList taskList) throws FileNotFoundException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Scanner scan \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        while(scan.hasNextLine()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String content \u003d scan.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String[] contents \u003d content.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String legend \u003d contents[0].trim();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(contents[1].trim());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(content);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            Boolean done \u003d (Integer.valueOf(contents[1].trim()) \u003d\u003d 1) ? true : false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String action \u003d contents[2].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            String action2 \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if(legend.equals(\"D\") || legend.equals(\"E\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                action2 \u003d contents[3].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if(legend.equals(\"T\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskList.add(new Todo(action,done));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }else if(legend.equals(\"D\")){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskList.add(new Deadline(action,done,action2));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }else if(legend.equals(\"E\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                taskList.add(new Event(action,done,action2));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private void createFile() throws IOException{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Path path \u003d Paths.get(this.fileName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        Files.createDirectory(path.getParent());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    protected static int total \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        total++;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 24
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public List\u003cTask\u003e getList(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void saveTask(String filename) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filename);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for(Task task : this.taskList){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            if(task instanceof Todo){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"T | \" + (task.isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        task.description + \"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }else if(task instanceof Deadline){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                String[] deadline \u003d  task.description.split(\"/by\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"D | \" + (task.isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        task.description + \" | \" + ((Deadline) task).by + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }else if(task instanceof Event) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                fileWriter.write(\"E | \" + (task.isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                        task.description + \" | \" + ((Event) task).at + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 41
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public void printTodo(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n  \" + this + \"\\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jialerk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jialerk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    private static Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static String readCommand(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        return scan.nextLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printStart(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printList(List\u003cTask\u003e list){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        for(Task item : list){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            System.out.println(num+\".\"+item);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jialerk"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDone(Task task){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" Nice! I\u0027ve marked this task as done:\\n   \" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                task + \"\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDelete(Task task, int total){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" Noted. I\u0027ve removed this task:\\n   \" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                task + \"\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" Now you have \" + total + (total \u003d\u003d 1 ? \" task in the list.\\n\" : \" tasks in the list.\\n\") +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printBye(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printError(){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printTodoError(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printDeadlineError(){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" ☹ OOPS!!! The description of a deadline cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printEventError(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \" ☹ OOPS!!! The description of a event cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jialerk"
        },
        "content": "                \"__________________________________________________________\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void fileNotFoundError(){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"File not found. Creating file...\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void createFileError(){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Creating file failed.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jialerk"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    public static void printWritingError(){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jialerk"
        },
        "content": "        System.out.println(\"Writing to file failed.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jialerk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jialerk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jialerk": 91
    }
  }
]
