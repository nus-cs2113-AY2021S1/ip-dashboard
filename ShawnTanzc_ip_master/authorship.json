[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 2,
      "-": 24
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "My Task(s): "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "T|0|homework|"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "E|1|tea ceremony|5.00pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "D|0|register internship|today"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.command.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.command.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.command.FileIO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static FileIO savedFile \u003d new FileIO(\"duke.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_LIST_EMPTY \u003d \"List is currently empty. Please insert task.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_INCORRECT_FORMAT \u003d \"Missing details. Please use the correct format.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_NO_SUCH_TASK \u003d \"Task not detected. Use \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\".\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_TASK_NOT_SET \u003d \"Task not created yet. Please create the task first.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String username;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        username \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello \" + username + \"! What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String userRequest \u003d in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (userRequest.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    printExceptionMessage(ERROR_LIST_EMPTY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    int listIndex \u003d 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    addHorizontalLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    for (Task task : taskList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        System.out.println(listIndex + \". \" + task.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        listIndex++;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    addHorizontalLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (userRequest.equals(\"bye\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                save(taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (userRequest.startsWith(\"done\") \u0026\u0026 (userRequest.split(\" \").length \u003d\u003d 2)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                done(taskList, userRequest);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (userRequest.startsWith(\"delete\") \u0026\u0026 (userRequest.split(\" \").length \u003d\u003d 2)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                delete(taskList, userRequest);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    TaskType newRequest \u003d extractTaskType(userRequest);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    Task taskEntry \u003d null;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    if (newRequest !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        switch (newRequest) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            String deadlineName \u003d getTaskName(userRequest);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            String deadlineDetail \u003d getTaskDetail(userRequest);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            taskEntry \u003d new Deadline(deadlineName, deadlineDetail);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        case EVENT:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            String eventName \u003d getTaskName(userRequest);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            String eventDetail \u003d getTaskDetail(userRequest);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            taskEntry \u003d new Event(eventName, eventDetail);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        case TODO:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            String toDoName \u003d getToDoName(userRequest);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            taskEntry \u003d new ToDo(toDoName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        addHorizontalLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task: \" + taskEntry.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        taskList.add(taskEntry);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        numberOfTaskTracker(taskList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        addHorizontalLine();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        printExceptionMessage(ERROR_NO_SUCH_TASK);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    printExceptionMessage(ERROR_INCORRECT_FORMAT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    printExceptionMessage(ERROR_INCORRECT_FORMAT);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"What is your name, sir?\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            savedFile.saveFile(taskList);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Task have been saved. File name: \" + savedFile.getFile());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(\"Unable to save file\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void done(ArrayList\u003cTask\u003e taskList, String userRequest) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String[] items \u003d userRequest.split(\" \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int index \u003d Integer.parseInt(items[1]) - 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            taskList.get(index).setDone(true);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(taskList.get(index).toString());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void delete(ArrayList\u003cTask\u003e taskList, String userRequest) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String[] items \u003d userRequest.split(\" \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int index \u003d Integer.parseInt(items[1]) - 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (index \u003c taskList.size()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(taskList.get(index).toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                taskList.remove(index);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                numberOfTaskTracker(taskList);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static TaskType extractTaskType(String userRequest) throws DukeException {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        userRequest \u003d userRequest.toLowerCase().trim();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        TaskType currentTaskType;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (userRequest.contains(\"/by\") \u0026\u0026 userRequest.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (userRequest.contains(\"/at\") \u0026\u0026 userRequest.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (userRequest.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d  TaskType.TODO;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (!userRequest.contains(\"/at\") \u0026\u0026 userRequest.startsWith(\"event\") ||"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    !userRequest.contains(\"/by\") \u0026\u0026 userRequest.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d null;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return currentTaskType;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getTaskName(String userRequest) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.indexOf(\" \");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int endPointIndex \u003d userRequest.indexOf(\"/\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex, endPointIndex);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getTaskDetail(String userRequest) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex + 4);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getToDoName(String userRequest) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.indexOf(\" \");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void numberOfTaskTracker(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int numberOfTasks \u003d taskList.size();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void printExceptionMessage(String exceptionMessage) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(exceptionMessage);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void addHorizontalLine() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 198,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 4
    }
  },
  {
    "path": "src/main/java/duke/command/FileIO.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class FileIO {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final String SEGMENT_DIVIDER \u003d \"|\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public FileIO (String file) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        setFile(file);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setFile(String file) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String inputs \u003d \"My Task(s): \\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskType();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.isDoneChecker() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskName();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskDetails();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d \"\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        fw.write(inputs);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 43
    }
  },
  {
    "path": "src/main/java/duke/command/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    DEADLINE, TODO, EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Deadline(String taskName, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Event(String taskName, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.taskName \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return this.taskName.trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isDoneChecker() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        boolean checker;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return checker;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public abstract String getTaskDetails();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String checker;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return checker;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return isDone() + \" \" + getTaskName();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 48
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Shawn"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "todo play soccer"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "event soccer match /at 7.00pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "deadline coding homework /by tomorrow"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 3,
      "-": 19
    }
  }
]
