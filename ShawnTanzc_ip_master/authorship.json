[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "# DUKE - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Duke is a command-line application that helps keep track of your everyday task with much convenience"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "While it is carefully build to cater the needs of student, but sure to have a smooth journey organizing"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "your task with Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* [Quick Start](#quick-start)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Starting the program](#starting-the-program)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Adding deadline task](#adding-deadline-task): `deadline`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Adding event task](#adding-event-task): `event`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Adding todo task](#adding-todo-task): `todo`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Displaying task list](#displaying-task-list): `list`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Checking task as complete](#checking-task-as-complete): `done`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Deleting task from list](#deleting-task-from-list): `delete`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Finding keyword in list](#finding-keyword-in-list): `find`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * [Exiting the program](#exiting-the-program): `bye`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Ensure that you have Java 11 or above installed in your computer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Download the latest Duke.jar online."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Copy the file to the folder you want to use as the home folder for your Duke task manager"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Double-click the file to start the app. A command line window will show up. "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Type your username as instructed by the programme. Enter any key to continue."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Type the command in the command box and press Enter to execute it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    Here are some commands you can try:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `todo textbook`: Add \"todo textbook\" into task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `list`: List all current tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `done 2`: Check the task in the 2nd index as completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `delete 3`: Delete the task in the 3rd index."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `find books`: Search through the task list for the keyword books."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    * `exit`: Save and exit Duke application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. Refer to the Features below for details of each commands"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Duke provides 3 categories of tasks to select from. They are `Deadline`, `Event` and `ToDo`. "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Other functions include `list`, `done`, `delete`, `find` and `exit`."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003eThings to note:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e1. Words in **UPPERCASE** are the parameters to be supplied by user. |"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e1. The user inputs are all case-sensitive."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e1. Format should be followed strictly as per user guide."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Starting the program"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Displays an introductory message and request for user\u0027s name"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Hello I\u0027m Duke"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "What is your name, sir?"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Upon receiving the username, Duke will ask user to enter any key to continue"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Hello \u003cusername\u003e! Press any key to continue."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Meanwhile, Duke attempts to load the file `duke.txt` which was previously saved."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "If successful:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Loading... Please Wait."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "duke.txt has been loaded."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "If unsuccessful: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Loading... Please Wait."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Error! duke.txt cannot be found. "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Adding deadline task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Adds a deadline type task to the task list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `deadline TASK_NAME /by YYYY-MM-DD,HH:MM`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_NAME`: Label the deadline task with its name."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `YYYY-MM-DD`: Include date of the deadline in the respective format."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `HH-MM`: Include time of deadline in the respective format."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `deadline CS2113T Project Submission /by 2020-10-02,23:59`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Got it. I\u0027ve added this task: [D][✘] CS2113T Project Submission (by: Oct 2 2020, 11:59 PM)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Adding event task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Adds an event type task to the task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `event TASK_NAME /at TASK_DATE_TIME`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_NAME`: Label the event task with its name."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_DATE_TIME`: Include relevant details of the event."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `event Engin Day /at this Monday 12pm - 4pm`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Got it. I\u0027ve added this task: [E][✘] Engin Day (at: this Monday 12pm - 4pm)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Adding todo task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Adds a todo type task to the task list"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `todo TASK_NAME`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_NAME`: Label the todo task with its name. "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `todo CS2101 assignment`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Got it. I\u0027ve added this task: [T][✘] CS2101 assignment"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Now you have 3 task(s) in the list."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003eThings to note:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e1. If Duke is unable to detect the keyword, "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003eit will prompt user to use the correct keyword."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e1. If Duke detects the keyword, but incorrect "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003eformat provided, it will prompt user to follow the correct format."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `toodo`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " Task not detected. Use \"todo\", \"deadline\" or \"event\"."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " _________________________________________"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `event Sports Day at night`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " Missing details. Please use the correct format."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " _________________________________________"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Displaying task list"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Displays the current tasks in the task list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. [D][✘] CS2113T Project Submission (by: Oct 2 2020, 11:59 PM)"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "2. [E][✘] Engin Day (at: this Monday 12pm - 4pm)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "3. [T][✘] CS2101 assignment"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "if the list doesn\u0027t have any task:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "List is currently empty. Please insert task."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "``` "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Checking task as complete"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Sets the task on the specific index as done"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `done TASK_LIST_INDEX`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters: "
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_LIST_INDEX`: Input the index of the task you have completed"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `done 2` followed by `list`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "[E][✓] Engin Day (at: this Monday 12pm - 4pm)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. [D][✘] CS2113T Project Submission (by: Oct 2 2020, 11:59 PM)"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "2. [E][✓] Engin Day (at: this Monday 12pm - 4pm)"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "3. [T][✘] CS2101 assignment"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "If task do not exist: "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `done 4`"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Task not created yet. Please create the task first."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Deleting task from list"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Deletes the task on the specific index in the list"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `delete TASK_LIST_INDEX`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters: "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `TASK_LIST_INDEX`: Input the index of the task you want to delete"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `delete 2` followed by `list`"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "[E][✓] Engin Day (at: this Monday 12pm - 4pm)"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. [D][✘] CS2113T Project Submission (by: Oct 2 2020, 11:59 PM)"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "2. [T][✘] CS2101 assignment"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "If task do not exist: "
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `delete 3`"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Task not created yet. Please create the task first."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Finding keyword in list"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Finds any keyword the user inputs and extract the matching tasks."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Parameters:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `KEYWORD`: input the keyword of the task you wish to find in the list"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `find CS2101`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "1. [T][✘] CS2101 assignment"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "if `KEYWORD` is not found, the list will be empty: "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `find cheesecake`"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e Things to note:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "\u003e * `KEYWORD` input by user is case-sensitive."
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### Exiting the program"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Displays an exit message."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Saves a copy of the task list in `duke.txt` in your computer"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "before exiting the program."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `bye`"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Task have been saved. File name: duke.txt"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "if program is unable to be saved:"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "* `bye`"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Unable to save file."
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "_________________________________________"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "```"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "| Action | Format, Example |"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "| :-:    |:--              |"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|Deadline| `deadline TASK_NAME /by YYYY-MM-DD,HH:MM`, `deadline CS2113T Project Submission /by 2020-10-02,23:59` |"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|Event   | `event TASK_NAME /at TASK_DATE_TIME`, `event Engin Day /at this Monday 12pm - 4pm` |"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|ToDo    | `todo TASK_NAME`, `todo CS2101 assignment` |"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|List    | `list`, `list` |"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|Done    | `done TASK_LIST_INDEX`, `done 2` |"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|Delete  | `delete TASK_LIST_INDEX`, `delete 2` |"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "|Find    | `find KEYWORD`, `find CS2101` |"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "### ---- END OF USER GUIDE ----"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 298,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import static duke.command.Parser.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import static duke.command.Ui.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import static duke.command.TaskList.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Represents the main program which takes in various task entry and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * multiple task tracking commands by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String username \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        displayUsername(username);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String anythingReply \u003d in.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        taskList.loadTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String userRequest \u003d in.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (isTypedList(userRequest)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                printTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (isTypedBye(userRequest)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                saveTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (isTypedDone(userRequest)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                done(userRequest);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (isTypedDelete(userRequest)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                deleteTask(userRequest);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else if (isTypeFind(userRequest)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                findKeyword(userRequest);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addTask(userRequest);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 45,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Extends access to Exception library"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Deals with identifying the type of command by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Returns true if user request contains \"list\", else return false"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static boolean isTypedList(String userRequest) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.equals(\"list\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Returns true if user request contains \"bye\", else return false"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static boolean isTypedBye(String userRequest) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.equals(\"bye\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Returns true if user request contains \"done\" and an index from the list,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * else return false"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static boolean isTypedDone(String userRequest) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.startsWith(\"done\") \u0026\u0026 (userRequest.split(\" \").length \u003d\u003d 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Returns true if user request contains \"delete\" and an index from the list,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * else return false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static boolean isTypedDelete(String userRequest) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.startsWith(\"delete\") \u0026\u0026 (userRequest.split(\" \").length \u003d\u003d 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Returns true if user request contains \"find\", else return false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return boolean true or false"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static boolean isTypeFind(String userRequest) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.startsWith(\"find\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 59
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import static duke.command.TaskList.printExceptionMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Deals with loading tasks from the file and saving task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * in the file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_DATE_TIME_FORMAT \u003d \"Incorrect date/time format provided. Use YYYY-MM-DD,HH:MM.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_READING_FILE \u003d \"Unable to read file. Check the text file again\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private final String SEGMENT_DIVIDER \u003d \" | \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String file;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Storage(String file) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        setFile(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setFile(String file) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Writes file in a specific format with individual segments"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * of the task in the taskList"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param taskList the list that stores the current tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @throws IOException exception with inputs and outputs with writing"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void saveFile(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String inputs \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskType();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.isDoneChecker() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskName();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d SEGMENT_DIVIDER;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d task.getTaskDetails();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            inputs +\u003d \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        fw.write(inputs);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Loads the text file and extracts relevant information"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * to recover the previously saved task list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return taskList the list that stores the current tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @throws FileNotFoundException if file cant be read"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        File f \u003d new File(file);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        Scanner scanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String[] items;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String taskType;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String isDoneChecker;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String taskDetails;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String deadlineDateAndTime \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "      "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                items \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                taskType \u003d items[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                isDoneChecker \u003d items[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                taskDetails \u003d items[2];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                if (items.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    deadlineDateAndTime \u003d items[3];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    ToDo todo \u003d new ToDo(taskDetails);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    if (isDoneChecker.equals(\"1\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        todo.setDone(true);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String[] dateAndTimeParts \u003d deadlineDateAndTime.split(\",\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    LocalDate deadlineDateFormat \u003d LocalDate.parse(dateAndTimeParts[0]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    LocalTime deadlineTimeFormat \u003d LocalTime.parse(dateAndTimeParts[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    Deadline deadline \u003d new Deadline(taskDetails, deadlineDateFormat, deadlineTimeFormat);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    if (isDoneChecker.equals(\"1\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        deadline.setDone(true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskList.add(deadline);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    Event event \u003d new Event(taskDetails, deadlineDateAndTime);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    if (isDoneChecker.equals(\"1\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                        event.setDone(true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskList.add(event);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_READING_FILE);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 131
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import static duke.command.Ui.addHorizontalLine;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_LIST_EMPTY \u003d \"List is currently empty. Please insert task.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_INCORRECT_FORMAT \u003d \"Missing details. Please use the correct format.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_NO_SUCH_TASK \u003d \"Task not detected. Use \\\"todo\\\", \\\"deadline\\\" or \\\"event\\\".\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_TASK_NOT_SET \u003d \"Task not created yet. Please create the task first.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final String ERROR_DATE_TIME_FORMAT \u003d \"Incorrect date/time format provided. Use YYYY-MM-DD,HH:MM.\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private static final Storage savedFile \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Register the text file \"duke.txt\" and load the content into"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * the arraylist taskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void loadTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Loading... Please Wait.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            taskList \u003d savedFile.loadFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(savedFile.getFile() + \" has been loaded.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Error! \" + savedFile.getFile() + \" cannot be found.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Print all the tasks in the latest task list with its completeness"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Inform user if task list is currently empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void printTaskList() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_LIST_EMPTY);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int listIndex \u003d 1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(listIndex + \". \" + task.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                listIndex++;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the index of the task user requested"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * and checks the task as done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "      * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void done(String userRequest) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String[] items \u003d userRequest.split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int index \u003d Integer.parseInt(items[1]) - 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            taskList.get(index).setDone(true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(taskList.get(index).toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the index of the task user requested"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * and remove the task from the task list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void deleteTask(String userRequest) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            String[] items \u003d userRequest.split(\" \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            int index \u003d Integer.parseInt(items[1]) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (index \u003c taskList.size()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(taskList.get(index).toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                taskList.remove(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                numberOfTaskTracker(taskList);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_TASK_NOT_SET);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the keyword the user typed and run through the"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * task list for the same keyword and display the list of"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * matching task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void findKeyword(String userRequest) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.indexOf(\" \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int searchListIndex \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String keyword \u003d userRequest.substring(startPointIndex + 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        for (Task currentTask: taskList) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if(currentTask.getTaskName().contains(keyword)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(searchListIndex + \". \" + currentTask.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                searchListIndex++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Takes in the userRequest and sort it into various types of task"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts individual details of the task and add it into the task list"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * If userRequest does not match any of the categories, it informs user"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * that there is no such task"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * If userRequest matches one of the types but miss some required details,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * it informs user that format is incorrect"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void addTask(String userRequest) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            TaskType newRequest \u003d extractTaskType(userRequest);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            Task taskEntry \u003d null;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            if (newRequest !\u003d null) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                switch (newRequest) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String deadlineName \u003d getTaskName(userRequest);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String deadlineDetail \u003d getTaskDetail(userRequest);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String[] detailParts \u003d deadlineDetail.split(\",\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    LocalDate deadlineDateFormat \u003d LocalDate.parse(detailParts[0]);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    LocalTime deadlineTimeFormat \u003d LocalTime.parse(detailParts[1]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskEntry \u003d new Deadline(deadlineName, deadlineDateFormat, deadlineTimeFormat);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String eventName \u003d getTaskName(userRequest);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String eventDetail \u003d getTaskDetail(userRequest);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskEntry \u003d new Event(eventName, eventDetail);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    String toDoName \u003d getToDoName(userRequest);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    taskEntry \u003d new ToDo(toDoName);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \" + taskEntry.toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                taskList.add(taskEntry);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                numberOfTaskTracker(taskList);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                addHorizontalLine();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                printExceptionMessage(ERROR_NO_SUCH_TASK);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (StringIndexOutOfBoundsException | DukeException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_INCORRECT_FORMAT);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(ERROR_DATE_TIME_FORMAT);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Identifies and extracts the type of task namely: Deadline, Event or Todo"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return the current task type to be sorted into various requirement"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @throws DukeException print error for which the format is incomplete or incorrect"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static TaskType extractTaskType(String userRequest) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        userRequest \u003d userRequest.toLowerCase().trim();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        TaskType currentTaskType;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (userRequest.contains(\"/by\") \u0026\u0026 userRequest.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (userRequest.contains(\"/at\") \u0026\u0026 userRequest.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (userRequest.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d  TaskType.TODO;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else if (!userRequest.contains(\"/at\") \u0026\u0026 userRequest.startsWith(\"event\") ||"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                !userRequest.contains(\"/by\") \u0026\u0026 userRequest.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            currentTaskType \u003d null;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return currentTaskType;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the name of the task from userRequest"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return String extracted name of task"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getTaskName(String userRequest) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.indexOf(\" \");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int endPointIndex \u003d userRequest.indexOf(\"/\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex, endPointIndex);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the details of the task from userRequest such as"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * date and time"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return String extracted details of task"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getTaskDetail(String userRequest) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex + 4);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Extracts the name of the ToDo task from the user Request"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param userRequest the request typed in by the user"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return String extracted name of the ToDo task"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static String getToDoName(String userRequest) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int startPointIndex \u003d userRequest.indexOf(\" \");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return userRequest.substring(startPointIndex);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Stores the content of the taskList into the text file specified"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void saveTaskList() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            savedFile.saveFile(taskList);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            addHorizontalLine();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            System.out.println(\"Task have been saved. File name: \" + savedFile.getFile());"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            printExceptionMessage(\"Unable to save file.\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Tracks the number of task currently in the taskList"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param taskList the list that store tasks"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void numberOfTaskTracker(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        int numberOfTasks \u003d taskList.size();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Prints any exception message provided"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param exceptionMessage message for user if any issues encountered"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void printExceptionMessage(String exceptionMessage) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(exceptionMessage);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 271
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * deals with the interaction with user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Greets with introduction and request for"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * user\u0027s name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"What is your name, sir?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Greet user by its name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @param username the name input by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void displayUsername(String username) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Hello \" + username + \"! Press any key to continue.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Send a goodbye message to user"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        addHorizontalLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public static void addHorizontalLine() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 46
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Handles deadline-related tasks and sort them into a more readable format"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private LocalDate byDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private LocalTime byTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Deadline(String taskName, LocalDate byDate, LocalTime byTime) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.byDate \u003d byDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.byTime \u003d byTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public LocalDate getByDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return byDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public LocalTime getByTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return byTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Return a fixed format when user inputs a deadline task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return deadline task for printing"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getByDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "                + \", \" + getByTime().format(DateTimeFormatter.ofPattern(\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return String.valueOf(byDate) + \",\" + String.valueOf(byTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 47
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Handles event-related task and sort them into a more readable format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Event(String taskName, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * Return a fixed format when user inputs a event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     * @return event task for printing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Represents a general superclass over deadline, event and todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Sets and gets several information that are common between the 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * types of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private String taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.taskName \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return this.taskName.trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public boolean isDoneChecker() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        boolean checker;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return checker;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public abstract String getTaskDetails();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String isDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        String checker;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        if (this.isDone \u003d\u003d true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "            checker \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return checker;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return isDone() + \" \" + getTaskName();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 53
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Represents enumeration of the various task types"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * to be used in identifying task type"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    DEADLINE, TODO, EVENT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 9
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " * Handles todo-related task and sort them into a more readable format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    public String getTaskDetails() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "Shawn"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "todo play soccer"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "event soccer match /at 7.00pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "deadline coding homework /by tomorrow"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ShawnTanzc"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ShawnTanzc": 3,
      "-": 19
    }
  }
]
