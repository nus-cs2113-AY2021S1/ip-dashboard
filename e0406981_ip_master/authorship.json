[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "1[E][✗]aa/aa"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "2[T][✗]aaa"
      }
    ],
    "authorContributionMap": {
      "e0406981": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 1: Add task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Creates a new task and adds it to the list. "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`todo` - adds todo task  "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`event` - adds event task  "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`deadline` - adds deadline task  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`/` -  to be put after deadline and event, and date to be entered after the `/`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "todo read book  "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "event birthday /tommorow  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Got it, I`ve added the task:  "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "[T][✗] read book  "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "1 tasks are in the list  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Got it, I`ve added the task:  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "[E][✗] birthday /tommorow  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "2 tasks are in the list  "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 2: Bye"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`bye`- exits the program"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "See you again :)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 3: List"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Shows list of tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`list` - shows list of tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "1[T][✗] read book  "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "2[E][✗] birthday /tomorrow  "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 4:Save"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Saves all tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`save` - saves tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`save`  "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "File has been saved!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 5:Done"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Sets a task to done"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`done` - sets a task to done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`done 2` - sets task 2 to done  "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome:    "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Nice, the following task has been marked as done :)  "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "[E][✓] birthday /tomorrow  "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 6:Delete"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Deletes a task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`delete` - delete a task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`delete 2` - deletes task 2  "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Task number 2 has been deleted!"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 7: Find"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Searches for a string in all task descriptions"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`find` - find a string"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:  "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`find read` - searches for the \"read\" string  "
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`find haha`- searches for the \"haha\" string "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0406981"
        },
        "content": "1 tasks found:  "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0406981"
        },
        "content": "1[T][✗] read book"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0406981"
        },
        "content": "0 tasks found:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0406981"
        },
        "content": "### 8: Help"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Show commands"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0406981"
        },
        "content": "#### Keywords"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0406981"
        },
        "content": "`help`  "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0406981"
        },
        "content": "Expected outcome:  "
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0406981"
        },
        "content": "inputs are   "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0406981"
        },
        "content": "list : shows current tasks  "
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0406981"
        },
        "content": "bye : exits the program  "
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0406981"
        },
        "content": "done number : e.g done 2, sets the task at the number to done   "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0406981"
        },
        "content": "event name/date : e.g event Birthday /tomorrow   "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0406981"
        },
        "content": "todo name : e.g todo Homework  "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0406981"
        },
        "content": "deadline name/date : e.g deadline Project /next Sunday  "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0406981"
        },
        "content": "delete number : e.g delete 2, deletes a task  "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0406981"
        },
        "content": "find description : e.g find birthday, checks task`s names for description  "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0406981"
        },
        "content": "save: e.g save, saves the current list  "
      }
    ],
    "authorContributionMap": {
      "e0406981": 125,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final TaskManager tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final String FILE_LOCATION \u003d \"./data/\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final String FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        storage \u003d new Storage(parser, FILE_LOCATION, FILE_NAME);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        ArrayList\u003ctask\u003e data \u003d storage.readFile();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        tasks \u003d new TaskManager(data);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        boolean programIsRunning \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        while (programIsRunning) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                parser.checkType(input, tasks, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    programIsRunning \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0406981": 42,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * parses the command to check what it means"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int EVENT_END_INDEX \u003d 5;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int DEADLINE_END_INDEX \u003d 8;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int TODO_END_INDEX \u003d 4;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int DONE_END_INDEX \u003d 4;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int DELETE_END_INDEX \u003d 6;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static final int FIND_END_INDEX \u003d 4;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * check what the command means and then sends it to TaskManager to execute"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param command the input from the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param tasks ArrayList of tasks currently being stored"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param storage the storage for the save file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @throws DukeException handles errors that the user might input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @throws IOException handles when reading/writing file fails"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void checkType(String command, TaskManager tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"deadline\")||command.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline is empty!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d DEADLINE_END_INDEX){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (!command.contains(\"/\")) {//if there is no \u0027/by\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline has no date!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            name \u003d parseNameFromInput(command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            date \u003d parseDateFromInput(command);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (name.isBlank() || name.isEmpty()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline has no description!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.addTask(name, date, type);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"event\") || command.equals(\"event \")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event is empty!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d EVENT_END_INDEX){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (!command.contains(\"/\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event has no date! Please enter date after a \u0027/\u0027 \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            name \u003d parseNameFromInput(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            date \u003d parseDateFromInput(command);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (name.isBlank() || name.isEmpty()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event has no description!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.addTask(name, date, type);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"todo\")||command.equals(\"todo \")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Todo is empty!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d TODO_END_INDEX){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            name \u003d parseNameFromInput(command);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(name.isBlank()||name.isEmpty()){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Todo is empty!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            date \u003d parseDateFromInput(command);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.addTask(name, date, type);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d DONE_END_INDEX){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (isNumeric(command.substring(command.indexOf(\" \") + 1)))"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                tasks.setDone(parseNumeral(command));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.printTasks();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.printBye();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.equals(\"save\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            storage.saveFile(tasks.getList());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.printHelp();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d DELETE_END_INDEX){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (isNumeric(command.substring(command.indexOf(\" \") + 1)))"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                tasks.deleteTask(parseNumeral(command));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if(command.startsWith(\"find\")){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if(command.indexOf(\" \")!\u003d FIND_END_INDEX){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"You might need to leave a space between the command and description\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            name \u003d parseNameFromInput(command);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.findTask(name);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new DukeException(\"I do not understand, please enter a valid command! \" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    \"Enter \u0027help\u0027 for a list of commands!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets the name of task from input command"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return the name/description of the task is returned"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private String parseNameFromInput(String command) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.startsWith(\"todo\") || command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return command.substring(command.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return command.substring(command.indexOf(\u0027 \u0027) + 1, command.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets the date of task from input command"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return the date of the task is returned"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private String parseDateFromInput(String command) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.contains(\"/\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return command.substring(command.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets the name of task from save input line"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param line the line in the save file"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return the name/description of the task is returned"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String parseNameFromSave(String line) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        int nameEnd \u003d 0;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        int nameStart \u003d line.indexOf(\"]\", line.indexOf(\"]\") + 1) + 1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String type \u003d parseTypeFromSave(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (line.contains(\"/\")) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            nameEnd \u003d line.indexOf(\"/\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (type.equals(\"[T]\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return line.substring(nameStart);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return line.substring(nameStart, nameEnd);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets the type of the task from save input line"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param line the line in the save file"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return the task type is returned"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String parseTypeFromSave(String line) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return line.substring(line.indexOf(\"[\"), line.indexOf(\"]\") + 1);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String parseDateFromSave(String line) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (line.contains(\"/\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return line.substring(line.indexOf(\"/\"));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets whether the task is done from save input line"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param line user input"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return true or false, if the task is done"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public boolean parseDoneFromSave(String line) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return line.contains(\"[✓]\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets the number at the end of a command"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return integer at the end of command is returned"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private int parseNumeral(String command) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return Integer.parseInt(command.substring(command.indexOf(\" \") + 1))-1;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * checks whether a string is numeric"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return true or false, whether input is numerical"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @throws DukeException if the input is not numeric, throws duke exception"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private static boolean isNumeric(String command) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            Double.parseDouble(command);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new DukeException(\"Please enter a valid number after the command\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 209
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * handles writing/saving file"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final String fileLocation;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Storage(Parser parser, String fileLocation, String fileName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.fileLocation \u003d fileLocation;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * check is file exists"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @throws IOException in case of error"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private void checkIfFileExists() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (!Files.exists(Path.of(fileLocation))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            Files.createDirectories(Path.of(fileLocation));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (!Files.exists(Path.of(fileLocation + fileName))) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            Files.createFile(Path.of(fileLocation + fileName));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * saves the file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param tasks tasks to be saved"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @throws IOException in case of saving error"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void saveFile(ArrayList\u003ctask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        FileWriter fw \u003d new FileWriter(fileLocation + fileName);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            fw.write(i + 1 + tasks.get(i).getTaskType()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    + tasks.get(i).getIsDone() + tasks.get(i).getName() + tasks.get(i).date() +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    System.lineSeparator());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"File has been saved!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * read a text file to return it in ArrayList form"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public ArrayList\u003ctask\u003e readFile() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            checkIfFileExists();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"There was an error in loading the tasks!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        ArrayList\u003ctask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            BufferedReader in \u003d new BufferedReader(new FileReader(fileLocation + fileName));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            while ((line \u003d in.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                task newTask \u003d loadTask(line);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * load a task from a SINGLE line in the text file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param line a SINGLE line in the text file"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private task loadTask(String line) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        task NewTask;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String name \u003d parser.parseNameFromSave(line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String date \u003d parser.parseDateFromSave(line);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        boolean isDone \u003d parser.parseDoneFromSave(line);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String type \u003d parser.parseTypeFromSave(line);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (type.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new event(name, isDone, date);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (type.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new deadline(name, isDone, date);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new todo(name, isDone);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return NewTask;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 108
    }
  },
  {
    "path": "src/main/java/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * handles tasks, also holds the tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final ArrayList\u003ctask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public TaskManager(ArrayList\u003ctask\u003e saveFile) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        tasks \u003d saveFile;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * print all tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println(\"List is empty!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.toArray().length; i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                System.out.println( String.valueOf(i+1) + tasks.get(i));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * show valid commands"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"inputs are \\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"list : shows current tasks\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"bye : exits the program\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"done number : e.g done 2, sets the task at the number to done \\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"event name/date : e.g event Birthday /tomorrow \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"todo name : e.g todo Homework\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"deadline name/date : e.g deadline Project /next Sunday\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"delete number : e.g delete 2, deletes a task\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"find description : e.g find birthday, checks task\u0027s names for description\\n\"+"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                \"save: e.g save, saves the current list\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * print bye message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"See you again :)\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * set a task to done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param taskNum the number of the task in the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setDone(int taskNum) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (taskNum \u003e tasks.size() - 1 || taskNum \u003c 0) {//if invalid number"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println(\"Invalid done input, number is out of range ):\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }else if(tasks.get(taskNum).getIsDone().equals(\"[✓]\")){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println((\"Task is already set to done!\"));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.get(taskNum).setDone(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println(\"Nice, the following task has been marked as done :)\" + \"\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    tasks.get(taskNum));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * deletes a task from the list"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param taskNum the number of the task in the list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (taskNum \u003e tasks.size() - 1 || taskNum \u003c 0) {//if invalid number"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println(\"Invalid delete input, number is out of range ):\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            tasks.remove(taskNum);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println(\"Task number \" + (taskNum+1) + \" has been deleted!\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * add a task to the list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param name description of the task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param date date of the task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param type type of the task(event,etc)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void addTask(String name, String date, String type) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        task NewTask;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new event(name, false, date);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new deadline(name, false, date);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            NewTask \u003d new todo(name, false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added the task:\" + \"\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                NewTask + \"\\n\" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                (tasks.size()+1) + \" tasks are in the list\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        tasks.add(NewTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * find a task with the given description"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param description what we\u0027re trying to find in the list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void findTask(String description){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        ArrayList\u003ctask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (task task : tasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (task.getName().contains(description)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                tasksFound.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(tasksFound.size() + \" tasks found:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        for (int i\u003d0; i\u003ctasksFound.size(); i++){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            System.out.println( String.valueOf(i+1) + tasksFound.get(i));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns the whole list of tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return list of tasks is returned"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public ArrayList\u003ctask\u003e getList(){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 127
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * handles UI,and what is shown to the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Ui(InputStream in){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * prints welcome message"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"Hello, what can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String readInput(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * prints line"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"-----------------------------------------------------\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 46
    }
  },
  {
    "path": "src/main/java/deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * class for a deadline task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class deadline extends task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public deadline(String name ,boolean isDone, String date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns deadline type"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return deadline type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"[D]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns date of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return date of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * return name of task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return name of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns the task info to be printed as string"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return task info in string format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + \" \" + getName() + \" \" + date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 48
    }
  },
  {
    "path": "src/main/java/event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * class of an event task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class event extends task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private final String date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public event(String name, boolean isDone, String date){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns the event type"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return event type"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"[E]\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns date of task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return date of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns name of task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return name of task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns the task info to be printed as string"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return task info in string format"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + \" \" + getName() + \" \" + date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0406981": 48
    }
  },
  {
    "path": "src/main/java/task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * class for a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setDone(isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * sets name of task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param name name of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * sets task to done or not"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @param isDone whether task is done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * gets name of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return name of task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns date of task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return date of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getIsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return isDone + name;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 61
    }
  },
  {
    "path": "src/main/java/todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": " * class of a to do task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class todo extends task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * return name of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return name of task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns to do type"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return  to do type"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getTaskType(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"[T]\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * returns the task info to be printed as string"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     * @return task info in string format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + \" \" + getName();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 35
    }
  }
]
