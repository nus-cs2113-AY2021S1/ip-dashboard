[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static boolean isNumeric(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command \u003d\u003d null) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            double d \u003d Double.parseDouble(command);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    function to check whether is numeric"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static String checkType(String command) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        String type \u003d \"invalid\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"[D]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline is empty!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (!command.contains(\"/\")) {//if there is no \u0027/by\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline has no date!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.indexOf(\"/\") \u003d\u003d 9) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Deadline has no description!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"[E]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event is empty!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (!command.contains(\"/\")) {//if there is no \u0027/at\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event has no date!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.indexOf(\"/\") \u003d\u003d 6) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Event has no description!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"[T]\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                throw new DukeException(\"Todo is empty!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return type;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                if (isNumeric(command.substring(5)))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    type \u003d \"done\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type \u003d \"invalidDone\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new DukeException(\"Please enter a number after done!\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"list\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"bye\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (type.equals(\"invalid\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            throw new DukeException(\"I do not understand, please enter a valid command!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    function to check the command type"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    function to check if the command is valid"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0406981"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public static task createTask(String type, int numOfTasks, String command) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        numOfTasks++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        task aTask;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (type.equals(\"[E]\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            aTask \u003d new event(command, numOfTasks, false, type);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else if (type.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            aTask \u003d new event(command, numOfTasks, false, type);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            aTask \u003d new todo(command, numOfTasks, false, type);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added the task:\" + \"\\n\" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                aTask + \"\\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                numOfTasks + \" tasks are in the list\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return aTask;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        System.out.println(\"Hello, what can I do for you?\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        int MAX_TASK \u003d 100;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        task[] tasks \u003d new task[MAX_TASK];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            array to store the tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0406981"
        },
        "content": "         */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        Integer numOfTasks \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            number of tasks currently in the list"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0406981"
        },
        "content": "         */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                String command;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                command \u003d in.nextLine();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                Integer length \u003d command.length();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                String type \u003d checkType(command);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            type is the type of task, event/to do/deadlines"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0406981"
        },
        "content": "             */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                if (type.equals(\"bye\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    System.out.println(\"See you again :)\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                } else if (type.equals(\"list\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                        System.out.println(tasks[i].getNumber() + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                } else if (type.equals(\"done\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    Integer toBeSet \u003d Integer.parseInt(command.substring(5, length)) - 1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    /*"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    the task number to be set to done"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    if (toBeSet \u003e numOfTasks - 1) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                        System.out.println(\"Invalid done command, number is out of range ):\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                        /*"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                        to catch if the user tries to enters an invalid task number"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                         */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    tasks[toBeSet].setDone(true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    System.out.println(\"Nice, the following task has been marked as done :)\" + \"\\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                            tasks[toBeSet]);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                } else if (type.equals(\"[E]\") || type.equals(\"[T]\") || type.equals(\"[D]\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    tasks[numOfTasks] \u003d createTask(type,numOfTasks,command);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                    numOfTasks++;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "e0406981"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0406981": 160,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 5
    }
  },
  {
    "path": "src/main/java/deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class deadline extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public deadline(String name, Integer number, boolean isDone, String taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name, number, isDone, taskType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.date \u003d name.substring(name.indexOf(\u0027/\u0027)+1);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name.substring(name.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name.substring(9, name.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + getName() + \" \" + date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 24
    }
  },
  {
    "path": "src/main/java/event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class event extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public event(String name, Integer number, boolean isDone, String taskType){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name,number,isDone,taskType);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.date \u003d name.substring(name.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name.substring(name.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name.substring(6, name.indexOf(\u0027/\u0027));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + getName() + \" \" + date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0406981": 23
    }
  },
  {
    "path": "src/main/java/task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private Integer number;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public task(String name, Integer number, boolean isDone, String taskType) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setName(name);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setNumber(number);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setDone(isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        setTaskType(taskType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setTaskType(String taskType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setName(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setNumber(Integer number) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public Integer getNumber() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getIsDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"[✓]\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0406981"
        },
        "content": "            return \"[✗]\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String date() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  taskType + isDone + name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0406981"
        },
        "content": "//type + aTask.getIsDone() + \" \" + aTask.getName() + aTask.date()"
      }
    ],
    "authorContributionMap": {
      "e0406981": 59
    }
  },
  {
    "path": "src/main/java/todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0406981"
        },
        "content": "public class todo extends task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public todo(String name, Integer number, boolean isDone, String taskType) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        super(name, number, isDone, taskType);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return name.substring(5);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0406981"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0406981"
        },
        "content": "        return  getTaskType() + getIsDone() + getName();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0406981"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0406981"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0406981": 15
    }
  }
]
