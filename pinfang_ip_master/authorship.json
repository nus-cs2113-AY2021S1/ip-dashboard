[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                System.out.println(i + \".\" + list.get(i - 1));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"You have no task in the list.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void addTask(Task t, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        list.add(t);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\" \" + t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.printf(\"Now you have %d tasks in the list.\\n\", list.size());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void done(int index, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        if (index \u003e list.size() - 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"No such task!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            list.get(index).isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\" \" + list.get(index));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            String command \u003d scan.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            command \u003d command.trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                printList(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else if (command.matches(\"done\\\\s\\\\d*\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                command \u003d command.substring(5);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                int index \u003d Integer.parseInt(command) - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                done(index, taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else if (command.matches(\"todo\\\\s.*\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                command \u003d command.substring(5);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                Task todo \u003d new Todo(command);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                addTask(todo, taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else if(command.matches(\"deadline\\\\s(.*)/by(.*)\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                command \u003d command.substring(9);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                String[] commandWords \u003d command.split(\"/by\",2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                Task deadline \u003d new Deadline(commandWords[0], commandWords[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                addTask(deadline, taskList);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else if (command.matches(\"event\\\\s(.*)/at(.*)\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                command \u003d command.substring(6);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                String[] commandWords \u003d command.split(\"/at\",2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                Task event \u003d new Event(commandWords[0], commandWords[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                addTask(event, taskList);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                    throw new DukeException(command);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                } catch (DukeException error) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                    System.out.print(error);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                } finally {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                    System.out.println(\"Please enter your task again.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 102,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private boolean hasTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public DukeException(String command) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        if (!command.contains(\"/at\") || !command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            hasTime \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private String error() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private String inCompleteMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    private String noTiming() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \"☹ OOPS!!! Please specify a time / date.\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        if (command.equals(\"todo\") || command.equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            message \u003d inCompleteMessage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        } else if (command.startsWith(\"deadline\") || command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            if (hasTime) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                message \u003d inCompleteMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pinfang"
        },
        "content": "                message \u003d noTiming();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pinfang"
        },
        "content": "            message \u003d error();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 41
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \" [D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 15
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \" [E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 15
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "         this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "         this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 19
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pinfang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pinfang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pinfang": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pinfang"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pinfang"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "deadline project /by Sat"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": "event meeting /at 5pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pinfang"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pinfang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pinfang"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pinfang"
        },
        "content": "hi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pinfang"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "pinfang": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pinfang"
        },
        "content": "chcp 65001"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pinfang"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pinfang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pinfang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\tasks\\*.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "pinfang": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pinfang"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pinfang"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "pinfang": 2
    }
  }
]
