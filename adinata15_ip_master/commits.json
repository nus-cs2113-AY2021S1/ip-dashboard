{
  "authorDailyContributionsMap": {
    "adinata15": [
      {
        "date": "2020-08-14",
        "commitResults": [
          {
            "hash": "3687dd2462a3fb78ab5dbd886e32340728938241",
            "messageTitle": "Added greeting on Duke",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-15",
        "commitResults": [
          {
            "hash": "ab0289ca351c8e9d6887b128a4d0a5bd579b3c75",
            "messageTitle": "Added Duke\u0027s greeting",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 2,
                "deletions": 1
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-22",
        "commitResults": [
          {
            "hash": "149ccc347cca1a3c4d67db1d9131d8883b807690",
            "messageTitle": "Add tag and fix comment",
            "messageBody": "",
            "tags": [
              "Level-0"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 1
              }
            }
          },
          {
            "hash": "4282731ff169801bbac5af338934be0258c228a8",
            "messageTitle": "Implement Greet, Echo, Exit",
            "messageBody": "",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 37,
                "deletions": 7
              }
            }
          },
          {
            "hash": "a3b2b55ea7b9ebc3c1ed173eb386b98b381ab5ef",
            "messageTitle": "Add Level 2. Add, List Add the ability to store whatever text entered by the user and display them back to the user when requested.",
            "messageBody": "",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 28,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-23",
        "commitResults": [
          {
            "hash": "33d416fa1117c08b4b6bc5fc5034d008cd3b5412",
            "messageTitle": "Level 3. Mark as Done Added mark as done,modify displayList method and new Task class.",
            "messageBody": "",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 46,
                "deletions": 11
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-29",
        "commitResults": [
          {
            "hash": "ee2e77e9db91722fdee2a838daaf33898cca5503",
            "messageTitle": "A-CodingStandard: Follow the Coding Standard Tweak and refactor the code to comply with a given coding standard.",
            "messageBody": "",
            "tags": [
              "A-CodingStandard"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 45,
                "deletions": 25
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-30",
        "commitResults": [
          {
            "hash": "c715280a2a68712dc55d533b97a6f7cde671e454",
            "messageTitle": "Level 4. ToDos, Events, Deadlines Add support for tracking three types of tasks: *ToDos: tasks without any date/time attached to it e.g., visit new theme park. *Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm. *Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 236,
                "deletions": 33
              }
            }
          },
          {
            "hash": "5563f2ac41c80b7947347cffe14ba32c3ca0ce15",
            "messageTitle": "A-CodeQuality. Improve code quality Critically adjust and refactor code to follow SLAP and good coding standards.",
            "messageBody": "",
            "tags": [
              "A-CodeQuality"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 9,
                "deletions": 0
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-31",
        "commitResults": [
          {
            "hash": "a30baf9701a86055bb503214928624835bc3d9ba",
            "messageTitle": "A-TextUiTesting. Automated Text UI Testing Use the input/output redirection technique to semi-automate the testing of Duke.",
            "messageBody": "",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "bat": {
                "insertions": 3,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-07",
        "commitResults": [
          {
            "hash": "2c0beebc477eb4791bee6a8daa22f3f84dc177e0",
            "messageTitle": "Add suggestion from Peer Review",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 52,
                "deletions": 47
              }
            }
          },
          {
            "hash": "96ebfccd8b9070fcc8be923bb126375177a4dc83",
            "messageTitle": "Level 5. Handle Errors Teach Duke to deal with errors such as incorrect inputs entered by the user.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 48,
                "deletions": 7
              }
            }
          },
          {
            "hash": "cfc3e7f4d4dcef108df780a2f317c0858c43e61f",
            "messageTitle": "A-Exceptions: Add DukeException",
            "messageBody": "Add EmptyTodoException and InvalidCommandException.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 8,
                "deletions": 2
              }
            }
          },
          {
            "hash": "cb348aad5505dd094eea8bb50f1c9fe8ebac1d23",
            "messageTitle": "A-Packages. Divide classes into packages Organise files into packages",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 2,
                "deletions": 0
              },
              "java": {
                "insertions": 8,
                "deletions": 8
              },
              "bat": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "a79cc24f3aa083501e319e9c88cfb954812f89c7",
            "messageTitle": "A-Packagas. Edit import to single file format Edit package import statement to single file format.",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 27,
                "deletions": 13
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "adinata15": {
      "java": 389,
      "md": 0,
      "sh": 0,
      "bat": 3,
      "gradle": 0,
      "txt": 11
    }
  },
  "authorContributionVariance": {
    "adinata15": 4937.847
  },
  "authorDisplayNameMap": {
    "adinata15": "CS2113-T13-2 ADI ..NATA"
  }
}
