[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayGreetingMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            storage.loadPastData();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Ui.displayFileNotFound();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        new Duke(Constants.filepath).run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "adinata15": 44
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //handle user input commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static Command parse(String fullCommand) throws InvalidCommandException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //execute command based on user\u0027s input until \"bye\" is entered"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if ("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                fullCommand.startsWith(\"deadline\") ||"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        fullCommand.startsWith(\"event\") ||"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new InvalidCommandException(\"I do not understand that command :(\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 34
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static main.java.duke.common.Constants.MAX_LIST_SIZE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static main.java.duke.common.Constants.MAX_TASK_LENGTH;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //retrieve past saved data"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void loadPastData() throws FileNotFoundException, NullPointerException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        File pastFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String wholeDoc \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //read previous data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Scanner s \u003d new Scanner(pastFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            wholeDoc \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //when file is empty or not created"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (wholeDoc !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //separate entry based on ||"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String[] taskListFile \u003d wholeDoc.split(\"\\\\|\\\\|\", MAX_LIST_SIZE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (int i \u003d 0; i \u003c taskListFile.length - 1; i++) {//minus one to negate for last || on file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                String[] taskDetails \u003d taskListFile[i].split(\"\\\\|\", MAX_TASK_LENGTH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new ToDo(taskDetails[2], TaskType.TODO, taskDetails[1]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new Event(taskDetails[2], TaskType.EVENT, taskDetails[3], taskDetails[1]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new Deadline(taskDetails[2], TaskType.DEADLINE, taskDetails[3], taskDetails[1]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    System.out.println(\"Error occur on retrieving previous data\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //save all list data"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            File storageFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (!storageFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                storageFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (!storageFile.exists()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                storageFile.createNewFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (Task task : TaskList.getTasks()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                task.saveToFile(fw);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 80
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display current list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayList() throws EmptyTaskListException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (TaskList.getTasks() \u003d\u003d null) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"Your task list is empty\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //print out all list\u0027s items"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            TaskList.getTasks().get(i).displayListPerTask(i);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print delete task message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayDeleteMessage(Task removedTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%s][%s] %s\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                removedTask.getTaskType(), removedTask.getStatusIcon(), removedTask.getDescription(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display bye message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayByeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print(\" Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display greeting message"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayGreetingMessage() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" What can I do for you?\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display error when invalid command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayInvalidCommandMessage() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display error when todo field is empty"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayEmptyTodoMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display file not found error message"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayFileNotFound() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\" Are you first time user?\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" I am unable to find your past data\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //activate scanner"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\"Unable to continue because \" + message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 94
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public AddCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //first word of user\u0027s input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String commandType \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (fullCommand.split(\" \")[1].isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                throw new InvalidCommandException(\"Something is missing in your command\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            int descriptionStartIndex \u003d fullCommand.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            int descriptionEndIndex \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String description \u003d descriptionEndIndex \u003d\u003d -1 ?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    fullCommand.substring(descriptionStartIndex) :"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    fullCommand.substring(descriptionStartIndex, descriptionEndIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String time;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //create task type based on user input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                newTask \u003d new ToDo(description, TaskType.TODO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                time \u003d fullCommand.split(\"/by\")[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                newTask \u003d new Deadline(description, TaskType.DEADLINE, time);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                time \u003d fullCommand.split(\"/at\")[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                newTask \u003d new Event(description, TaskType.EVENT, time);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                throw new InvalidCommandException(\"I don\u0027t understand that :(\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            TaskList.addTasks(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            storage.saveData();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            newTask.respondOnAdd();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            System.out.println(\"Some parts of the command are missing\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 59
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Command(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    protected void setExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidCommandException, EmptyTaskListException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if(tasks.checkEmpty()){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"delete\" as task index"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //leave out the removed task from list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayDeleteMessage(removedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 29
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.checkEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"done\" as task index"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //mark task as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.getTask(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.getTask(taskIndex).printDoneMsg();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 27
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ExitCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayByeMessage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        setExit();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.checkEmpty()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 22
    }
  },
  {
    "path": "src/main/java/duke/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_LIST_SIZE \u003d 100;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_TASK_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String filepath \u003d \"./data/duke.txt\";//file path from root file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 8
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class EmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public EmptyTaskListException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String by;//deadline due time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Deadline(String description, TaskType taskType, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Deadline(String description, TaskType taskType, String by, String doneStatus) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return deadline\u0027s by time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display deadline information on list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (by:%s)\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), by"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \"|\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + getDescription() + \"|\" + by + \"||\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (by:%s)\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), getBy(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String at;//event time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Event(String description, TaskType taskType, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Event(String description, TaskType taskType, String at, String doneStatus) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return event\u0027s at time"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display event information on list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (at:%s)\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \"|\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + getDescription() + \"|\" + at + \"||\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (at:%s)\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), getAt(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isDone;//task condition"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final TaskType taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task(String description, TaskType taskType, String doneStatus) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d doneStatus.equals(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print out done/undone symbol"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task type character"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        char taskTypeChar;//char to represent task type"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027U\u0027;//undefined task type"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return taskTypeChar;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //save task to file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void saveToFile(FileWriter fw) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getStringToFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //mark task as done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print task done message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void printDoneMsg() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" [%s] %s\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getStatusIcon(), description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display task information on list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription()"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract String getStringToFile();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract void respondOnAdd();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 91
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(Constants.MAX_LIST_SIZE);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void addTasks(Task addedTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(addedTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task remove(int taskIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public boolean checkEmpty() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 32
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": "//Enum for types of tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    TODO,EVENT,DEADLINE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ToDo(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ToDo(String description, TaskType taskType, String doneStatus) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + \"|\" + getDescription() + \"||\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 34
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "T|0|read book||T|0|read book||T|0|read book||T|0|read book||"
      }
    ],
    "authorContributionMap": {
      "adinata15": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "adinata15": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "if not exist ../bin mkdir ../bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "javac  -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/common/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin main/java/duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "adinata15": 3
    }
  }
]
