[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "## Welcome to Adi\u0027s Duke Project"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Hi! Welcome to Adi\u0027s **Duke** project :smiley:. This is an automated **Task Scheduler** that can change your life forever (hopefully...:neutral_face:)."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Add task (Todo, Event, Deadline) :notebook:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "List tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Delete task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Mark task as done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Find task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Storage of past data"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Create a todo items"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`todo [task_description]`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`todo eat`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   [T][not done] eat"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Create an event items"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`event [task_description] /at[event_time]`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`event meet Obama /at 2020-12-12`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   [E][not done] meet Obama  (at: Dec 12 2020)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Create an deadline items"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`deadline [task_description] /by[deadline_time]`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`deadline approve internship /by 2020-12-12`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   [D][not done] approve internship  (by: Dec 12 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   "
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Now you have 5 tasks in the list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Display list :page_facing_up:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adinata15"
        },
        "content": " 1.[T][not done] eat"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adinata15"
        },
        "content": " 2.[E][not done] sleep  (at: Feb 23 2020)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adinata15"
        },
        "content": " 3.[E][not done] meet Obama  (at: Dec 12 2020)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adinata15"
        },
        "content": " 4.[D][not done] approve internship  (by: Dec 12 2020)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Mark task as done :heavy_check_mark:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`done [task_number]`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adinata15"
        },
        "content": " [done] eat"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Delete a task :no_entry_sign:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`delete [task_number]`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adinata15"
        },
        "content": "   [T][done] eat"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "adinata15"
        },
        "content": " "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Find task based on description :mag:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "adinata15"
        },
        "content": "`find internship`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "adinata15"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "adinata15"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "adinata15"
        },
        "content": "1.[D][not done] approve internship  (by: Dec 12 2020)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "adinata15"
        },
        "content": "### Many more to come :smiley:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "adinata15"
        },
        "content": "## Contributors"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "adinata15"
        },
        "content": "This is a solo project TT."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "adinata15"
        },
        "content": "## Contact Us"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "adinata15"
        },
        "content": "- **Bug reports**, **Suggestions** : Email to [this email](adinatatan99@gmail.com) of you have any querries or suggestions."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "adinata15"
        },
        "content": "- **Contributing** : We welcome pull requests. Simply fork [this repository](https://github.com/adinata15/ip)"
      }
    ],
    "authorContributionMap": {
      "-": 21,
      "adinata15": 152
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.common.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Entry point of the Address Book application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Sets up the required objects and loads up the data from the storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param filePath path to storage file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayGreetingMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            storage.loadPastData();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Ui.displayFileNotFound();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Reads and executes user command until \"bye\" is entered."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        new Duke(Constants.filepath).run();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "adinata15": 56
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Parses user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Determines command based on user\u0027s input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param fullCommand user\u0027s input command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return command based on user\u0027s input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws InvalidCommandException if user\u0027s input is invalid"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static Command parse(String fullCommand) throws InvalidCommandException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new ExitCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new ListCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if (fullCommand.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else if ("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                fullCommand.startsWith(\"deadline\") ||"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        fullCommand.startsWith(\"event\") ||"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        fullCommand.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return new AddCommand(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new InvalidCommandException(\"I do not understand that command :(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 43
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static main.java.duke.common.Constants.MAX_LIST_SIZE;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static main.java.duke.common.Constants.MAX_TASK_LENGTH;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Manages data storage and retrieval."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Process past storage data."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws FileNotFoundException if old file cannot be retrieved"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void loadPastData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        File pastFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String wholeDoc \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //read previous data"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Scanner s \u003d new Scanner(pastFile);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            wholeDoc \u003d s.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //when file is empty or not created"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (wholeDoc !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //separate entry based on ||"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String[] taskListFile \u003d wholeDoc.split(\"\\\\|\\\\|\", MAX_LIST_SIZE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (int i \u003d 0; i \u003c taskListFile.length - 1; i++) {//minus one to negate for last || on file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                String[] taskDetails \u003d taskListFile[i].split(\"\\\\|\", MAX_TASK_LENGTH);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new ToDo(taskDetails[2], TaskType.TODO, taskDetails[1]));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new Event(taskDetails[2], TaskType.EVENT, LocalDate.parse(taskDetails[3]), taskDetails[1]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    TaskList.getTasks().add(new Deadline(taskDetails[2], TaskType.DEADLINE, LocalDate.parse(taskDetails[3]), taskDetails[1]));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    System.out.println(\"Error occur on retrieving previous data\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Save data to storage."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            File storageFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (!storageFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                storageFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (!storageFile.exists()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                storageFile.createNewFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (Task task : TaskList.getTasks()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                task.saveToFile(fw);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 90
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Handles interaction with user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Display current task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws EmptyTaskListException if task list is empty"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayList() throws EmptyTaskListException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (TaskList.getTasks() \u003d\u003d null) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"Your task list is empty\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Here are the tasks in your list:\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //print out all list\u0027s items"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        for (int i \u003d 0; i \u003c TaskList.getTasks().size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            TaskList.getTasks().get(i).displayListPerTask(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print delete task message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayDeleteMessage(Task removedTask) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%s][%s] %s\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                removedTask.getTaskType(), removedTask.getStatusIcon(), removedTask.getDescription(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display bye message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayByeMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print(\" Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display greeting message"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayGreetingMessage() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" What can I do for you?\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display file not found error message"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayFileNotFound() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Are you first time user?\\n\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" I am unable to find your past data\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Receives user command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return user command as string"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //activate scanner"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return input.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\"Unable to continue because \" + message);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 90
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Handles \"add\" command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public AddCommand(String fullCommand) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Add input task to task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param tasks   current task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param ui      ui manager"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param storage file storage manager"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //first word of user\u0027s input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String commandType \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (fullCommand.split(\" \")[1].isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                throw new InvalidCommandException(\"Something is missing in your command\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String description \u003d extractDescription();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Task newTask \u003d identifyCommand(commandType, description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            TaskList.addTasks(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            storage.saveData();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            newTask.respondOnAdd();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            System.out.println(\"Some parts of the command are missing\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private Task identifyCommand(String commandType, String description) throws InvalidCommandException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        LocalDate time;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //create task type based on user input"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            newTask \u003d new ToDo(description, TaskType.TODO);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            time \u003d LocalDate.parse(fullCommand.split(\"/by\")[1].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            newTask \u003d new Deadline(description, TaskType.DEADLINE, time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            time \u003d LocalDate.parse(fullCommand.split(\"/at\")[1].trim());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            newTask \u003d new Event(description, TaskType.EVENT, time);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new InvalidCommandException(\"I don\u0027t understand that :(\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return newTask;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String extractDescription() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int descriptionStartIndex \u003d fullCommand.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int descriptionEndIndex \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return descriptionEndIndex \u003d\u003d -1 ?"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                fullCommand.substring(descriptionStartIndex) : //for todo"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                fullCommand.substring(descriptionStartIndex, descriptionEndIndex); //for event and deadline"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 80
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Manages and executes user\u0027s command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Command(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Exits Duke program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    protected void setExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throws InvalidCommandException, EmptyTaskListException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Remove given task from task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param tasks   current task list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param ui      ui manager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param storage file storage manager"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws EmptyTaskListException if task list is empty"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.checkEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"delete\" as task index"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //leave out the removed task from list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayDeleteMessage(removedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Mark given task as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param tasks   current task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param ui      ui manager"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param storage file storage manager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws EmptyTaskListException task list is empty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.checkEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"done\" as task index"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d fullCommand.split(\" \")[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //mark task as done"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.getTask(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.getTask(taskIndex).printDoneMsg();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ExitCommand(String fullCommand) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Closes Duke and gives parting message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param tasks   current task list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param ui      ui manager"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param storage file storage manager"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayByeMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        setExit();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 26
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import static java.util.stream.Collectors.toList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int reqDescriptionStartIndex \u003d fullCommand.indexOf(\" \") + 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String reqDescription \u003d fullCommand.substring(reqDescriptionStartIndex);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d filterTasks(reqDescription);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //display matched description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedTasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            matchedTasks.get(i).displayListPerTask(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private ArrayList\u003cTask\u003e filterTasks(String reqDescription) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ArrayList\u003cTask\u003e matchTasks \u003d (ArrayList\u003cTask\u003e) TaskList.getTasks().stream()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                .filter(task -\u003e task.getDescription().contains(reqDescription)).collect(toList());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return matchTasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTaskListException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ListCommand(String fullCommand) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Lists current task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param tasks   current task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param ui      ui manager"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param storage file storage manager"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @throws EmptyTaskListException  if task list is empty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.checkEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTaskListException(\"your task list is empty\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ui.displayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 30
    }
  },
  {
    "path": "src/main/java/duke/common/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Useful constants for Duke application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_LIST_SIZE \u003d 100;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_TASK_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String filepath \u003d \"./data/duke.txt\";//file path from root file"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Signals error when general error is encountered."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Signals error when task list is empty."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class EmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public EmptyTaskListException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 10
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Signals error when user input invalid command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Deadline task functionalities."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private LocalDate by;//deadline due time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Deadline(String description, TaskType taskType, LocalDate by) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Deadline(String description, TaskType taskType, LocalDate by, String doneStatus) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return deadline\u0027s by time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display deadline information on list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (by: %s)\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon().equals(\"done\") ? \"1\" : \"0\") + \"|\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + getDescription() + \"|\" + by + \"||\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (by: %s)\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Event task functionalities."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private LocalDate at;//event time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Event(String description, TaskType taskType, LocalDate at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Event(String description, TaskType taskType, LocalDate at, String doneStatus) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return event\u0027s at time"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display event information on list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (at: %s)\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon().equals(\"done\") ? \"1\" : \"0\") + \"|\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + getDescription() + \"|\" + at + \"||\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (at: %s)\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Task functionalities and objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isDone;//task condition"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private final TaskType taskType;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task(String description, TaskType taskType, String doneStatus) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d doneStatus.equals(\"1\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return (isDone ? \"done\" : \"not done\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task type character"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        char taskTypeChar;//char to represent task type"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027U\u0027;//undefined task type"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return taskTypeChar;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //save task to file"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void saveToFile(FileWriter fw) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getStringToFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //mark task as done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print task done message"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void printDoneMsg() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" [%s] %s\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getStatusIcon(), description"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display task information on list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s\\n\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //abstract methods"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract String getStringToFile();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract void respondOnAdd();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 93
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.common.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Provides general task list object and functionalities for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(Constants.MAX_LIST_SIZE); //Duke task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void addTasks(Task addedTask) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(addedTask);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Retrieve specific task from task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @param taskIndex index of task to be retrieved"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return requested task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task remove(int taskIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * Check the content of task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     * @return state of task (empty or not)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public boolean checkEmpty() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 46
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "//Enum for types of tasks"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    TODO,EVENT,DEADLINE"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 6
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": " * Todo task functionalities."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ToDo(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ToDo(String description, TaskType taskType, String doneStatus) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType, doneStatus);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon().equals(\"done\") ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                + \"|\" + getDescription() + \"||\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), TaskList.getTasks().size()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "adinata15": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "if not exist ../bin mkdir ../bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "javac  -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/common/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin main/java/duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "adinata15": 3
    }
  }
]
