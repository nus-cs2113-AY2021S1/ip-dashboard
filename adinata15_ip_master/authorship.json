[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "E|0|James\u0027 bday|22 Jan||D|1|project Mbot|23 Jan||T|0|sleep||"
      }
    ],
    "authorContributionMap": {
      "adinata15": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.EmptyTodoException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_LIST_SIZE \u003d 100;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_LIST_SIZE);//user\u0027s to-do-list (max 100 items)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final int MAX_TASK_LENGTH \u003d 4;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static final String filepath \u003d \"./data/duke.txt\";//file path from root file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get list size"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static int getListSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //retrieve past saved data"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void handlePastData() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        File pastFile \u003d new File(filepath); // create a File for the given file path"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String wholeDoc \u003d readFile(pastFile);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //when file is empty or not created"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (wholeDoc \u003d\u003d null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return;//skip parsing data"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //convert file entry to tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        parseFile(wholeDoc);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //read file content"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static String readFile(File pastFile) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String wholeDoc \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //read previous data"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            Scanner s \u003d new Scanner(pastFile);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                wholeDoc \u003d s.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            printFileNotFound();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return wholeDoc;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display file not found error message"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void printFileNotFound() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.println(\" Are you first time user?\\n\" +"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \" I am unable to find your past data\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //convert file entry to tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void parseFile(String wholeDoc) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //separate entry based on ||"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String[] taskListFile \u003d wholeDoc.split(\"\\\\|\\\\|\", MAX_LIST_SIZE);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        for (int i \u003d 0; i \u003c taskListFile.length - 1; i++) {//minus one to negate for last || on file"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            String[] taskDetails \u003d taskListFile[i].split(\"\\\\|\", MAX_TASK_LENGTH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            switch (taskDetails[0]) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                addToDoFile(taskDetails);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                addEventFile(taskDetails);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                addDeadlineFile(taskDetails);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                System.out.println(\"Error occur on retrieving previous data\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add deadline from file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addDeadlineFile(String[] taskDetails) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Deadline deadline \u003d new Deadline(taskDetails[2], TaskType.DEADLINE, taskDetails[3]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add event from file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addEventFile(String[] taskDetails) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Event event \u003d new Event(taskDetails[2], TaskType.EVENT, taskDetails[3]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add todo from file"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addToDoFile(String[] taskDetails) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ToDo toDo \u003d new ToDo(taskDetails[2], TaskType.TODO);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(toDo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //save all list data"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void saveData() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath, false);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                task.saveToFile(fw);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            System.out.println(\"Cannot create file; reason: \" + e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //create new dir if required"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void createFile() throws IOException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        File storagefile \u003d new File(filepath);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (storagefile.exists()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (!storagefile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            storagefile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        storagefile.createNewFile();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add user input to list"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void addList(String userInput) throws InvalidCommandException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //first word of user\u0027s input"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String userInputFirstWord \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //create task type based on user input"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (userInputFirstWord) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                addTodo(userInput);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } catch (EmptyTodoException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                displayEmptyTodoMessage();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            addDeadline(userInput);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            addEvent(userInput);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.get(tasks.size() - 1).respondOnAdd();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add event to list"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addEvent(String userInput) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        TaskType taskType;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //start and end index for description"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskDescriptionStartIndex;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskDescriptionEndIndex;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //find start of task description"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskDescriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskDescriptionEndIndex \u003d userInput.indexOf(\"/at\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //assign task\u0027s information"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        description \u003d userInput.substring(taskDescriptionStartIndex + 1, taskDescriptionEndIndex).trim();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String at \u003d userInput.substring(taskDescriptionEndIndex + 3).trim();//+3 to exclude \"/at\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //create and assign information to new event"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Event event \u003d new Event(description, taskType, at);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add deadline to list"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addDeadline(String userInput) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        TaskType taskType;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //start and end index for description"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskDescriptionStartIndex;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskDescriptionEndIndex;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //find start of task description"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskDescriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskDescriptionEndIndex \u003d userInput.indexOf(\"/by\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //assign task\u0027s information"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        description \u003d userInput.substring(taskDescriptionStartIndex + 1, taskDescriptionEndIndex).trim();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String by \u003d userInput.substring(taskDescriptionEndIndex + 3).trim();//+3 to exclude \"/by\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //create and assign information to new deadline"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, taskType, by);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //add todo to list"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void addTodo(String userInput) throws EmptyTodoException {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        TaskType taskType;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //start index for description"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskDescriptionStartIndex;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //find start of task description"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskDescriptionStartIndex \u003d userInput.indexOf(\" \");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //assign task\u0027s information"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        description \u003d userInput.substring(taskDescriptionStartIndex + 1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //check whether todo description is valid"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        if (taskDescriptionStartIndex !\u003d 4 || description.isEmpty()) { //4 is for \"todo\" letter"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            throw new EmptyTodoException();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //create and assign information to new ToDo"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        ToDo toDo \u003d new ToDo(description, taskType);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.add(toDo);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display current list"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //print out all list\u0027s items"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            tasks.get(i).displayListPerTask(i);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //handle user input commands"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void handleCommand() {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //activate scanner"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String userInput; //user input"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //scan user\u0027s input"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //execute command based on user\u0027s input until \"bye\" is entered"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                //display list"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                displayList();"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                //mark the given activity as done"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                markDone(userInput);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                //delete the given activity"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                deleteTask(userInput);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                //add user input to list"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    addList(userInput);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                    displayInvalidCommandMessage();"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            //receive next user command"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            userInput \u003d input.nextLine();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //mark an activity as done"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void markDone(String userInput) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"done\" as task index"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //mark task as done"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.get(taskIndex - 1).markAsDone();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        tasks.get(taskIndex - 1).printDoneMsg();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //delete an activity"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void deleteTask(String userInput) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //take word after \"delete\" as task index"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String taskIndexString \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        // convert taskIndexString into an integer"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexString);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        //leave out the removed task from list"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        Task removedTask \u003d tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        displayDeleteMessage(removedTask);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print delete task message"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void displayDeleteMessage(Task removedTask) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%s][%s] %s\\n\" +"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\","
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                removedTask.getTaskType(), removedTask.getStatusIcon(), removedTask.getDescription(), tasks.size()"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display bye message"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void displayByeMessage() {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display greeting message"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void displayGreetingMessage() {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display error when invalid command"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void displayInvalidCommandMessage() {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display error when todo field is empty"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private static void displayEmptyTodoMessage() {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.print("
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" ☹ OOPS!!! The description of a todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //main function"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        displayGreetingMessage();"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        handlePastData();"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        handleCommand();"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        saveData();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        displayByeMessage();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "adinata15": 353
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 6
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String by;//deadline due time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Deadline(String description, TaskType taskType, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (by: %s)\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), getBy(), Duke.getListSize()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return deadline\u0027s by time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display deadline information on list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (by: %s)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), by"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getBy() + \"||\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String at;//event time"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Event(String description, TaskType taskType, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s (at: %s)\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), getAt(), Duke.getListSize()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //return event\u0027s at time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display event information on list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s (at: %s)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription(), at"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \"|\" + getDescription() + \"|\" + getAt() + \"||\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private String description;//task description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private boolean isDone;//task condition"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    private TaskType taskType;//task type"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print out done/undone symbol"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //get task type character"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public char getTaskType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        char taskTypeChar;//char to represent task type"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            taskTypeChar \u003d \u0027U\u0027;//undefined task type"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return taskTypeChar;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //save task to file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void saveToFile(FileWriter fw) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getStringToFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "adinata15"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //mark task as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //print task done message"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void printDoneMsg() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" [%s] %s\\n\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getStatusIcon(), description"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //display task information on list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void displayListPerTask(int taskIndex) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf(\" %d.[%c][%s] %s\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , taskIndex + 1, getTaskType(), getStatusIcon(), getDescription()"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract void respondOnAdd();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public abstract String getStringToFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 87
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": "//Enum for types of tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    TODO,EVENT,DEADLINE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public ToDo(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        super(description, taskType);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //respond after successful addition to list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public void respondOnAdd() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        System.out.printf("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"   [%c][%s] %s\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \" Now you have %d tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                        \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "adinata15"
        },
        "content": "                , getTaskType(), getStatusIcon(), getDescription(), Duke.getListSize()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "adinata15"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    //generate string for File save"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    public String getStringToFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        String textToAppend \u003d getTaskType() + \"|\" + (getStatusIcon() \u003d\u003d \"\\u2713\" ? \"1\" : \"0\") + \"|\" + getDescription() + \"||\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "adinata15"
        },
        "content": "        return textToAppend;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "adinata15"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "adinata15"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "adinata15": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "adinata15"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "adinata15"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "adinata15"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "adinata15"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "adinata15"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "adinata15"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "adinata15"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "adinata15"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "adinata15": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "adinata15"
        },
        "content": "if not exist ../bin mkdir ../bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "adinata15"
        },
        "content": "javac  -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/exception/*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "adinata15"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin main/java/duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "adinata15": 3
    }
  }
]
