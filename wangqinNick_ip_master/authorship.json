[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ch1 align\u003d\"center\"\u003eDuck\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ch3 align\u003d\"center\"\u003eTask manager app powered by JavaFX\u003c/h3\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003cp align\u003d\"center\"\u003e\u003cem\u003eQin Wang\u003c/em\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003cp align\u003d\"center\"\u003e\u003cimg src\u003d\"docs/ui.gif\" width\u003d\"100%\"/\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## About Duck"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Duck is a task manage system. 嘎嘎"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "This application was written for CS2113T Software Engineering as part of its Individual Project. In this project, we"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "are expected to learn more about SE principles and practices and apply them on a medium-sized Team Project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Ensure that `Java 11` or above is installed in your Computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "1.   Download the latest `Duck.jar` [_here_](https://github.com/wangqinNick/ip/releases/download/v0.2/duck.jar)."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "2.   Double click the jar file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "3.   Enter the correct `username` and `password` (default username is `duck` default password is `123`) ,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     then press `ENTER` key (or the login button)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Please refer [_here_](https://wangqinnick.github.io/ip/) for more detailed user guide."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "  ![Alt Text](./docs/duck.jpg)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "  "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "  "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Wanna be a sponsor?"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     Ehhh... Next time!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 32
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    //id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    version \u003d \"14\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027,\u0027javafx.media\u0027 ,\u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation \u0027com.google.code.gson:gson:2.8.6\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation \u0027org.apache.commons:commons-io:1.3.2\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    mainClassName \u003d \"seedu.duck.Duck\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    archiveName \u003d \u0027duck.jar\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    destinationDir \u003d file(\"${buildDir}/jar/\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "//checkstyle {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "//    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "//}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 30,
      "-": 26
    }
  },
  {
    "path": "data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "duck"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "123"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "# Duck - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "By: `Wang Qin` Since: `Sep 2020`"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* [1. Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* [2. Quick Start](#quick-start)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* [3. Features](#features)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.1. Add a task:](#addtask) `add`"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.2. Undo previous operations:](#undo) `undo`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.3. Delete a task:](#delete) `delete`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.4. Mark a task as done:](#done) `done`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.5. Check all task due/happene on a certain date:](#due) `due`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.6. Search tasks by a keyword:](#find) `find`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.7. List all tasks:](#list) `list`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.8. Delete all tasks:](#clear) `clear`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.9. Display system preferences:](#sys) `sys` "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.10. Change system language:](#change) `change`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.11. Allow entering duplicated tasks:](#allow) `allow`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.12. Change username:](#username) `username`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.13. Change password:](#pw) `pw`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.14. Traverse history command:](#Navi) `UP``DOWN`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.15. Display all functions:](#help) `help`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    + [3.16. Exit the program:](#bye) `bye`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* [4. FAQ](#faq)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* [5. Command Summary](#command-summary)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"introduction\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "##  1. Introduction"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Duck is a task manage system"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Ensure that `Java 11` or above is installed in your Computer."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Download the latest `Duck.jar` [_here_](https://github.com/JosephLimWeiJie/duke/releases/download/v0.2.0/duke.jar)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Double click the jar file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*    Enter the correct `username` and `password` (default username is `duck` default password is `123`) ,then press `ENTER` key"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "  ![Alt Text](./login.gif)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "No. | Command | Purpose | Syntax"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "----|---------|---------|-------"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "1|todo |Add a `todo` task|_todo \\\u003ctaskname\\\u003e_"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "2|deadline | Add a `deadline` task|_deadline \\\u003ctaskname\\\u003e /by \\\u003cdeadline datetime\\\u003e_"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "3|event|Add an `event` task|_event \\\u003ctask name\\\u003e /at \\\u003cstart datetime\\\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "4|undo|Undo a `DATA-EDIT` operation|_undo_"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "5|delete|Delete a task|_delete \\\u003cindex\\\u003e_"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "6|done|Mark a task as done|_done \\\u003cindex\\\u003e_"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "7|due|Check all tasks on a specific date|_due \\\u003cdate\\\u003e_"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "8|find|Search tasks by keyword|_find \\\u003ckeyword\\\u003e_"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "9|list|List all tasks|_list_"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "10|clear|Delete all tasks|_clear_"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "11|sys|Display system preferences|_sys_"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "12|change|Change system language|_change \\\u003cpara\\\u003e_"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "13|allow|Allow user entering duplicated tasks|_allow \\\u003cpara\\\u003e_"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "14|name|Change username|_name \\\u003cnew username\\\u003e_"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "15|pw|Change password|_pw \\\u003cnew password\\\u003e_"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "16|UP/DOWN|Traverse history command|_UP/DOWN_"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "17|help|Display all functions|_help_"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "18|bye|Exit the program|_exit_"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"addtask\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.1 Add a task: `add`"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Adds a task into Duck"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "There are two ways of adding tasks to the system."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The first (recommanded) way is using the \u0027menu bar\u0027 at the top left corner of the program."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "It is recommanded because you can select the date using the calendar."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "This function is inspired from A-BetterGUI part, from le0tan\u0027s project."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Click the \u0027New\u0027 -\u003e \u0027Task\u0027"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Select the corret task type "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Enter \u0027task infomation\u0027 and select \u0027date\u0027 if neccessary"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./add_task_through_bar.gif)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The second way of adding tasks is through through the command line."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Format**: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `deadline TASK_DESCRIPTION /by DATE_TIME`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `event TASK_DESCRIPTION /at START_DATE_TIME`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Examples**:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `todo return book`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `deadline Thesis submission /by 12-12-2019`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * `event Wedding Ceremony /at 12-12-2019`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./add_todo.gif)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"undo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.2. Undo previous operations: `undo`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "This command allows you undo your previous \u0027DATA-EDIT\u0027 operations."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u0027DATA-EDIT\u0027operations refer to those operations that modify the task list in the system. "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Some examples for \u0027DATA-EDIT\u0027operations are \u0027add task\u0027, \u0027clear\u0027, \u0027delete\u0027, \u0027done\u0027."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "In the example gif below, the user deleted all his tasks mistakenly, he tries to undo the operation by this command."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `undo`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "![Alt Text](./undo.gif)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.3 Delete a task: `delete`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Deletes a specified task from Duke."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `delete INDEX`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Examples**:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * delete 1"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * delete 2"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * Deletes the task at the specified INDEX."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * The index refers to the index number shown on the displayed task list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * The index must be a positive number 1,2,3,..."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./delete_command.gif)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"done\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.4 Mark a task as done: `done`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "You can simply mark a task as done by its index."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format** : `done` + task index"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Example**: `done 1`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "```javascript"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * The index refers to the index number shown on the displayed task list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * The index must be a positive number 1,2,3,.."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./done.gif)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"due\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.5 Check all tasks on a specific date: `due`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Check all tasks on a specific date"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `due`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Example**: `due 12-12-2020`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./due.gif)"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"find\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.6 Search tasks by a keyword: `find`"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Search tasks by a keyword."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `find` + INDEX"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Examples**:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * find book"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.7. List all tasks: `list`"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "List all tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Sometimes you may have a very long task list, you can always scroll up / down with you mouse."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `list`"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"clear\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.8. Delete all tasks: `clear`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "This command allows you quickly delete all you current tasks."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "It could be dangerous if you mistakenly use this command. "
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "However, you can always use `undo` command to recover your data."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `clear`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Example**:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * clear"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./clear.gif)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"sys\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.9 Display system preferences: `sys` "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Display system preferences."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       System language"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       System music"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       System duplicated tasks allowed"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Username"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*       Password"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `sys`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./sys.gif)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"change\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.10 Change system language: `change`"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Changes the system display language."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Both upper-case and lower-case formats are accepted."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The default language is English."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "(The duck system supports English and Chinese)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `change Language`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Example**:"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * change Chinese"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./change_language.gif)"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"allow\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.11 Allow user entering duplicated tasks: `allow`"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Change the setting about duplicated tasks."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The parameter `0` means not allowing duplicated tasks."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The parameter `1` means not allowing duplicated tasks."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The default setting for duplicated tasks is allowing duplicated tasks."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `allow` + parameter"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Example**:"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * allow 0"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./allow.gif)"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"username\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.12 Change username: `username`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Duck allows you customize your username. "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "However, since the username is used when you login the system, make sure you remember the username."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Incase you forget your username, you can always find it inside the `data` folder."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The first line is the username."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The default username is `duck`."
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `username` + username"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Example**:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * username duck"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./name.gif)"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"pw\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.13 Change password: `pw`"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Duck allows you customize your password as well. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "However, since the username is used when you login the system, make sure you remember the password."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Incase you forget your password, you can always find it inside the `data` folder."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The second line is the password."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The default password is `123`."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `pw`"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "* **Example**:"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    * pw 123"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ![Alt Text](./pw.gif)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"Navi\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.14 Traverse history command: `UP``DOWN`"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Want to input a command quickly?"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "If you have used the command previously, then congratulation! "
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "You can easily navigate previous command by press the `UP``DOWN` key on you keyboard."
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `UP``DOWN`"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./traverse_history_command.gif)"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    "
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"help\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.15 Display all functions: `help`"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Unfamililar with some DUCK commands?"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The help command is designed for you to quickly check all possible commands."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "There are two ways of displaying all the commands."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The first way is using the menu bar at the top left corner."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "`Help` -\u003e `Display Help Message`"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "   ![Alt Text](./help_bar.gif)"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The second way is using the command line by typing in `help`."
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `help`"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "### 3.16 Exit the program: `exit`"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "Exit the program."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "The program will automatically save all your tasks before it closes."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "**Format**: `exit`"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"faq\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## 4. FAQ"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*Q1:* Why the program name is DUCK?"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*A:* Quake, Quake!"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*Q2:* What is the backgound music used in the program?"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*A:* https://www.bilibili.com/video/BV1VZ4y1u7qy "
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*Q3:* Why the jar file is larger than others?"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "*A:* Because the jar file includes several third-party libraries.  "
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "\u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "## 5. Summary of Commands"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "No. | Command | Purpose | Syntax"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "----|---------|---------|-------"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "1|todo |Add a \u0027todo\u0027 task|_todo \\\u003ctaskname\\\u003e_"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "2|deadline | Add a \u0027deadline\u0027 task|_deadline \\\u003ctaskname\\\u003e /by \\\u003cdeadline datetime\\\u003e_"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "3|event|Add an \u0027event\u0027 task|_event \\\u003ctask name\\\u003e /at \\\u003cstart datetime\\\u003e"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "4|undo|Undo a \u0027DATA-EDIT\u0027 operation|_undo_"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "5|delete|Delete a task|_delete \\\u003cindex\\\u003e_"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "6|done|Mark a task as done|_done \\\u003cindex\\\u003e_"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "7|due|Check all tasks on a specific date|_due \\\u003cdate\\\u003e_"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "8|find|Search tasks by keyword|_find \\\u003ckeyword\\\u003e_"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "9|list|List all tasks|_list_"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "10|clear|Delete all tasks|_clear_"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "11|sys|Display system preferences|_sys_"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "12|change|Change system language|_change \\\u003cpara\\\u003e_"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "13|allow|Allow user entering duplicated tasks|_allow \\\u003cpara\\\u003e_"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "14|name|Change username|_name \\\u003cnew username\\\u003e_"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "15|pw|Change password|_pw \\\u003cnew password\\\u003e_"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "16|UP/DOWN|Traverse history command|_UP/DOWN_"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "17|help|Display all functions|_help_"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "18|bye|Exit the program|_exit_"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 366,
      "-": 11
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duck.command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "@rem Get duck.command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "@rem Slurp the duck.command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "@rem Setup the duck.command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 4,
      "-": 99
    }
  },
  {
    "path": "src/main/java/seedu/duck/Duck.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Duck {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Application.launch(DuckApp.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 10
    }
  },
  {
    "path": "src/main/java/seedu/duck/DuckApp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.event.EventHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.PasswordField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.effect.DropShadow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.effect.Reflection;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.input.KeyEvent;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.GridPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.StateManager;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.gui.MainStage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_FONT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_SIZE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.DUCK_LOGIN;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.INCORRECT_USER_OR_PW;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * Runs the application."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DuckApp extends Application {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DuckApp() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * init the program:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * initialize the task manager, io manager, and the state manager"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void init() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.initialise();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.initialise();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        IOManager.initialise();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        IOManager.loadList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        StateManager.initialise();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void start(Stage primaryStage) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        primaryStage.setTitle(DUCK_LOGIN);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ImageView duckView \u003d getImageView();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var bp \u003d new BorderPane();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bp.setPadding(new Insets(10, 50, 50, 50));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var hb \u003d new HBox();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hb.setPadding(new Insets(20, 20, 20, 30));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hb.getChildren().add(duckView);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Adding GridPane"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var gridPane \u003d new GridPane();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setPadding(new Insets(20, 20, 20, 20));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setHgap(6);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setVgap(6);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Implementing Nodes for GridPane"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var lblUserName \u003d new Label(\"Username\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final var txtUserName \u003d new TextField();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var lblPassword \u003d new Label(\"Password\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final var pf \u003d new PasswordField();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var btnLogin \u003d new Button(\"Login\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final var lblMessage \u003d new Label();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Adding Nodes to GridPane layout"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(lblUserName, 0, 0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(txtUserName, 1, 0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(lblPassword, 0, 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(pf, 1, 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(btnLogin, 2, 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.add(lblMessage, 1, 2);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Reflection for gridPane"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var r \u003d new Reflection();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        r.setFraction(0.7f);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setEffect(r);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //DropShadow effect"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var dropShadow \u003d new DropShadow();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dropShadow.setOffsetX(5);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dropShadow.setOffsetY(5);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Adding text and DropShadow effect to it"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var text \u003d new Text(DUCK_LOGIN);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        text.setFont(Font.font(DEFAULT_DIALOG_FONT, FontWeight.BOLD, DEFAULT_DIALOG_SIZE * 2));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        text.setEffect(dropShadow);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Adding text to HBox"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hb.getChildren().addAll(text);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Add ID\u0027s to Nodes"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bp.setId(\"bp\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setId(\"root\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        btnLogin.setId(\"btnLogin\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        text.setId(\"text\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Action for btnLogin"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        btnLogin.setOnAction((EventHandler\u003cjavafx.event.ActionEvent\u003e) event -\u003e checkValidationAndLogin(txtUserName, pf, primaryStage, lblMessage));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        gridPane.setOnKeyPressed(new EventHandler\u003cKeyEvent\u003e() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            public void handle(KeyEvent event) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                if (event.getCode() \u003d\u003d KeyCode.ENTER) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    checkValidationAndLogin(txtUserName, pf, primaryStage, lblMessage);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Add HBox and GridPane layout to BorderPane Layout"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bp.setTop(hb);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bp.setCenter(gridPane);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Adding BorderPane to the scene and loading CSS"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var scene \u003d new Scene(bp);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scene.getStylesheets().add(getClass().getClassLoader().getResource(\"login.css\").toExternalForm());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        primaryStage.setScene(scene);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        primaryStage.titleProperty().bind("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                scene.widthProperty().asString()."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        concat(\" : \")."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        concat(scene.heightProperty().asString()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //primaryStage.setResizable(false);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        primaryStage.show();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Configures and Returns the imageView"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the imageView"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ImageView getImageView() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var duck \u003d new Image(this.getClass().getResourceAsStream(\"/images/duck.jpg\"));"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var duckView \u003d new ImageView(duck);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        duckView.setPreserveRatio(true);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        duckView.setFitHeight(400);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        duckView.setFitWidth(200);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        duckView.setOpacity(0.2);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return duckView;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * check Login information: username and username"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * If valid, then login the system"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param txtUserName input username"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param pf input password"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param primaryStage stage"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param lblMessage output information"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void checkValidationAndLogin(TextField txtUserName, PasswordField pf, Stage primaryStage, Label lblMessage) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var checkUser \u003d txtUserName.getText().toString();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var checkPw \u003d pf.getText().toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (checkUser.equals(SystemSetting.getUsername()) \u0026\u0026 checkPw.equals(SystemSetting.getPassword())) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            new MainStage();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            primaryStage.hide();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            lblMessage.setText(INCORRECT_USER_OR_PW);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            lblMessage.setTextFill(Color.RED);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        txtUserName.setText(\"\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        pf.setText(\"\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 181
    }
  },
  {
    "path": "src/main/java/seedu/duck/Executor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.StateManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result after the command is executed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param parsedCommand The input from the user to be executed as a command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return commandResult that contains the execute output information"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static CommandResult executeCommand(Command parsedCommand) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (SystemSetting.getSystemLanguage()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case CHINESE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var commandResult \u003d parsedCommand.executeInChinese();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (parsedCommand.getPromptType() \u003d\u003d PromptType.EDIT){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                StateManager.saveState();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.saveAsJson();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return commandResult;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ie){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format(Message.MESSAGE_FILE_OPERATION_IO_ERROR_IN_CHINESE, Message.JSON_FILE_PATH));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ENGLISH:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                var commandResult \u003d parsedCommand.executeInEnglish();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                if (parsedCommand.getPromptType() \u003d\u003d PromptType.EDIT){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    StateManager.saveState();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                IOManager.saveAsJson();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return commandResult;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (IOException ie){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new CommandResult(String.format(Message.MESSAGE_FILE_OPERATION_IO_ERROR_IN_ENGLISH, Message.JSON_FILE_PATH));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 49
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ChangeLanguageCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Language;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_SYSTEM_LANGUAGE;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.SECONDARY_SYSTEM_LANGUAGE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ChangeLanguageCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"change\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Change the UI language.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \" Chinese\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 改变系统界面语言\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \" Chinese\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String language;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ChangeLanguageCommand(String language) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.language \u003d language;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.NONE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return getCommandResult();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return getCommandResult();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Changes the system language and returns the command result according to the system setting"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result according to the system setting"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private CommandResult getCommandResult() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (language.toUpperCase()){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case SECONDARY_SYSTEM_LANGUAGE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setSystemLanguage(Language.CHINESE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"系统语言已转换为中文\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DEFAULT_SYSTEM_LANGUAGE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setSystemLanguage(Language.ENGLISH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"System Language has been changed to English\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 55
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ChangePasswordCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_PASSWORD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_USERNAME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ChangePasswordCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"pw\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Change the password.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" 123\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 更改密码.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" 123\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final String password;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ChangePasswordCommand(String password) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.password \u003d password;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setPassword(password);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.saveUserInfo();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(DEFAULT_USERNAME);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(DEFAULT_PASSWORD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"Failed! Invasion detected, user Info recovered to default!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"Success!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setPassword(password);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.saveUserInfo();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(DEFAULT_USERNAME);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(DEFAULT_PASSWORD);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"失败! 疑似遭到入侵，用户信息重置为原始默认信息!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"成功!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 56
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ChangeUsernameCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_PASSWORD;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_USERNAME;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ChangeUsernameCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"name\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Change the username.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" duck\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 更改用户名.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" duck\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final String username;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ChangeUsernameCommand(String username) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.username \u003d username;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setUsername(username);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.saveUserInfo();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(DEFAULT_USERNAME);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(DEFAULT_PASSWORD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"Failed! Invasion detected, user Info recovered to default!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"Success!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setUsername(username);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.saveUserInfo();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(DEFAULT_USERNAME);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(DEFAULT_PASSWORD);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(\"失败! 疑似遭到入侵，用户信息重置为原始默认信息!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"成功!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 56
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ChangeVolumeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_SYSTEM_MUSIC;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ChangeVolumeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private double value;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"volume\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Change the volume of the background Music.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": The value should be within 0 - 1.0.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"volume 0.9\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 调整音量.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 指定的值应该在 0 - 1.0.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"volume 0.9\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ChangeVolumeCommand(double value) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.value \u003d value;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.NONE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setBackgroundMediaView(DEFAULT_SYSTEM_MUSIC, value, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"Volume has been changed successfully\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setBackgroundMediaView(DEFAULT_SYSTEM_MUSIC, value, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"音量已修改\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 40
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_CLEAR_SUCCESS_IN_CHINESE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_CLEAR_SUCCESS_IN_ENGLISH;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"clear\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Delete all tasks in the DUCK system.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"clear\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 删除系统中所有的任务.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"clear\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.clear();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(MESSAGE_CLEAR_SUCCESS_IN_ENGLISH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.clear();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(MESSAGE_CLEAR_SUCCESS_IN_CHINESE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 36
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.command.PromptType.NONE;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.INDEX_OFF_SET;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected PromptType promptType \u003d NONE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param targetIndex last visible listing index of the target person"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Extracts the the target person in the last shown list from the given arguments."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws IndexOutOfBoundsException if the target index is out of bounds of the last viewed listing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected Task getTargetTask() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return TaskManager.getTaskList().get(getTargetIndex() - INDEX_OFF_SET);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * get target index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return targetIndex"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return targetIndex;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public PromptType getPromptType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return promptType;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void setPromptType(PromptType promptType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d promptType;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public abstract CommandResult executeInEnglish () ;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public abstract CommandResult executeInChinese () ;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 52
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/** Display the execute result, by constructing a CommandResult object */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructs the CommandResult with information String feedbackToUser"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param feedbackToUser feedback to user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the feedback String in the command result"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the feedback String"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getFeedbackToUser() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 22
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Delete a task in the DUCK system.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"delete 1\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 删除一项指定任务.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"delete 1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS_IN_ENGLISH \u003d \"Task: %1$s is deleted\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS_IN_CHINESE \u003d \"已删除任务: %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeleteCommand(int toDeleteIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(toDeleteIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final var toDelete \u003d getTargetTask();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.removeTask(toDelete);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS_IN_ENGLISH, toDelete.getDescription()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final var toDelete \u003d getTargetTask();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.removeTask(toDelete);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS_IN_CHINESE, toDelete.getDescription()));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 54
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Mark a task as done.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"done 1\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 将指定任务标记为完成.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"done 1\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DONE_IN_ENGLISH \u003d \"  Nice! I\u0027ve marked this duck.task as done:  [D] %s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DONE_IN_CHINESE \u003d \"  好的！我已经将这个任务标记为完成:  [D] %s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DoneCommand(int toDoneIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(toDoneIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final var toDone \u003d getTargetTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            toDone.setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DONE_IN_ENGLISH, toDone.getDescription()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final var toDone \u003d getTargetTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            toDone.setDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format(MESSAGE_DONE_IN_CHINESE, toDone.getDescription()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IndexOutOfBoundsException ie) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 52
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Timeliness;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.DateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.ui.TextUi.getAppendedTasksMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_CHINESE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_ENGLISH;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DueCommand extends Command{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"due\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Find tasks on a specific date.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"due 2-12-2019\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 找出指定日期的所有任务.\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"due 2-12-2019\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private LocalDate searchDate;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructs the \u003cb\u003eDue Command\u003c/b\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e If the \u003ccode\u003especifier\u003c/code\u003e given is \u003ccode\u003eNULL\u003c/code\u003e, the \u003ccode\u003etimeSpecifier\u003c/code\u003e is set to"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ci\u003eon\u003c/i\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param searchDate"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *  The \u003ci\u003edate\u003c/i\u003e to filter the \u003cb\u003eTask List\u003c/b\u003e by"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DueCommand(LocalDate searchDate) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.searchDate \u003d searchDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.NONE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Filters the \u003ci\u003etasks\u003c/i\u003e for \u003ci\u003edeadlines\u003c/i\u003e on the \u003cu\u003esame\u003c/u\u003e \u003ci\u003edate\u003c/i\u003e as the specified search date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e Returns an \u003ccode\u003eArrayList\u003c/code\u003e containing the filtered \u003ci\u003etasks\u003c/i\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *  The \u003ccode\u003eArrayList\u003c/code\u003e of filtered tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ArrayList\u003cTask\u003e filterDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return (ArrayList\u003cTask\u003e) TaskManager.getTaskList().stream()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter((t) -\u003e t instanceof Timeliness)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter((t) -\u003e {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    new DateTime(((Timeliness) t).getDate());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    return true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                })"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter((t) -\u003e new DateTime(((Timeliness) t).getDate()).isOn(searchDate))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var filteredTasks \u003d filterDate();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (filteredTasks.isEmpty()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_EMPTY_LIST_IN_ENGLISH);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var listMessage \u003d getAppendedTasksMessage(filteredTasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult((listMessage));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var filteredTasks \u003d filterDate();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (filteredTasks.isEmpty()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_EMPTY_LIST_IN_CHINESE);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var listMessage \u003d getAppendedTasksMessage(filteredTasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult((listMessage));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 85
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Exit.\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 退出程序.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"bye\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        exitProgram();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        exitProgram();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Exits the runtime."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void exitProgram() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 42
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.ui.TextUi.getAppendedTasksMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Find all tasks matches the given description.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"find book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 找出包含指定关键字的所有任务.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"find 书\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST \u003d \"Can not find any task description \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            +\"contains this keyword\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST_IN_CHINESE \u003d \"找不到包含此关键词的任务\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected String toSearch;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected ArrayList\u003cTask\u003e filteredTaskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public FindCommand(String commandDescription) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.toSearch \u003d commandDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.NONE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filteredTaskList \u003d TaskManager.searchTask(toSearch);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (filteredTaskList.isEmpty()) return new CommandResult(MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var taskListMessage \u003d getAppendedTasksMessage(filteredTaskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(taskListMessage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filteredTaskList \u003d TaskManager.searchTask(toSearch);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (filteredTaskList.isEmpty()) return new CommandResult(MESSAGE_EMPTY_LIST_IN_CHINESE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var taskListMessage \u003d getAppendedTasksMessage(filteredTaskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(taskListMessage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 59
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddTodoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.AllowDuplicatedTaskCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.DisplaySystemSettingCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.HistoryTraverseCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.UndoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Shows program usage instructions.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 现实程序所有可执行命令.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String feedbackToUserInEnglish \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"  \"+ AddTodoCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AddDeadlineCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AddEventCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ UndoCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DeleteCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DoneCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DueCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ FindCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ListCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ HelpCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ClearCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DisplaySystemSettingCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AllowDuplicatedTaskCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ChangeUsernameCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ChangePasswordCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ HistoryTraverseCommand.MESSAGE_USAGE_IN_ENGLISH"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ExitCommand.MESSAGE_USAGE_IN_ENGLISH;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String feedbackToUserInChinese \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"  \"+ AddTodoCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AddDeadlineCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AddEventCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ UndoCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DeleteCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DoneCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DueCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ FindCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ListCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ HelpCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ClearCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ DisplaySystemSettingCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ AllowDuplicatedTaskCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ChangeUsernameCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ChangePasswordCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ HistoryTraverseCommand.MESSAGE_USAGE_IN_CHINESE"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    + \"\\n\" + \"  \"+ ExitCommand.MESSAGE_USAGE_IN_CHINESE;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the execute-result to user in English"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the execute result"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getFeedbackToUserInEnglish() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return feedbackToUserInEnglish;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the execute-result to user in Chinese"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the execute result"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getFeedbackToUserInChinese() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return feedbackToUserInChinese;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command in English"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUserInEnglish);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command in Chinese"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUserInChinese);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 103
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public IncorrectCommand(String commandWord) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.feedbackToUser \u003d commandWord;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.WARNING;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 20
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.ui.TextUi.getAppendedTasksMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_CHINESE;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_ENGLISH;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": List all tasks in the system.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 列出所有任务.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.NONE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (TaskManager.getTaskList().size()\u003e0){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var listMessage \u003d getAppendedTasksMessage(TaskManager.getTaskList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult((listMessage));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_EMPTY_LIST_IN_ENGLISH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (TaskManager.getTaskList().size()\u003e0){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var listMessage \u003d getAppendedTasksMessage(TaskManager.getTaskList());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult((listMessage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_EMPTY_LIST_IN_CHINESE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 55
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/PromptType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * Indicates the type of user commands and corresponding command results"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * WARNING: the command results a waring message"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * INFORMATIVE: the command results a help message"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * EDIT: the command is a EDIT command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * NONE: the command is a basic command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public enum PromptType {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    WARNING,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    INFORMATIVE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    NONE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    EDIT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 15
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/add/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * A dummy class for dummy add command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * The dummy add command is Level-1 for Duck system and was abandoned"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * after having more specific add commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public AddCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public abstract CommandResult executeInEnglish();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public abstract CommandResult executeInChinese();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 21
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/add/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.DeadlineTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.LIST_INDEX_OFFSET;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DEADLINE_SUCCESS_IN_CHINESE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DEADLINE_SUCCESS_IN_ENGLISH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_IN_CHINESE;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final char COMMAND_TYPE \u003d \u0027D\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Add a Deadline task to the DUCK system.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"deadline return book /by 2-12-2019\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 添加一个带有截止日期的任务.\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"deadline 还书 /by 2-12-2019\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final DeadlineTask deadlineTask;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public AddDeadlineCommand(Task deadlineTask) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.deadlineTask \u003d (DeadlineTask) deadlineTask;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (deadlineTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(deadlineTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            //according to the data format"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (deadlineTask.getTaskDate() !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new CommandResult("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        String.format("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                MESSAGE_DEADLINE_SUCCESS_IN_ENGLISH,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                COMMAND_TYPE,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getChar(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getDescription(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getTaskDate().toString()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            MESSAGE_DEADLINE_SUCCESS_IN_ENGLISH,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            COMMAND_TYPE,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getChar(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getDescription(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getTaskDeadlineInString()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (deadlineTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_INVALID_COMMAND_IN_CHINESE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(deadlineTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            //according to the data format"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (deadlineTask.getTaskDate() !\u003d null) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new CommandResult("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        String.format("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                MESSAGE_DEADLINE_SUCCESS_IN_CHINESE,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                COMMAND_TYPE,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getChar(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getDescription(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                deadlineTask.getTaskDate().toString()));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            MESSAGE_DEADLINE_SUCCESS_IN_CHINESE,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            COMMAND_TYPE,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getChar(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getDescription(),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            deadlineTask.getTaskDeadlineInString()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean containsDupTask(){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return  (int)TaskManager.getTaskList().stream()"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getType() \u003d\u003d deadlineTask.getType())"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getDescription().equalsIgnoreCase(deadlineTask.getDescription()))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .count() !\u003d 0;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 112
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/add/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.EventTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.LIST_INDEX_OFFSET;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_ENGLISH;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EVENT_SUCCESS_IN_CHINESE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EVENT_SUCCESS_IN_ENGLISH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final char COMMAND_TYPE \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Add a event task to the DUCK system.\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"event return book /at 2-12-2019\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 添加一个带有开始日期的任务.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"event 电影节 /at 2-12-2019\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final EventTask eventTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public AddEventCommand(Task eventTask) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.eventTask \u003d (EventTask) eventTask;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (eventTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_ENGLISH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(eventTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (eventTask.getTaskDate() !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new CommandResult("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        String.format("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                MESSAGE_EVENT_SUCCESS_IN_ENGLISH,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                COMMAND_TYPE,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getChar(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getDescription(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getTaskDate().toString()));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            MESSAGE_EVENT_SUCCESS_IN_ENGLISH,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            COMMAND_TYPE,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getChar(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getDescription(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getTaskDateInString()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (eventTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(eventTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (eventTask.getTaskDate() !\u003d null) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new CommandResult("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        String.format("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                MESSAGE_EVENT_SUCCESS_IN_CHINESE,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                COMMAND_TYPE,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getChar(),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getDescription(),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                eventTask.getTaskDate().toString()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            MESSAGE_EVENT_SUCCESS_IN_CHINESE,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            COMMAND_TYPE,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getChar(),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getDescription(),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            eventTask.getTaskDateInString()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean containsDupTask(){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return  (int)TaskManager.getTaskList().stream()"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getType() \u003d\u003d eventTask.getType())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getDescription().equalsIgnoreCase(eventTask.getDescription()))"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .count() !\u003d 0;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 111
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/add/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.add;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.TodoTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.LIST_INDEX_OFFSET;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_ENGLISH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_TODO_SUCCESS_IN_CHINESE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_TODO_SUCCESS_IN_ENGLISH;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class AddTodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final TodoTask toAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final char COMMAND_TYPE \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Add a todo task to the DUCK system.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"todo return a book\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 添加一个一般任务.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"todo 回家看看\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public AddTodoCommand(Task toAdd) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.toAdd \u003d (TodoTask)toAdd;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.EDIT;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_ENGLISH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(toAdd);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    MESSAGE_TODO_SUCCESS_IN_ENGLISH,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    COMMAND_TYPE,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getChar(),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getDescription()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (containsDupTask() \u0026\u0026 SystemSetting.isDuplicatedAllowed()){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.add(toAdd);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(String.format("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    MESSAGE_TODO_SUCCESS_IN_CHINESE,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getIndex() + LIST_INDEX_OFFSET,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    COMMAND_TYPE,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getChar(),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    toAdd.getDescription()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean containsDupTask(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return  (int)TaskManager.getTaskList().stream()"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getType() \u003d\u003d toAdd.getType())"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter(task -\u003e task.getDescription().equalsIgnoreCase(toAdd.getDescription()))"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .count() !\u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 77
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/misc/AllowDuplicatedTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class AllowDuplicatedTaskCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"allow\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Change preferences for duplicated tasks. 1 for allowing, 0 for not allowing.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 更改系统设定是否允许重复任务。 1 为允许，0 为不允许。\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD + \" 1\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private boolean isAllowed;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public AllowDuplicatedTaskCommand(boolean isAllowed) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.isAllowed \u003d isAllowed;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setIsDuplicatedAllowed(isAllowed);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"Changed Successfully!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.setIsDuplicatedAllowed(isAllowed);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(\"Changed Successfully!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 37
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/misc/DisplaySystemSettingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DisplaySystemSettingCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"sys\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Shows system preferences.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 显示当前系统设定.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + COMMAND_WORD;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DisplaySystemSettingCommand() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final String feedbackToUserInEnglish \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"  \"+ \"System Language: \" + SystemSetting.getSystemLanguageInString() +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"System Music: \" + SystemSetting.getBackgroundMusicViewInString() +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"System Duplicated tasks: \" + SystemSetting.getIsDuplicatedTaskAllowedInString() +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"Username: \" + SystemSetting.getUsername() +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"Password: \" + SystemSetting.getPassword();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private final String feedbackToUserInChinese \u003d"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"  \"+ \"系统语言: \" + SystemSetting.getSystemLanguageInStringInChinese() +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"系统音乐: \" + SystemSetting.getBackgroundMusicViewInStringInChinese() +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"是否允许重复添加相同任务: \" + SystemSetting.getIsDuplicatedTaskAllowedInStringInChinese() +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"用户名: \" + SystemSetting.getUsername() +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"\\n  \"+ \"密码: \" + SystemSetting.getPassword();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUserInEnglish);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new CommandResult(feedbackToUserInChinese);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 48
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/misc/HistoryTraverseCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public abstract class HistoryTraverseCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"Up / Down arrow\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Traverse up / down the command history.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            \"上下箭头\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 向上/向下浏览命令记录.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 13
    }
  },
  {
    "path": "src/main/java/seedu/duck/command/misc/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.command.misc;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.StateManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"undo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_ENGLISH \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": Undo the last command.\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      Example: \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"undo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_USAGE_IN_CHINESE \u003d COMMAND_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \": 撤销上一步操作.\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"      例子: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            + \"undo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public UndoCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the command result"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the command result"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInEnglish() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            StateManager.undo();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_SUCCESS_IN_ENGLISH);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_UNSUCCESSFUL_IN_ENGLISH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_AT_BEGINNING_IN_ENGLISH);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public CommandResult executeInChinese() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            StateManager.undo();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_SUCCESS_IN_CHINESE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_UNSUCCESSFUL_IN_CHINESE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (EmptyStackException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new CommandResult(MESSAGE_UNDO_AT_BEGINNING_IN_CHINESE);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 59
    }
  },
  {
    "path": "src/main/java/seedu/duck/data/CommandManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class CommandManager {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static int pointer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        commandList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        pointer \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void add(String toAdd){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        pointer \u003d commandList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        commandList.add(pointer, toAdd);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String traverseUpHistoryCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (pointer \u003c\u003d 0){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            //"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        pointer --;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return commandList.get(pointer);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String traverseDownHistoryCommand(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (pointer \u003e\u003d commandList.size()-1){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            //"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        pointer ++;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return commandList.get(pointer);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static ArrayList\u003cString\u003e getCommandList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return commandList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 37
    }
  },
  {
    "path": "src/main/java/seedu/duck/data/State.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class State {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String encodedSavedList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public State(String encodedSavedList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.encodedSavedList \u003d encodedSavedList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getEncodedSavedList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return encodedSavedList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 13
    }
  },
  {
    "path": "src/main/java/seedu/duck/data/StateManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.ByteArrayInputStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.EmptyStackException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.Stack;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class StateManager {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Stack\u003cState\u003e undoStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Stack\u003cState\u003e redoStack \u003d new Stack\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Initialises the screen shot manager with its first screen shot of the starting list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var gson \u003d new GsonBuilder().create();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var encodedSavedList \u003d gson.toJson(TaskManager.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var screenShot \u003d new State(encodedSavedList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert undoStack.isEmpty() : \"Undo stack should be empty!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert redoStack.isEmpty() : \"Redo stack should be empty!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        undoStack.push(screenShot);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns and pops the top state"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the last state"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws EmptyStackException stack is empty"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static State popPreviousScreenShot() throws EmptyStackException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        // There should be at least 2 screen shots to allow undo"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (undoStack.size() \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throw new EmptyStackException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var currentState \u003d undoStack.pop();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        redoStack.push(currentState);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return undoStack.peek();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the last state without pop it"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the last state"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static State peekPreviousScreenShot() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return undoStack.peek();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Reverts to the previous changed state of the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws IOException exception is thrown when error occurred during IO operation."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws EmptyStackException exception is thrown when user trying to undo at the initial state."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void undo() throws IOException, EmptyStackException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var previousState \u003d popPreviousScreenShot();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var encodedSavedList \u003d previousState.getEncodedSavedList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var stream \u003d new ByteArrayInputStream(encodedSavedList.getBytes());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var bufferedReader \u003d new BufferedReader(new InputStreamReader(stream));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Task[] readList \u003d new Gson().fromJson(bufferedReader, Task[].class);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.setTaskList(IOManager.getDecodedTaskList(readList));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bufferedReader.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Saves the moduleList as a string if it was changed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void saveState() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var gson \u003d new GsonBuilder().create();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var encodedSavedList \u003d gson.toJson(TaskManager.getTaskList());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var screenShot \u003d new State(encodedSavedList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (getUndoStackSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            undoStack.push(screenShot);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var previousScreenShot \u003d peekPreviousScreenShot();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var previousEncodedSavedList \u003d previousScreenShot.getEncodedSavedList();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!previousEncodedSavedList.equals(encodedSavedList)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            undoStack.push(screenShot);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (!redoStack.isEmpty()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                redoStack.clear();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the number of states store in th stack"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the stack size"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static int getUndoStackSize() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return undoStack.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 101
    }
  },
  {
    "path": "src/main/java/seedu/duck/data/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/** The task manager*/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static ArrayList\u003cTask\u003e filteredTaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Initialises the TaskManager class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *  The hash map containing NUS provided modules"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.taskList \u003d Objects.requireNonNullElseGet(taskList, ArrayList::new);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filteredTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        TaskManager.initialise(null);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Sets the entire Task List to a new list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param assignedTaskList assigned taskList"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setTaskList(ArrayList\u003cTask\u003e assignedTaskList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        taskList \u003d assignedTaskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the entire Task List"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The Task List"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns true if the task is inside the system"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param description the task description"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return true if the task is inside the system"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static boolean contains(String description) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskList.stream().anyMatch(task -\u003e task.isSameTask(description));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Adds a task into the system"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param toAdd the task to add"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void add(Task toAdd) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (contains(toAdd.getDescription())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            //throw new DuplicateTaskException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            taskList.add(toAdd);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            taskList.add(toAdd);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Removes a task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param toRemove the task"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void removeTask(Task toRemove){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        taskList.remove(toRemove);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns a list of tasks contains the keywords"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Search a key word int the whole list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param toSearch the keyword to search"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return a list of tasks contains the keywords"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static ArrayList\u003cTask\u003e searchTask(String toSearch) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filteredTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filteredTaskList \u003d (ArrayList\u003cTask\u003e)taskList.stream()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .filter((s) -\u003e s.getDescription().contains(toSearch))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return filteredTaskList;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the index of the next task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the index of the next task"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static int getNextIndex(){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Clears all task in the task list"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void clear(){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns true if the task list is empty"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the task list status"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static boolean isEmpty(){"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 121
    }
  },
  {
    "path": "src/main/java/seedu/duck/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 7
    }
  },
  {
    "path": "src/main/java/seedu/duck/exception/InvalidFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class InvalidFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public InvalidFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 6
    }
  },
  {
    "path": "src/main/java/seedu/duck/exception/ParseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class ParseException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public ParseException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 7
    }
  },
  {
    "path": "src/main/java/seedu/duck/exception/StorageOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class StorageOperationException extends IOException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 9
    }
  },
  {
    "path": "src/main/java/seedu/duck/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.Border;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.BorderStroke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.BorderStrokeStyle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static javafx.scene.layout.BorderStroke.MEDIUM;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_BORDER_COLOR;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_COLOR;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_FONT;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_SIZE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.INFORMATIVE_DIALOG_COLOR;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.USER_DIALOG_COLOR;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.WARNING_DIALOG_COLOR;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructs the dialog box with a label and a imageView"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param l the label"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param iv the imageView"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setWrapText(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        iv.setFitWidth(100.0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        iv.setFitHeight(100.0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.getChildren().addAll(l, iv);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the user dialog box after config its label and imageView with certain properties"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param l the label"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param iv the imageView"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the user dialog box contains the label and imageView"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        customLabelAndImageView(l, iv, Color.web(USER_DIALOG_COLOR));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the duck response dialog box with the configured label and imageView"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param l the label"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param iv the imageView"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param promptType the user command\u0027s type"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the duck dialog box with the label and imageView"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv, PromptType promptType) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (promptType){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case WARNING:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            customLabelAndImageView(l, iv, Color.web(WARNING_DIALOG_COLOR));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case INFORMATIVE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            customLabelAndImageView(l, iv, Color.web(INFORMATIVE_DIALOG_COLOR));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case NONE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case EDIT:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            customLabelAndImageView(l, iv, Color.web(DEFAULT_DIALOG_COLOR));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Configs the label and imageView"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param l the label"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param iv the imageView"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param paint the color code"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void customLabelAndImageView(Label l, ImageView iv, Paint paint) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Font font \u003d new Font(DEFAULT_DIALOG_FONT, DEFAULT_DIALOG_SIZE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setFont(font);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setMaxWidth(375);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setMinHeight(50);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setBorder(new Border(new BorderStroke(Color.web(DEFAULT_DIALOG_BORDER_COLOR), BorderStrokeStyle.SOLID, CornerRadii.EMPTY, MEDIUM)));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setBackground(new Background(new BackgroundFill(paint, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        l.setOpacity(0.8);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        iv.setPreserveRatio(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 113
    }
  },
  {
    "path": "src/main/java/seedu/duck/gui/HelpWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javax.swing.text.html.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class HelpWindow {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ImageView imageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private MainStage parentController;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void setParentController(MainStage mainStage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        parentController \u003d mainStage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 17
    }
  },
  {
    "path": "src/main/java/seedu/duck/gui/InfoWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javax.swing.text.html.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class InfoWindow {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ImageView imageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private MainStage parentController;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void setParentController(MainStage mainStage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        parentController \u003d mainStage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 16
    }
  },
  {
    "path": "src/main/java/seedu/duck/gui/MainStage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.beans.value.ChangeListener;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.beans.value.ObservableValue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Menu;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.MenuBar;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.MenuItem;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.input.KeyCode;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.BackgroundImage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.StackPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.media.MediaView;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.DuckApp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.Executor;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.CommandResult;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.HelpCommand;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.PromptType;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.CommandManager;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.parser.Parser;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_FONT;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_DIALOG_SIZE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.WELCOME_TEXT;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class MainStage {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int STAGE_HEIGHT \u003d 700;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int STAGE_WIDTH \u003d 600;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/original.gif\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/tenor.gif\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private PromptType promptType \u003d PromptType.INFORMATIVE;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static MediaView bgmView;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Set the property of the main stage"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public MainStage(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Stage stage \u003d new Stage();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MenuBar menuBar \u003d new MenuBar();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Menu menuNew\u003d new Menu(\"New\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Menu menuHelp\u003d new Menu(\"Help\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Menu menuAbout\u003d new Menu(\"About\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuBar.getMenus().add(menuNew);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuBar.getMenus().add(menuHelp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuBar.getMenus().add(menuAbout);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MenuItem menuItem \u003d new MenuItem(\"New Task\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MenuItem menuItemHelp \u003d new MenuItem(\"Display Help Message\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MenuItem menuItemAbout \u003d new MenuItem(\"Show developer Info\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuNew.getItems().add(menuItem);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuHelp.getItems().add(menuItemHelp);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuAbout.getItems().add(menuItemAbout);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Font font \u003d new Font(DEFAULT_DIALOG_FONT, DEFAULT_DIALOG_SIZE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.setFont(font);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Button sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton,menuBar);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Parent root \u003d new StackPane( mainLayout);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Scene scene \u003d new Scene(root);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.setMinHeight(STAGE_HEIGHT);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        stage.setMinWidth(STAGE_WIDTH);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        mainLayout.setPrefSize(STAGE_WIDTH, STAGE_HEIGHT);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setPrefSize(STAGE_WIDTH-15, STAGE_HEIGHT-65);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Image backgroundImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bgp.png\"));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.setBackground(new Background(new BackgroundImage(backgroundImage, null, null, null, null)));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        scrollPane.vvalueProperty().addListener(new ChangeListener\u003cNumber\u003e() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            public void changed(ObservableValue\u003c? extends Number\u003e ov,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                Number old_val, Number new_val) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                mainLayout.setLayoutY(-new_val.doubleValue());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.setPrefWidth(STAGE_WIDTH-75);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setRightAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(WELCOME_TEXT), new ImageView(duke), promptType));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(HelpCommand.getFeedbackToUserInEnglish()), new ImageView(duke), promptType));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.setOnKeyPressed(event -\u003e handleKeyPress(event.getCode()));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuItem.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            createNewTask();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuItemAbout.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            displayInfoMessage();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        menuItemHelp.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            displayHelpMessage();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke), promptType));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the response generated according to user input"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param userInput userInput"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the response"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String getResponse(String userInput) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Command parsedCommand \u003d Parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        promptType \u003d parsedCommand.getPromptType();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        CommandResult commandResult;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        commandResult \u003d Executor.executeCommand(parsedCommand);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        CommandManager.add(userInput);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return commandResult.getFeedbackToUser();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setBgmView(MediaView mediaView) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        bgmView \u003d mediaView;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Handles key presses for `userInput`, displaying the command history on"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * {@code KeyCode.UP} and {@code KeyCode.DOWN}."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param keyCode the key that was pressed by the user."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void handleKeyPress(KeyCode keyCode) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (keyCode) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case UP:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            userInput.setText(CommandManager.traverseUpHistoryCommand());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DOWN:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            userInput.setText(CommandManager.traverseDownHistoryCommand());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        // Set the caret position to the end of the string."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        userInput.positionCaret(userInput.getLength());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void createNewTask() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader(DuckApp.class.getResource(\"/view/NewTaskWindow.fxml\"));"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Parent root \u003d loader.load();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            loader.\u003cNewTaskWindowController\u003egetController().setParentController(this);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Stage stage \u003d new Stage();"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setTitle(\"Create New Task\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setScene(new Scene(root));"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void displayInfoMessage() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader(DuckApp.class.getResource(\"/view/InfoWindow.fxml\"));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Parent root \u003d loader.load();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            loader.\u003cInfoWindow\u003egetController().setParentController(this);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Stage stage \u003d new Stage();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setTitle(\"Developer Info\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setScene(new Scene(root));"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void displayHelpMessage() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FXMLLoader loader \u003d new FXMLLoader(DuckApp.class.getResource(\"/view/HelpWindow.fxml\"));"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Parent root \u003d loader.load();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            loader.\u003cHelpWindow\u003egetController().setParentController(this);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Stage stage \u003d new Stage();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setTitle(\"Help Message\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.setScene(new Scene(root));"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 264
    }
  },
  {
    "path": "src/main/java/seedu/duck/gui/NewTaskWindowController.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.event.ActionEvent;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.ComboBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.DatePicker;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.StateManager;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.exception.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.DeadlineTask;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.EventTask;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.TodoTask;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class NewTaskWindowController {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private TextArea descriptionTextField;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private Button confirmButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private ComboBox\u003cString\u003e typeSelector;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private Label dateLabel;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private DatePicker datePicker;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private TextField hours;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private TextField minutes;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private Text dots;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private MainStage parentController;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void hideTimeFields() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hours.setVisible(false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        minutes.setVisible(false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dots.setVisible(false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private void showTimeFields() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hours.setVisible(true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        minutes.setVisible(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dots.setVisible(true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void setParentController(MainStage parentController) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.parentController \u003d parentController;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void confirm(ActionEvent event) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!typeSelector.getSelectionModel().isEmpty()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            String selected \u003d typeSelector.getSelectionModel().getSelectedItem();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                switch (selected) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                case \"To-Do\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    TaskManager.add(new TodoTask(descriptionTextField.getText()));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    StateManager.saveState();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    IOManager.saveAsJson();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                case \"Deadline\": {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    int hrs \u003d Integer.parseInt(hours.getText());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    int mins \u003d Integer.parseInt(minutes.getText());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    if (hrs \u003e\u003d 24 || hrs \u003c 0 || mins \u003c 0 || mins \u003e\u003d 60) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        throw new DukeException(\"Invalid time inputs.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    TaskManager.add("
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            new DeadlineTask(descriptionTextField.getText(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                    datePicker.getValue()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    StateManager.saveState();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    IOManager.saveAsJson();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                case \"Event\": {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    int hrs \u003d Integer.parseInt(hours.getText());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    int mins \u003d Integer.parseInt(minutes.getText());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    if (hrs \u003e\u003d 24 || hrs \u003c 0 || mins \u003c 0 || mins \u003e\u003d 60) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        throw new DukeException(\"Invalid time inputs.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    TaskManager.add("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            new EventTask(descriptionTextField.getText(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                    datePicker.getValue()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    StateManager.saveState();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    IOManager.saveAsJson();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                Alert alert \u003d new Alert(Alert.AlertType.ERROR, e.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                alert.showAndWait();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                Alert alert \u003d new Alert(Alert.AlertType.ERROR, \"No date is picked.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                alert.showAndWait();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                Alert alert \u003d new Alert(Alert.AlertType.ERROR, \"Please input valid numbers in time field.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                alert.showAndWait();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ((Stage) confirmButton.getScene().getWindow()).close();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    void initialize() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert descriptionTextField !\u003d null :"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"fx:id\u003d\\\"descriptionTextField\\\" was not injected: check your FXML file \u0027NewTaskWindow.fxml\u0027.\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert confirmButton !\u003d null :"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"fx:id\u003d\\\"confirmButton\\\" was not injected: check your FXML file \u0027NewTaskWindow.fxml\u0027.\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert typeSelector !\u003d null :"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"fx:id\u003d\\\"typeSelector\\\" was not injected: check your FXML file \u0027NewTaskWindow.fxml\u0027.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert dateLabel !\u003d null :"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"fx:id\u003d\\\"dateLabel\\\" was not injected: check your FXML file \u0027NewTaskWindow.fxml\u0027.\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        assert datePicker !\u003d null :"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"fx:id\u003d\\\"datePicker\\\" was not injected: check your FXML file \u0027NewTaskWindow.fxml\u0027.\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        dateLabel.setVisible(false);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        datePicker.setVisible(false);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        hideTimeFields();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ObservableList\u003cString\u003e items \u003d FXCollections.observableArrayList(\"To-Do\", \"Deadline\", \"Event\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        typeSelector.setItems(items);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        typeSelector.setOnAction(event -\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            String selected \u003d typeSelector.getSelectionModel().getSelectedItem();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (selected) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \"To-Do\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                dateLabel.setVisible(false);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                datePicker.setVisible(false);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                hideTimeFields();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \"Deadline\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                dateLabel.setText(\"by\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                dateLabel.setVisible(true);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                datePicker.setVisible(true);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                showTimeFields();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \"Event\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                dateLabel.setText(\"at\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                dateLabel.setVisible(true);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                datePicker.setVisible(true);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                showTimeFields();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 165
    }
  },
  {
    "path": "src/main/java/seedu/duck/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ChangeLanguageCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ChangePasswordCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ChangeUsernameCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ChangeVolumeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ClearCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.DueCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.HelpCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.IncorrectCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddDeadlineCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddEventCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.add.AddTodoCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.AllowDuplicatedTaskCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.DisplaySystemSettingCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.command.misc.UndoCommand;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.exception.ParseException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.DeadlineTask;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.EventTask;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.TodoTask;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.DateTimeFormat;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_CHINESE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EMPTY_LIST_IN_ENGLISH;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_DATE_IN_CHINESE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_DATE_IN_ENGLISH;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " *  Parser the String to a Command object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final Pattern VOLUME_FORMAT \u003d Pattern.compile(\"\\\\w+\\\\s.+\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEADLINE_DATE_SPLITTER \u003d \"/by\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String EVENT_DATE_SPLITTER \u003d \"/at\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String COMMAND_SPLITTER \u003d \" \";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int DONE_INDEX \u003d 5;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int CHANGE_VOLUME_INDEX \u003d 7;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int DELETE_INDEX \u003d 7;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int DESCRIPTION_INDEX \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int TIME_INDEX \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int COMMAND_WORD_INDEX \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (userInput \u003d\u003d null){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final String []commandTypeAndParams \u003d userInput.split(COMMAND_SPLITTER);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var commandType \u003d commandTypeAndParams[COMMAND_WORD_INDEX];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final var commandArgs \u003d userInput.substring(commandTypeAndParams[COMMAND_WORD_INDEX].length()).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return getCommand(userInput, commandType, commandArgs);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from the user input"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandWord, commandWord the input String spited parts"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandType, commandType the input String first part"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandArgs, commandArgs the input String argument part"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return parsed duck.command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command getCommand(String commandWord, String commandType, String commandArgs) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (commandType){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Change Username"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ChangeUsernameCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareChangeUsernameCommand(commandArgs);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Change Password"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ChangePasswordCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareChangePasswordCommand(commandArgs);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case AllowDuplicatedTaskCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareAllowDuplicatedTaskCommand(commandArgs);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Display system settings"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DisplaySystemSettingCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DisplaySystemSettingCommand();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Change Volume"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ChangeVolumeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareChangeVolumeCommand(commandWord);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Change Language"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ChangeLanguageCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareChangeLanguageCommand(commandArgs);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Clear"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ClearCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareClearCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Due"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DueCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareDueCommand(commandArgs);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Undo"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case UndoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new UndoCommand();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Help"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case HelpCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Find"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new FindCommand(commandArgs);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Delete"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareDelete(commandWord);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Add to-do"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case AddTodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareAddTodoTask(commandArgs);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //add event task"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareAddEventTask(commandArgs);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //add deadline task"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareAddDeadlineTask(commandArgs);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return prepareDone(commandWord);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //List"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Exit"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //Incorrect"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareChangeUsernameCommand(String commandArgs){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!isEmpty(commandArgs)){"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ChangeUsernameCommand(commandArgs);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareChangePasswordCommand(String commandArgs){"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!isEmpty(commandArgs)){"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ChangePasswordCommand(commandArgs);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareChangeVolumeCommand(String commandArgs){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final double volume \u003d parseArgsAsDisplayedIndexInDouble(commandArgs, CHANGE_VOLUME_INDEX);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ChangeVolumeCommand(volume);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (NumberFormatException | StringIndexOutOfBoundsException nfe) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareChangeLanguageCommand(String commandArgs){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new ChangeLanguageCommand(commandArgs.trim());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareClearCommand(){"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (TaskManager.isEmpty()){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new IncorrectCommand(MESSAGE_EMPTY_LIST_IN_CHINESE);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new IncorrectCommand(MESSAGE_EMPTY_LIST_IN_ENGLISH);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from user input argument"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandArgs user input argument"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the parsed command"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareDueCommand(String commandArgs){"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DueCommand(DateTimeFormat.stringToDate(commandArgs));"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()){"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new IncorrectCommand(MESSAGE_INVALID_DATE_IN_CHINESE);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new IncorrectCommand(MESSAGE_INVALID_DATE_IN_ENGLISH);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from user input argument"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandArgs user input argument"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the parsed command"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareAddTodoTask(String commandArgs) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isEmpty(commandArgs)) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return new AddTodoCommand(new TodoTask(commandArgs));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from user input argument"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandArgs user input argument"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the parsed command"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareAddDeadlineTask(String commandArgs) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        String [] taskDescriptionAndTime;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isEmpty(commandArgs)) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        taskDescriptionAndTime \u003d commandArgs.split(DEADLINE_DATE_SPLITTER);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isEmpty(taskDescriptionAndTime[DESCRIPTION_INDEX])){"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isEmpty(taskDescriptionAndTime[TIME_INDEX])){"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            LocalDate localDate \u003d DateTimeFormat.stringToDate(taskDescriptionAndTime[TIME_INDEX].trim());"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new AddDeadlineCommand(new DeadlineTask(taskDescriptionAndTime[DESCRIPTION_INDEX],localDate));"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new AddDeadlineCommand(new DeadlineTask(taskDescriptionAndTime[DESCRIPTION_INDEX],taskDescriptionAndTime[TIME_INDEX]));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command getIncorrectCommand() {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case CHINESE:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ENGLISH:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from user input argument"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param commandDescription user input argument"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the parsed command"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareAddEventTask(String commandDescription) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        String [] taskDescriptionAndTime;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isEmpty(commandDescription)) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        taskDescriptionAndTime \u003d commandDescription.split(EVENT_DATE_SPLITTER);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            LocalDate localDate \u003d DateTimeFormat.stringToDate(taskDescriptionAndTime[TIME_INDEX].trim());"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new AddEventCommand(new EventTask(taskDescriptionAndTime[DESCRIPTION_INDEX], localDate));"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (DateTimeFormat.InvalidDateTimeException e) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new AddEventCommand(new EventTask(taskDescriptionAndTime[DESCRIPTION_INDEX],taskDescriptionAndTime[TIME_INDEX]));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the arguments in the context of the delete person command"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param args full command args string"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final int targetIndex \u003d parseArgsAsDisplayedIndex(args, DELETE_INDEX);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (ParseException | NumberFormatException pe) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (StringIndexOutOfBoundsException se) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareAllowDuplicatedTaskCommand(String args){"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            int target \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            if (target \u003d\u003d 0){"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new AllowDuplicatedTaskCommand(false);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } else if (target \u003d\u003d 1){"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return new AllowDuplicatedTaskCommand(true);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return getIncorrectCommand();"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (NumberFormatException pe) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IndexOutOfBoundsException se) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the command parsed from user input argument"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param args user input argument"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the parsed command"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command prepareDone (String args) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            final int targetIndex \u003d parseArgsAsDisplayedIndex(args, DONE_INDEX);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (ParseException pe) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommand();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (NumberFormatException | StringIndexOutOfBoundsException nfe) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getIncorrectCommandAccordingToSystemLanguage();"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Command getIncorrectCommandAccordingToSystemLanguage() {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case CHINESE:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case ENGLISH:"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new IncorrectCommand(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the integer index parsed from user input"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param args user input"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param indexOfIndex the index of \"Index\" part in user input String array"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return  the integer index"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws ParseException parseException if the index cannot be parsed"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws NumberFormatException numberFormatException if the index is not is not a number"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws StringIndexOutOfBoundsException stringIndexOutOfBoundsException if the index is missing"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static double parseArgsAsDisplayedIndexInDouble(String args, int indexOfIndex) throws ParseException,"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            NumberFormatException,"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            StringIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final Matcher matcher \u003d VOLUME_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new ParseException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new ParseException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (args.length() \u003c indexOfIndex) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new StringIndexOutOfBoundsException(MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new StringIndexOutOfBoundsException(MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH);"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return Double.parseDouble(args.substring(indexOfIndex));"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the integer index parsed from user input"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param args user input"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param indexOfIndex the index of \"Index\" part in user input String array"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return  the integer index"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws ParseException parseException if the index cannot be parsed"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws NumberFormatException numberFormatException if the index is not is not a number"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws StringIndexOutOfBoundsException stringIndexOutOfBoundsException if the index is missing"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static int parseArgsAsDisplayedIndex(String args, int indexOfIndex) throws ParseException,"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                                                                      NumberFormatException,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                                                                      StringIndexOutOfBoundsException{"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        final Matcher matcher \u003d TASK_INDEX_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new ParseException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new ParseException(MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (args.length() \u003c indexOfIndex) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (SystemSetting.getSystemLanguage()) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case CHINESE:"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new StringIndexOutOfBoundsException(MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE);"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case ENGLISH:"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                throw new StringIndexOutOfBoundsException(MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return Integer.parseInt(args.substring(indexOfIndex)) - 2;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return true if the user input is empty"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param str user input String"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return true if the user input is empty"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Boolean isEmpty(String str) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return str.length() \u003d\u003d 0;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 413
    }
  },
  {
    "path": "src/main/java/seedu/duck/setting/SystemSetting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.setting;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.media.Media;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.media.MediaPlayer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.scene.media.MediaView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.gui.MainStage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.storage.IOManager;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Language;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_PASSWORD;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_SYSTEM_MUSIC;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_USERNAME;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class SystemSetting {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Language systemLanguage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static MediaView backgroundMusicView;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static boolean isDuplicatedAllowed;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static String username;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static String password;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Initialises the system setting"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Currently only the language is implemented"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Sets the system language to English"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        systemLanguage \u003d Language.ENGLISH;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        isDuplicatedAllowed \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        setBackgroundMediaView(DEFAULT_SYSTEM_MUSIC, 0.1, true);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MainStage.setBgmView(backgroundMusicView);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            IOManager.loadUserInfo();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException ioe){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(DEFAULT_USERNAME);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(DEFAULT_PASSWORD);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the current system language"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the current system language"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static Language getSystemLanguage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return systemLanguage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Sets the system language to a specific language"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param language a specific language"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setSystemLanguage(Language language) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        systemLanguage \u003d language;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the background music generated"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return background music generated"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setBackgroundMediaView(String bgm, double volume, boolean autoplay) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        Media backgroundMusic \u003d new Media(MainStage.class.getResource(bgm).toExternalForm());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MediaPlayer backgroundMusicPlayer \u003d new MediaPlayer(backgroundMusic);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        setBackgroundMusic(backgroundMusicPlayer, volume, autoplay);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //***************** loop (repeat) the music  ******************"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        backgroundMusicPlayer.setOnEndOfMedia(new Runnable() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                backgroundMusicPlayer.seek(Duration.ZERO);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        backgroundMusicView \u003d new MediaView(backgroundMusicPlayer);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        MainStage.setBgmView(backgroundMusicView);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Sets the property of the background music"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param backgroundMusicPlayer the background music"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void setBackgroundMusic(MediaPlayer backgroundMusicPlayer, double volume, boolean autoplay) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        backgroundMusicPlayer.setAutoPlay(autoplay);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        backgroundMusicPlayer.setVolume(volume);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static MediaView getBackgroundMusicView() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return backgroundMusicView;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static boolean isDuplicatedAllowed() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return !isDuplicatedAllowed;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setIsDuplicatedAllowed(boolean duplicatedIsAllowed) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.isDuplicatedAllowed \u003d duplicatedIsAllowed;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getBackgroundMusicViewInString() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return DEFAULT_SYSTEM_MUSIC;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getIsDuplicatedTaskAllowedInString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isDuplicatedAllowed){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"Allowed\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"Not Allowed\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getSystemLanguageInString() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (systemLanguage \u003d\u003d Language.ENGLISH){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"English\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"Chinese\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getBackgroundMusicViewInStringInChinese() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return DEFAULT_SYSTEM_MUSIC;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getIsDuplicatedTaskAllowedInStringInChinese() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isDuplicatedAllowed){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"允许\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"不允许\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getSystemLanguageInStringInChinese() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (systemLanguage \u003d\u003d Language.ENGLISH){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"英文\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"中文\";"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getUsername() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return username;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getPassword() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return password;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setUsername(String username) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.username \u003d username;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void setPassword(String password) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        SystemSetting.password \u003d password;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 153
    }
  },
  {
    "path": "src/main/java/seedu/duck/storage/Decoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Decoder {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String decodeUsername(String args){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //username:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return args.trim();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String decodePassword(String args){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        //password:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return args.trim();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 13
    }
  },
  {
    "path": "src/main/java/seedu/duck/storage/Encoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Encoder {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String encode(String username, String password){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return username +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                \"\\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                password;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 9
    }
  },
  {
    "path": "src/main/java/seedu/duck/storage/IOManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import com.google.gson.Gson;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import com.google.gson.GsonBuilder;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.setting.SystemSetting;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.DeadlineTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.EventTask;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.TodoTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.PATH_TO_DATA_FILE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.PATH_TO_DATA_FOLDER;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class IOManager {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static Path filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Initialises the TaskManager class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *  The hash map containing NUS provided modules"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void initialise() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        filePath \u003d PATH_TO_DATA_FILE;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Save the task list as a Json file into data folder"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws IOException io exceptions related to the path"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void saveAsJson() throws IOException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        var gson \u003d new GsonBuilder().create();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (Files.exists(PATH_TO_DATA_FOLDER)){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FileWriter fw \u003d new FileWriter(new File(filePath.toString()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var json \u003d gson.toJson(TaskManager.getTaskList());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fw.write(json);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fw.flush();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            createDefaultDataFolder();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Create data folder at default path"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void createDefaultDataFolder() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Files.createDirectory(PATH_TO_DATA_FOLDER);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Read the Json file from the data folder into the task list"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void loadList()  {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        File file \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                reader \u003d new BufferedReader(new FileReader(String.valueOf(filePath)));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            assert reader !\u003d null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Task[] readList \u003d new Gson().fromJson(reader, Task[].class);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            TaskManager.setTaskList(getDecodedTaskList(readList));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task list read from Json file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param readList the task array read from Json file"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the task list parsed from readList array"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static ArrayList\u003cTask\u003e getDecodedTaskList(Task[] readList) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        for (Task task : readList) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            switch (task.getType()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                tempTaskList.add(new TodoTask(task.getDescription(), task.getIsDone()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                if (task.getTaskDate()\u003d\u003dnull){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    tempTaskList.add(new DeadlineTask(task.getDescription(), task.getTaskDateInString(), task.getIsDone()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    tempTaskList.add(new DeadlineTask(task.getDescription(), task.getTaskDate(), task.getIsDone()));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                if (task.getTaskDate()\u003d\u003dnull){"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    tempTaskList.add(new EventTask(task.getDescription(), task.getTaskDateInString(), task.getIsDone()));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    tempTaskList.add(new EventTask(task.getDescription(), task.getTaskDate(), task.getIsDone()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return tempTaskList;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void loadUserInfo() throws IOException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FileReader fileReader \u003d new FileReader(\"data/save.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            String rawUsername \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            String rawPassword \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setUsername(Decoder.decodeUsername(rawUsername));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            SystemSetting.setPassword(Decoder.decodePassword(rawPassword));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fileReader.close();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throw new IOException(\"User Info not found\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void saveUserInfo() throws IOException{"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        String encodedUserInfo \u003d Encoder.encode(SystemSetting.getUsername(),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                                                SystemSetting.getPassword());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            File saveFile \u003d new File(\"data/save.txt\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(saveFile);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fileWriter.write(encodedUserInfo);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throw new IOException(\"Save UserInfo failed\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 148
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DeadlineTask extends Task implements Timeliness{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeadlineTask() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeadlineTask(String taskDescription, LocalDate taskDeadline) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(taskDescription, taskDeadline, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeadlineTask(String taskDescription, LocalDate taskDeadline, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(taskDescription, TaskType.D, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDate \u003d taskDeadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeadlineTask(String taskDescription, String taskDeadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(taskDescription, taskDeadline, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DeadlineTask(String taskDescription, String taskDeadline, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(taskDescription, TaskType.D, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDateInString \u003d taskDeadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getTaskDeadlineInString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskDateInString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task information in a String"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return a string taskInformation contains all essential information for the deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getTaskInformation() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (taskDate!\u003dnull){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var timeString \u003d taskDate.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return String.format(\"[%c][%c] %s (%s)\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getType(),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getChar(),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    description,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    timeString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    \"[%c][%c] %s (%s)\","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getType(),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getChar(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    description,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    taskDateInString);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task date"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return task date"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (taskDate!\u003dnull){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return taskDate;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 67
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class EventTask extends Task implements Timeliness{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public EventTask() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public EventTask(String taskDescription, LocalDate taskStartTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(taskDescription, taskStartTime, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public EventTask(String taskDescription, LocalDate taskStartTime, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(taskDescription, TaskType.E, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDate \u003d taskStartTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public EventTask(String taskDescription, String taskDeadline) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(taskDescription, taskDeadline, false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public EventTask(String taskDescription, String taskDeadline, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(taskDescription, TaskType.E, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDateInString \u003d taskDeadline;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task information for output related issue"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return a string taskInformation contains all essential information for the deadline task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getTaskInformation() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (taskDate!\u003dnull){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var timeString \u003d taskDate.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return String.format(\"[%c][%c] %s (%s)\","
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getType(),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getChar(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    description,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    timeString);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    \"[%c][%c] %s (%s)\","
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getType(),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    getChar(),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    description,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    taskDateInString);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (taskDate!\u003dnull){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return taskDate;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 59
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.data.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.util.Message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.DEFAULT_TASK_TIME;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected String taskDateInString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructor called by non-type task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.index \u003d TaskManager.getNextIndex();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public Task(String taskDescription, TaskType taskType, boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.index \u003d TaskManager.getNextIndex();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.description \u003d taskDescription;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.type \u003d taskType;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDateInString \u003d DEFAULT_TASK_TIME;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.taskDate \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * set the task status to Done"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the done status of the task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return done status"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the status of the task: Done, not Done"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the status of the task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public char getChar(){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (this.isDone){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return Message.DONE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return Message.NOT_DONE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task type: D, E, T"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return task type"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (type){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \u0027D\u0027;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \u0027E\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \u0027T\u0027;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \u0027 \u0027;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return true, if two tasks have same task description"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param taskDescription task description"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return true, if same; false, if different"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isSameTask(String taskDescription) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.description.equals(taskDescription);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task index"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return task index"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the task description"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the date in String"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the date in String"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getTaskDateInString() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskDateInString;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the date in DateTime"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the date in DateTime"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public LocalDate getTaskDate() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 126
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    T,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    D,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    E"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 7
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/Timeliness.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public interface Timeliness {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    LocalDate getDate();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 6
    }
  },
  {
    "path": "src/main/java/seedu/duck/task/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructs a default to-do task (not done)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(description, false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Constructs a to-do task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param description task description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param isDone    if the task is done"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public TodoTask(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        super(description, TaskType.T, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 21
    }
  },
  {
    "path": "src/main/java/seedu/duck/ui/TextUi.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.DeadlineTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.EventTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.task.TodoTask;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.INDEX_OFF_SET;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.LIST_INDEX_OFFSET;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Constant.NEWLINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_DEADLINE_LIST;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_EVENT_LIST;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_LIST_RESPOND_FORMAT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import static seedu.duck.util.Message.MESSAGE_TODO_LIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class TextUi {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static StringBuilder tasksMessages;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Return the message of all tasks in a specific task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param taskListToPrint the specific task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return the appended task message"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static String getAppendedTasksMessage(ArrayList\u003cTask\u003e taskListToPrint){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        getTaskListMessage(taskListToPrint);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return tasksMessages.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * get taskList message"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void getTaskListMessage(ArrayList\u003cTask\u003e taskListToPrint) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        tasksMessages \u003d new StringBuilder();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        for (int index \u003d LIST_INDEX_OFFSET; index \u003c\u003d taskListToPrint.size() ; index++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            Task task \u003d taskListToPrint.get(index+ INDEX_OFF_SET);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            appendAllTaskMessage(index, task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * append all tasks message"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param index index of the task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param task the task to append message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static void appendAllTaskMessage(int index, Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (task instanceof TodoTask) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            appendTodoTask((TodoTask) task, index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else if (task instanceof DeadlineTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            appendDeadlineTask((DeadlineTask) task, index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else if( task instanceof EventTask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            appendEventTask((EventTask) task, index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * append a \u0027To-do\u0027 type task message"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param todoTask the task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void appendTodoTask(TodoTask todoTask, int index){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        tasksMessages.append("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                String.format("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    MESSAGE_LIST_RESPOND_FORMAT,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        MESSAGE_TODO_LIST,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        index,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        todoTask.getType(),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        todoTask.getChar(),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        todoTask.getDescription())"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                )"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ).append(NEWLINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * append a \u0027deadline\u0027 type task message"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param deadlineTask the task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void appendDeadlineTask(DeadlineTask deadlineTask, int index){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        tasksMessages.append("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                String.format("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    MESSAGE_LIST_RESPOND_FORMAT,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        MESSAGE_DEADLINE_LIST,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        index,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        deadlineTask.getTaskInformation()))"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ).append(NEWLINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * append a \u0027event\u0027 type task message"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param eventTask the task"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param index the index of the task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static void appendEventTask(EventTask eventTask, int index){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        tasksMessages.append("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                String.format(MESSAGE_LIST_RESPOND_FORMAT,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    String.format("
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        MESSAGE_EVENT_LIST,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        index,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                        eventTask.getTaskInformation()))"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        ).append(NEWLINE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 107
    }
  },
  {
    "path": "src/main/java/seedu/duck/util/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Constant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_SYSTEM_MUSIC \u003d \"/music/sad.mp3\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String SECONDARY_SYSTEM_LANGUAGE \u003d \"CHINESE\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_SYSTEM_LANGUAGE \u003d \"ENGLISH\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String USER_DIALOG_COLOR \u003d \"#a1f7f7\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_DIALOG_COLOR \u003d \"#e5f59d\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String WARNING_DIALOG_COLOR \u003d \"#e5b6fa\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String INFORMATIVE_DIALOG_COLOR \u003d \"#f5bdba\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_DIALOG_BORDER_COLOR \u003d \"#4141B2\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_DIALOG_FONT \u003d \"Comic Sans MS\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int DEFAULT_DIALOG_SIZE \u003d 14;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_TASK_TIME \u003d \"-1\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_USERNAME \u003d \"duck\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DEFAULT_PASSWORD \u003d \"123\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int INDEX_OFF_SET \u003d -1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final int LIST_INDEX_OFFSET \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DATA_FOLDER \u003d \"data\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DATA_FILE \u003d \"duke.json\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final Path PATH_TO_DATA_FOLDER \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final Path PATH_TO_DATA_FILE \u003d Paths.get(PROJECT_ROOT, DATA_FOLDER, DATA_FILE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 28
    }
  },
  {
    "path": "src/main/java/seedu/duck/util/DateTime.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * \u003ch3\u003eDate Time\u003c/h3\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * A \u003cb\u003eDate Time\u003c/b\u003e contains both \u003ci\u003edate\u003c/i\u003e and \u003ci\u003etime\u003c/i\u003e information. This is used to hold the \u003ci\u003edatetime\u003c/i\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * information of the task\u0027s deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DateTime {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String FORMAT \u003d \"dd/mm/yyyy hh:mma\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\"; // Date format to be displayed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String TIME_FORMAT \u003d \"hh:mma\"; // Time format to be displayed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String DATE_SORT_FORMAT \u003d \"yyyyMMdd\"; // Date format for sorting"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String TIME_SORT_FORMAT \u003d \"HHmm\"; // Time format for sorting"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private LocalTime time;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DateTime(LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DateTime(LocalTime time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DateTime(LocalDate date) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this.time \u003d LocalTime.of(23, 59);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public DateTime() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        this(null, null);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if datetime values are \u003cb\u003eNOT\u003c/b\u003e \u003ccode\u003eNULL\u003c/code\u003e."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *  \u003ccode\u003eTRUE\u003c/code\u003e if datetime is \u003cb\u003eNOT\u003c/b\u003e \u003ccode\u003eNULL\u003c/code\u003e and \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isPresent() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return hasDate() \u0026\u0026 hasTime();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003edate\u003c/code\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003etime\u003c/code\u003e."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003etime\u003c/code\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003edate\u003c/code\u003e as a string with the format {@value DATE_FORMAT}."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003edate\u003c/code\u003e in a string format"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(DATE_FORMAT));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003etime\u003c/code\u003e as a string with the format {@value TIME_FORMAT}."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003etime\u003c/code\u003e in a string format"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(TIME_FORMAT));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003edate\u003c/code\u003e as a string with the format {@value DATE_SORT_FORMAT}."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * This format is primarily used for sorting tasks by date."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003edate\u003c/code\u003e in a string format"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String getDateInSortFormat() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return hasDate() ? date.format(DateTimeFormatter.ofPattern(DATE_SORT_FORMAT)) : \"_\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Returns the \u003ccode\u003edate\u003c/code\u003e as a string with the format {@value TIME_SORT_FORMAT}."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * This format is primarily used for sorting tasks by time."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003edate\u003c/code\u003e in a string format"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String getTimeInSortFormat() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return hasTime() ? time.format(DateTimeFormatter.ofPattern(TIME_SORT_FORMAT)) : \"_\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String getDateTimeInSortFormat() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return getDateInSortFormat() + getTimeInSortFormat();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e attribute is the same as the specified \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param date The \u003ci\u003edate\u003c/i\u003e in question"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if \u003ccode\u003edate\u003c/code\u003e is the same as the specified \u003ccode\u003edate\u003c/code\u003e, and"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isOn(LocalDate date) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.date.isEqual(date);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e attribute is before the specified \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param date The \u003ci\u003edate\u003c/i\u003e in question"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if \u003ccode\u003edate\u003c/code\u003e is before the specified \u003ccode\u003edate\u003c/code\u003e, and"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isBefore(LocalDate date) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.date.isBefore(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e attribute is after the specified \u003ccode\u003edate\u003c/code\u003e."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param date The \u003ci\u003edate\u003c/i\u003e in question"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if \u003ccode\u003edate\u003c/code\u003e is after the specified \u003ccode\u003edate\u003c/code\u003e, and"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isAfter(LocalDate date) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.date.isAfter(date);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003etime\u003c/code\u003e attribute is \u003cb\u003enot\u003c/b\u003e \u003ccode\u003eNULL\u003c/code\u003e."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if \u003ccode\u003etime\u003c/code\u003e is not \u003ccode\u003eNULL\u003c/code\u003e, and \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private boolean hasTime() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return time !\u003d null;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e attribute is \u003cb\u003enot\u003c/b\u003e \u003ccode\u003eNULL\u003c/code\u003e."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if \u003ccode\u003edate\u003c/code\u003e is not \u003ccode\u003eNULL\u003c/code\u003e, and \u003ccode\u003eFALSE\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private boolean hasDate() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return date !\u003d null;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e is the same as the current day\u0027s \u003ci\u003edate\u003c/i\u003e."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if the \u003ccode\u003edate\u003c/code\u003e is the same as the current day\u0027s \u003ci\u003edate\u003c/i\u003e, and"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003eFALSE\u003c/code\u003e otherwise"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private boolean isToday() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.date.isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the \u003ccode\u003edate\u003c/code\u003e is the same as the next day\u0027s \u003ci\u003edate\u003c/i\u003e."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if the \u003ccode\u003edate\u003c/code\u003e is the same as the next day\u0027s \u003ci\u003edate\u003c/i\u003e, and"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003eFALSE\u003c/code\u003e otherwise"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private boolean isTomorrow() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return this.date.minusDays(1).isEqual(LocalDate.now());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Checks if the current \u003ci\u003edate\u003c/i\u003e and \u003ci\u003etime\u003c/i\u003e have passed the \u003ccode\u003edate\u003c/code\u003e and \u003ccode\u003etime\u003c/code\u003e."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e i.e. The \u003cb\u003eDate Time\u003c/b\u003e has expired."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return \u003ccode\u003eTRUE\u003c/code\u003e if the \u003cb\u003eDate Time\u003c/b\u003e has expired, and \u003ccode\u003eFALSE\u003c/code\u003e otherwise"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public boolean isDue() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return LocalDate.now().isAfter(date)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                || (hasTime() \u0026\u0026 isToday() \u0026\u0026 LocalTime.now().isAfter(time));"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts the \u003ccode\u003edate\u003c/code\u003e into a string format."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003edate\u003c/code\u003e in a string format."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String dateToString() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (isToday()) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"today\";"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else if (isTomorrow()) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return \"tomorrow\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return getDateString();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts the \u003ccode\u003etime\u003c/code\u003e into a string format."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * If \u003ccode\u003etime\u003c/code\u003e is \u003ccode\u003eNULL\u003c/code\u003e, an empty string is returned instead."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003etime\u003c/code\u003e in a string format."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private String timeToString() {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return hasTime() ? getTimeString() : \"\";"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts \u003cb\u003eDate Time\u003c/b\u003e into its string representation, containing its \u003ccode\u003edate\u003c/code\u003e and"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003etime\u003c/code\u003e information, and an indicator to show if the datetime has already passed."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The string representation of \u003cb\u003eDate Time\u003c/b\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String toShow() {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        String toShow \u003d dateToString() + \" \" + timeToString();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return (isDue()) ? toShow + \" [OVER!]\" : toShow;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts \u003cb\u003eDate Time\u003c/b\u003e into its string representation, containing its \u003ccode\u003edate\u003c/code\u003e and"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ccode\u003etime\u003c/code\u003e information, and an indicator to show if the datetime has already passed."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The string representation of \u003cb\u003eDate Time\u003c/b\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        return getDateString() + \" \" + timeToString();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 238
    }
  },
  {
    "path": "src/main/java/seedu/duck/util/DateTimeFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import seedu.duck.exception.InvalidFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * \u003ch3\u003eDate Time Format\u003c/h3\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * The \u003cb\u003eDate Time Format\u003c/b\u003e formats and converts strings into various \u003ci\u003edatetime\u003c/i\u003e objects, specifically"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " * \u003ccode\u003eDateTime\u003c/code\u003e, \u003ccode\u003eLocalDate\u003c/code\u003e and \u003ccode\u003eLocalTime\u003c/code\u003e objects."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class DateTimeFormat {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /* An exhaustive list of date formats accepted by the Nuke program */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String[] ALL_DATE_FORMATS \u003d {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"dd-MM-yyyy\", \"dd/MM[/yyyy]\", \"d/MM[/yyyy]\", \"dd/M[/yyyy]\", \"d/M[/yyyy]\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"dd/MM[/yy]\", \"d/MM[/yy]\", \"dd/M[/yy]\", \"d/M[/yy]\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"dd-MM[-yyyy]\", \"d-MM[-yyyy]\", \"dd-M[-yyyy]\", \"d-M[-yyyy]\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"dd-MM[-yy]\", \"d-MM[-yy]\", \"dd-M[-yy]\", \"d-M[-yy]\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"ddMMyyyy\", \"ddMMyy\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /* An exhaustive list of time formats accepted by the Nuke program */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final String[] ALL_TIME_FORMATS \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"H:mm\", \"h:mma\", \"H:mma\","
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"h.mma\", \"H.mma\", \"H.mm\","
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"hmma\", \"Hmma\", \"Hmm\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        \"ha\", \"Ha\", \"H\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    };"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    private static final int CURRENT_YEAR \u003d LocalDate.now().getYear();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts the specified \u003ccode\u003edatetime\u003c/code\u003e string into a \u003ccode\u003eDateTime\u003c/code\u003e object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cb\u003eNote\u003c/b\u003e: The \u003ci\u003etime\u003c/i\u003e attribute must be present in the string."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e The \u003ci\u003edate\u003c/i\u003e attribute is \u003cu\u003eoptional\u003c/u\u003e and is set to the current date if absent."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e The attributes must be in accepted formats for successful conversion."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Otherwise, an \u003ccode\u003eException\u003c/code\u003e will be thrown."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param datetime The string to be converted into its corresponding \u003ccode\u003eDateTime\u003c/code\u003e object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003eDateTime\u003c/code\u003e object converted from the string"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws InvalidDateTimeException If more than 2 attributes are present in the string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws InvalidDateException     If the \u003ci\u003edate\u003c/i\u003e attribute in the string is invalid"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws InvalidTimeException     If the \u003ci\u003etime\u003c/i\u003e attribute in the string is invalid"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static DateTime stringToDateTime(String datetime)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throws InvalidDateTimeException, InvalidDateException, InvalidTimeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (datetime.isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        String[] dateTimeData \u003d datetime.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (dateTimeData.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var date \u003d LocalDate.now();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var time \u003d dateTimeData[0].trim().toUpperCase();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DateTime(date, stringToTime(time));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else if (dateTimeData.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var date \u003d dateTimeData[0].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            var time \u003d dateTimeData[1].trim().toUpperCase();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return new DateTime(stringToDate(date), stringToTime(time));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throw new InvalidDateTimeException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts the specified \u003ccode\u003edate\u003c/code\u003e string into a \u003ccode\u003eLocalDate\u003c/code\u003e object."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cb\u003eNote\u003c/b\u003e: The \u003ccode\u003edate\u003c/code\u003e string must be in either an accepted \u003ci\u003edate\u003c/i\u003e format or an accepted"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003ci\u003edate specifier\u003c/i\u003e \u003ci\u003e\u003csmall\u003e(See Below)\u003c/small\u003e\u003c/i\u003e."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Otherwise, an \u003ccode\u003eException\u003c/code\u003e will be thrown."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cb\u003eAccepted Date Specifiers\u003c/b\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *     \u003cli\u003e\u003ci\u003etoday\u003c/i\u003e or \u003ci\u003etdy\u003c/i\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *     \u003cli\u003e\u003ci\u003eyesterday\u003c/i\u003e or \u003ci\u003eyst\u003c/i\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *     \u003cli\u003e\u003ci\u003etomorrow\u003c/i\u003e or \u003ci\u003etmr\u003c/i\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param date The string to be converted into its corresponding \u003ccode\u003eLocalDate\u003c/code\u003e object"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003eLocalDate\u003c/code\u003e object converted from the string"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws InvalidDateException If the \u003ccode\u003edate\u003c/code\u003e string is an invalid \u003ci\u003edate\u003c/i\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static LocalDate stringToDate(String date) throws InvalidDateException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        // Checks if matches date specifiers first, before checking if matches date formats"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        switch (date.toLowerCase()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"tdy\":"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return LocalDate.now();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"yesterday\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"yst\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return LocalDate.now().minusDays(1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"tomorrow\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        case \"tmr\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return LocalDate.now().plusDays(1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            for (String formatPattern : ALL_DATE_FORMATS) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    var format \u003d new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            .appendPattern(formatPattern)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            .parseDefaulting(ChronoField.YEAR_OF_ERA, CURRENT_YEAR)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                            .toFormatter();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    return LocalDate.parse(date, format);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                    // Ignore invalid formats"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            // Throws exception if fails to parse all date formats"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Converts the specified \u003ccode\u003etime\u003c/code\u003e string into a \u003ccode\u003eLocalTime\u003c/code\u003e object."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cp\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cb\u003eNote\u003c/b\u003e: The \u003ccode\u003etime\u003c/code\u003e string must be in either an accepted \u003ci\u003etime\u003c/i\u003e format or \u003ccode\u003eNULL\u003c/code\u003e."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Otherwise, an \u003ccode\u003eException\u003c/code\u003e will be thrown."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * \u003cbr\u003e In the case of a \u003ccode\u003eNULL\u003c/code\u003e \u003ccode\u003etime\u003c/code\u003e string, \u003ccode\u003eNULL\u003c/code\u003e will be returned instead."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     *"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @param time The string to be converted into its corresponding \u003ccode\u003eLocalTime\u003c/code\u003e object"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @return The \u003ccode\u003eLocalTime\u003c/code\u003e object converted from the string"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * @throws InvalidTimeException If the \u003ccode\u003edate\u003c/code\u003e string is an invalid \u003ci\u003etime\u003c/i\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static LocalTime stringToTime(String time) throws InvalidTimeException {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        if (time \u003d\u003d null) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        for (String format : ALL_TIME_FORMATS) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                return LocalTime.parse(time, DateTimeFormatter.ofPattern(format));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "                // Ignore invalid formats"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        // Throws exception if fails to parse all time formats"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "        throw new InvalidTimeException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Signals that the \u003ci\u003edatetime\u003c/i\u003e string given is in an invalid format."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static class InvalidDateTimeException extends InvalidFormatException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Signals that the \u003ci\u003edate\u003c/i\u003e string given is in an invalid format."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static class InvalidDateException extends InvalidDateTimeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     * Signals that the \u003ci\u003etime\u003c/i\u003e string given is in an invalid format."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static class InvalidTimeException extends InvalidDateTimeException {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 170
    }
  },
  {
    "path": "src/main/java/seedu/duck/util/Language.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public enum Language {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    ENGLISH,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    CHINESE"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 6
    }
  },
  {
    "path": "src/main/java/seedu/duck/util/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "package seedu.duck.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String DUCK_LOGIN \u003d \"Duck login\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String INCORRECT_USER_OR_PW \u003d \"Incorrect user or pw.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String WELCOME_TEXT \u003d \"Welcome to Duck System\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final char DONE \u003d \u0027✓\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final char NOT_DONE \u003d \u0027✕\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST_IN_ENGLISH \u003d \"There is no task in the list!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EMPTY_LIST_IN_CHINESE \u003d \"程序中没有任务!\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_LIST_RESPOND_FORMAT \u003d \"%s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_TODO_LIST \u003d \"%d. [%c][%c] %s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EVENT_LIST \u003d \"%d. %s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_TODO_SUCCESS_IN_ENGLISH \u003d \"Got it. I\u0027ve added this task: [ID:%d][%c][%c] %s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_TODO_SUCCESS_IN_CHINESE \u003d \"添加成功。 已添加: [ID:%d][%c][%c] %s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DEADLINE_SUCCESS_IN_ENGLISH \u003d \"Got it. I\u0027ve added this task: [ID:%d][%c][%c] %s (%s)\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DEADLINE_SUCCESS_IN_CHINESE \u003d \"添加成功。 已添加: [ID:%d][%c][%c] %s (%s)\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DEADLINE_LIST \u003d \"%d. %s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EVENT_SUCCESS_IN_ENGLISH \u003d \"Got it. I\u0027ve added this task: [ID:%d][%c][%c] %s (%s)\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_EVENT_SUCCESS_IN_CHINESE \u003d \"添加成功。 已添加: [ID:%d][%c][%c] %s (%s)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT_IN_ENGLISH \u003d \"Invalid command format!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_FORMAT_IN_CHINESE \u003d \"无效命令!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_ENGLISH \u003d \"The task index provided is invalid\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX_IN_CHINESE \u003d \"输入的任务序号无效\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String JSON_FILE_PATH \u003d \"src\"+ File.pathSeparator+\"main\"+File.pathSeparator+\"data\"+File.pathSeparator+\"taskManager.json\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_FILE_OPERATION_IO_ERROR_IN_ENGLISH \u003d \"Error writing to file: %s\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_FILE_OPERATION_IO_ERROR_IN_CHINESE \u003d \"无法写入目标文件: %s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_SUCCESS_IN_ENGLISH \u003d \"Undo successfully!\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_UNSUCCESSFUL_IN_ENGLISH \u003d \"Sorry, there was an IO error when undoing the state.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_AT_BEGINNING_IN_ENGLISH \u003d \"You are already at the initial state!\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_SUCCESS_IN_CHINESE \u003d \"撤销成功!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_UNSUCCESSFUL_IN_CHINESE \u003d \"对不起，文件系统已损坏，撤销失败\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_UNDO_AT_BEGINNING_IN_CHINESE \u003d \"无法完成撤销：你已经在最初态\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_CLEAR_SUCCESS_IN_ENGLISH \u003d \"The system has been cleared!\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_CLEAR_SUCCESS_IN_CHINESE \u003d \"所有任务都已被删除!\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_IN_ENGLISH \u003d \"Invalid date!\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_DATE_IN_CHINESE \u003d \"无效日期!\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_IN_ENGLISH \u003d \"Invalid Command\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_INVALID_COMMAND_IN_CHINESE \u003d \"无效指令\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_ENGLISH \u003d \"Duplicated tasks is not allowed in current mode!\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    public static final String MESSAGE_DUPLICATED_TASK_NOT_ALLOWED_IN_CHINESE \u003d \"当前设定下不允许添加重复事项！\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 49
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "todo read a book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "# change to script directory"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "# shellcheck disable\u003dSC2164"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "cd \"${0%/*}\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "cd .."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "./gradlew shadowJar"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "# shellcheck disable\u003dSC2164"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "cd text-ui-test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "# shellcheck disable\u003dSC2046"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "java  -jar $(find ../build/libs/ -mindepth 1 -print -quit) \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "diff EXPECTED.TXT ACTUAL.TXT"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    echo \"Test passed!\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wangqinNick"
        },
        "content": "    echo \"Test failed!\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wangqinNick": 12,
      "-": 12
    }
  }
]
