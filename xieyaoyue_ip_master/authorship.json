[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "# Duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "# Duke - User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "1. Introduction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "2. Quick Start"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "3. Features \u003cbr/\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.1 Adding a \u0027todo\u0027 task: `todo` \u003cbr/\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.2 Adding an \u0027event\u0027: `event` \u003cbr/\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.3 Adding a \u0027deadline\u0027: `deadline` \u003cbr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.4 Listing all tasks: `list` \u003cbr/\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.5 Finding tasks by keywords: `find` \u003cbr/\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.6 Deleting a task: `delete` \u003cbr/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.7 Marking a task as done: `done` \u003cbr/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.8 Saving the data \u003cbr/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "   3.9 Exiting the program: `bye` \u003cbr/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "4. Command Summary"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Duke is for those who prefer to work with a Command Line Interface (CLI) for managing tasks. If you can type fast, Duke can get your tasks managed fasster than traditional GUI apps. Interested? Jump to Section 2, \"Quick Start\" to get started. Enjoy!"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "2. Download the latest iP.jar."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "3. You may launch the program by double clicking the downloaded jar file, or run command java -jar iP.jar ."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "4. Type the command and press \u0027Enter\u0027 on the keyboard to execute it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "5. Refer to Section 3, \"Features\" for details of each command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "#### Command Format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* Words in UPPER_CASE are the parameters to be supplied by the user e.g. in `todo TASK`, `TASK` is a parameter which can be used as `todo read book`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* Command word is case-insensitive e.g. `todo` can be entered as `TODO`."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.1 Adding a \u0027todo\u0027 task: `todo`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Adds a \u0027todo\u0027 task to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `todo TASK` \u003cbr/\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `todo read book`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.2 Adding an \u0027event\u0027: `event`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Adds an \u0027event\u0027 to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `event TASK /at EVENT_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `event team project meeting /at 2/10/2019 2-4pm`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.3 Adding a \u0027deadline\u0027: `deadline`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Adds a \u0027deadline\u0027 to the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `deadline TASK /by DUE_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `deadline submit report /by 11/10/2019 5pm`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.4 Listing all tasks: `list`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Shows a list of tasks in the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.5 Finding tasks by keywords: `find`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Find tasks which descriptions contain the given keywords. \u003cbr/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `find KEYWORD` \u003cbr/\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `find book`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.6 Deleting a task: `delete`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Deletes the specified task from the task list. \u003cbr/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `delete INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `delete 1`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "#### Note:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* The index refers to the index number shown in the displayed task list. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.7 Marking a task as done: `done`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Marks the specified task from the task list as done. \u003cbr/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `done INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `done 1` \u003cbr/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "#### Note:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.8 Saving the data"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Task list data are saved in the hard disk automatically after any command that changes the data. \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "There is no need to save manually. \u003cbr/\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "This data can be accessed during later sessions. \u003cbr/\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "### 3.9 Exiting the program: `bye`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Exits the program. \u003cbr/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "Format: `exit`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "## 4. Command Summary"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `todo TASK` \u003cbr/\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `todo read book`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `event TASK /at EVENT_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `event team project meeting /at 2/10/2019 2-4pm`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `deadline TASK /by DUE_TIME` \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `deadline submit report by 11/10/2019 5pm`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `find KEYWORD` \u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `find book`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `delete INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `delete 1`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `done INDEX` \u003cbr/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "  e.g. `done 1`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "* `bye`"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 85,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Duke/Commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.NoDueTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.NoEventTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents the command for adding tasks into the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Initializes type of task and details of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public AddCommand(String typeTask, String details) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.taskType \u003d typeTask;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Adds a task into the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws NoEventTimeException if the user didn\u0027t state the event time of an event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws NoDueTimeException if the user didn\u0027t state the due time of a deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws NoEventTimeException,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            NoDueTimeException, StorageOperationException, EmptyTaskException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String[] words;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        switch(taskType) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            tasklist.addTodo(details);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.showAdd(tasklist);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if(details.matches(\"/at(.*)\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                throw new EmptyTaskException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (details.matches(\"(.*)/at\") || !details.contains(\"/at \")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                throw new NoEventTimeException();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            words \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            tasklist.addEvent(words[0].trim(), words[1].trim());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.showAdd(tasklist);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if(details.matches(\"/by(.*)\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                throw new EmptyTaskException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if (details.matches(\"(.*)/by\") || !details.contains(\"/by \")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                throw new NoDueTimeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            words \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            tasklist.addDeadline(words[0].trim(), words[1].trim());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.showAdd(tasklist);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        storage.save(tasklist);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 66
    }
  },
  {
    "path": "src/main/java/Duke/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.NoEventTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.NoDueTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDeleteNumberException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyDoneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyDeleteException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.UnsureMeaningException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDoneNumberException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyFindException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDoneFormatException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDeleteFormatException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents the command that the user wants the program to execute."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Executes a command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Saves task list after a command is executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Throws exceptions if the command is invalid or there is problem saving task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public abstract void execute(TaskList tasklist, Ui ui, Storage storage) throws"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            NoEventTimeException, NoDueTimeException, InvalidDeleteNumberException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            EmptyDoneException, EmptyDeleteException, EmptyTaskException,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            UnsureMeaningException, InvalidDoneNumberException, StorageOperationException,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            EmptyFindException, InvalidDoneFormatException, InvalidDeleteFormatException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return true if the user wants to end program, false if otherwise."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Default return value is false, unless the gives the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 42
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDeleteFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDeleteNumberException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Deletes a task using its last displayed index from the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public DeleteCommand(String details) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws InvalidDeleteNumberException,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            StorageOperationException, InvalidDeleteFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int deleteNumber;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            deleteNumber \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidDeleteFormatException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!(deleteNumber \u003e\u003d 0 \u0026\u0026 deleteNumber \u003c totalTasks)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidDeleteNumberException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showDelete(tasklist, deleteNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasklist.updateDelete(deleteNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        storage.save(tasklist);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 37
    }
  },
  {
    "path": "src/main/java/Duke/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDoneFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidDoneNumberException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Marks a task as done using its last displayed index from the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public DoneCommand(String details) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws InvalidDoneNumberException,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            StorageOperationException, InvalidDoneFormatException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int doneNumber;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            doneNumber \u003d Integer.parseInt(details) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidDoneFormatException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if (!(doneNumber \u003e\u003d 0 \u0026\u0026 doneNumber \u003c totalTasks)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidDoneNumberException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasklist.updateDone(doneNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showDone(tasklist, doneNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        storage.save(tasklist);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 37
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Terminates the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 19
    }
  },
  {
    "path": "src/main/java/Duke/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d tasklist.findTasks(keyword);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showKeywordList(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 22
    }
  },
  {
    "path": "src/main/java/Duke/Commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyDoneException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyDeleteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.UnsureMeaningException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.EmptyFindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents an incorrect command i.e. the format of the command is incorrect"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public IncorrectCommand(String details) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) throws EmptyDoneException,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            EmptyDeleteException, EmptyTaskException, UnsureMeaningException,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            EmptyFindException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        switch(details) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"empty done\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new EmptyDoneException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"empty delete\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new EmptyDeleteException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"empty find\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"empty task\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new EmptyTaskException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"unsure\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new UnsureMeaningException();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 39
    }
  },
  {
    "path": "src/main/java/Duke/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Lists all tasks in the task list to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showTaskList(tasklist);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 15
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Entry point of the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Initializes the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static TaskList tasklist;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void run(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        start(args);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        runCommandLoopUntilExitCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Sets up the required objects and loads data from the storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void start(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            storage \u003d initializeStorage(args);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            tasklist \u003d storage.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Reads the user command and executes it, until the user issues the \u0027bye\u0027 command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static void runCommandLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ui.showWelcomeMessage(storage.filepath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } while(!isExit);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Creates the Storage object based on the user-specified file path (if any) or the default storage path."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param Args arguments supplied by the user at program launch."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws InvalidStorageFilePathException if the target file path is incorrect."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if there some error in creating storage file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static Storage initializeStorage(String[] Args) throws InvalidStorageFilePathException, StorageOperationException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        boolean isStorageFileSpecifiedByUser \u003d Args.length \u003e 0;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return isStorageFileSpecifiedByUser? new Storage(Args[0]) : new Storage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public static void main(String[] Args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        run(Args);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 70,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Classifies the various exceptions that could occur in the application under \u0027DukeException\u0027."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        System.out.print(\"☹ OOPS!!! \");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/EmptyDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user didn\u0027t specify which task to delete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class EmptyDeleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know which task you want to delete :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/EmptyDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user didn\u0027t specify which task to mark as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class EmptyDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know which task you\u0027ve completed :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/EmptyFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user did not specify the keyword to search in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class EmptyFindException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know what is your search keyword :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user didn\u0027t specify the details of the task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class EmptyTaskException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"The description of a task cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InvalidDeleteFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the details for the \u0027done\u0027 command is in the wrong format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class InvalidDeleteFormatException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but your \u0027delete\u0027 detail is in the wrong format :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InvalidDeleteNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user has wrongly declared the index of the task to delete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class InvalidDeleteNumberException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"There\u0027s no such task :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InvalidDoneFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the details for the \u0027done\u0027 command is in the wrong format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class InvalidDoneFormatException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but your \u0027done\u0027 detail is in the wrong format :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InvalidDoneNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user has wrongly declared the index of the task to mark as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class InvalidDoneNumberException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"There\u0027s no such task :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/InvalidStorageFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the given file path does not fulfill the storage filepath constraints."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class InvalidStorageFilePathException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"Storage file should end with \u0027.txt\u0027\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/NoDueTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user did not specify the due time of a deadline."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class NoDueTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"Please specify the due time.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/NoEventTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user did not specify the event time of an event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class NoEventTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"Please specify the event time.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/StorageOperationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that some error has occurred while creating storage file,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * or trying to read/write data between the application and the storage file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class StorageOperationException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String errorMessage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public StorageOperationException(String errorMessage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 15
    }
  },
  {
    "path": "src/main/java/Duke/Exceptions/UnsureMeaningException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Signals that the user has keyed in a command that the application could not understand."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class UnsureMeaningException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 10
    }
  },
  {
    "path": "src/main/java/Duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.IncorrectCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Commands.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Parses user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param userInput full user input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return the command based on the user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public static Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        // trims the input of all leading and trailing spaces so that command can be captured accurately"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        userInput \u003d userInput.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        // input on type of task should be case-insensitive"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String lowerCaseInput \u003d userInput.toLowerCase();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        switch (lowerCaseInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new IncorrectCommand(\"empty done\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new IncorrectCommand(\"empty delete\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new IncorrectCommand(\"empty find\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new IncorrectCommand(\"empty task\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String[] words \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if(lowerCaseInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new ListCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new FindCommand(words[1].trim());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new DoneCommand(words[1].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new DeleteCommand(words[1].trim());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new AddCommand(\"todo\", words[1].trim());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new AddCommand(\"event\", words[1].trim());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(words[0].equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new AddCommand(\"deadline\", words[1].trim());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else if(!lowerCaseInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new IncorrectCommand(\"unsure\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 69
    }
  },
  {
    "path": "src/main/java/Duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.InvalidStorageFilePathException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Exceptions.StorageOperationException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents the file used to store task list data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String HOME \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String DEFAULT_FILEPATH \u003d HOME + File.separator + \"Documents\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            + File.separator + \"CS2113T\" + File.separator + \"tasks.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws InvalidStorageFilePathException if the default file path is invalid"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if there is error in creating the storage file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Storage() throws InvalidStorageFilePathException, StorageOperationException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this(DEFAULT_FILEPATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws InvalidStorageFilePathException if the given file path is invalid"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if there is error in creating the storage file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Storage(String filePath) throws InvalidStorageFilePathException, StorageOperationException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.filepath \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if(!isValidPath(filePath)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new InvalidStorageFilePathException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            boolean hasParent \u003d file.getParentFile() !\u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if(hasParent) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new StorageOperationException(\"Error creating file: \" + filepath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * File path is considered valid if it ends with \u0027.txt\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Returns true if the given path is acceptable as a storage file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static boolean isValidPath(String filePath) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return filePath.endsWith(\".txt\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return task list data loaded from the storage file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if storage file is not found."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public TaskList load() throws StorageOperationException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        TaskList tasks;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks \u003d decodeFile();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Decodes the storage file and stores data into a new task list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return task list with the stored data"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if storage file is not found"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private TaskList decodeFile() throws StorageOperationException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        TaskList tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            int totalTasks \u003d 0;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                String thisLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                String[] words \u003d thisLine.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                switch (words[0].trim()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    tasklist.addTodo(words[2].trim());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    tasklist.addEvent(words[2].trim(), words[3].trim());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    tasklist.addDeadline(words[2].trim(), words[3].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    System.out.println(\"This line is not added to list:\" + thisLine);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                if (Integer.parseInt(words[1].trim()) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    tasklist.updateDone(totalTasks);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                totalTasks++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new StorageOperationException(\"Error finding storage file: \" + filepath);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return tasklist;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Saves the task list data into the storage file."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @throws StorageOperationException if there were errors storing data to the file."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void save(TaskList tasklist) throws StorageOperationException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            for (int i \u003d 0; i \u003c totalTasks; ++i) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                fw.write(tasklist.getTask(i).storeString() + \"\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            throw new StorageOperationException(\"Error writing to file: \" + filepath);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 122
    }
  },
  {
    "path": "src/main/java/Duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents a deadline in the task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        // If the user keys in the due time in the form of date of a particular format,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        // a different date format will be stored."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            LocalDateTime input \u003d LocalDateTime.parse(by.trim(), DateTimeFormatter.ofPattern"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    (\"yyyy-MM-dd HHmm\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            this.by \u003d input.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mm a\")."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    withLocale(Locale.ENGLISH)); //e.g. input: 2020-01-01 1800, output: Jan 1 2020 6:00 PM"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } catch(DateTimeException ignored) { //do nothing if the due time input is not in the specified format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"[D]\" + super.toString() + \" \" + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"D\" + super.storeString() + \" |\" + by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 41
    }
  },
  {
    "path": "src/main/java/Duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents an event in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"[E]\" + super.toString() + \" \" + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"E\" + super.storeString() + \" | \" + at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 26
    }
  },
  {
    "path": "src/main/java/Duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents a general task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return tick or X symbol based on whether the task is marked as done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Stores the task in the storage file based on a given format."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \" | \" + (isDone? \"1\":\"0\") + \" | \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 43
    }
  },
  {
    "path": "src/main/java/Duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents a \u0027todo\u0027 task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String storeString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return \"T\" + super.storeString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 19
    }
  },
  {
    "path": "src/main/java/Duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Represents the entire task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Contains data of the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private int totalTasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Creates an empty task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        totalTasks \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void updateDone(int doneNumber) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks.get(doneNumber).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void updateDelete(int deleteNumber) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks.remove(deleteNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        totalTasks--;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Adds a todo task into the task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void addTodo(String task) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks.add(new Todo(task));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Adds an event into the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void addEvent(String task, String at) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks.add(new Event(task, at));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Adds a deadline into the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void addDeadline(String task, String by) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        tasks.add(new Deadline(task, by));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        totalTasks++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Searches and returns tasks that contain a particular keyword"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        boolean hasKeyword;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        ArrayList\u003cTask\u003e keywordTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for(Task task: tasks) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            hasKeyword \u003d false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if(task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                hasKeyword \u003d true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            } else if(task instanceof Event) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                if(event.getAt().contains(keyword)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    hasKeyword \u003d true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            } else if(task instanceof Deadline) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                if(deadline.getBy().contains(keyword)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    hasKeyword \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            if(hasKeyword) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                keywordTasks.add(task);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return keywordTasks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return the details of a task based on its latest index in the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return tasks.get(taskIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @return the total number of tasks in the task list."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public int getTotalTasks() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return totalTasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 106
    }
  },
  {
    "path": "src/main/java/Duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "import Duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_USING_STORAGE_FILE \u003d \"Using storage file : %1$s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_WELCOME \u003d \"Hello! I\u0027m Duke.\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_ADD \u003d \"Got it. I\u0027ve added this task:\\n %1$s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n %1$s\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task:\\n %1$s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_CURRENT_STATUS \u003d \"Now you have %1$d %2$s in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_EMPTY_LIST \u003d \"List is empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_MATCHING_TASKS \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private static final String MESSAGE_EMPTY_MATCH \u003d \"There\u0027s no match.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Reads the text entered by the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints welcome message upon the start of the application."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * @param filePath path to the storage file being used."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showWelcomeMessage(String filePath) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String storageFileInfo \u003d String.format(MESSAGE_USING_STORAGE_FILE, filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(LOGO, MESSAGE_WELCOME, storageFileInfo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(errorMessage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints the list of tasks in the task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showTaskList(TaskList tasklist) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if(totalTasks\u003d\u003d0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            showToUser(MESSAGE_EMPTY_LIST);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            showToUser(getTaskList(tasklist));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints the list of tasks in the keyword list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showKeywordList(ArrayList\u003cTask\u003e keywordList) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        if(keywordList.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            showToUser(MESSAGE_EMPTY_MATCH);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            int taskNumber \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            showToUser(MESSAGE_MATCHING_TASKS);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            for(Task task : keywordList) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                showToUser(taskNumber + \". \" + task.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                taskNumber++;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints the details of task which has just been added to the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showAdd(TaskList tasklist) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String addInfo \u003d String.format(MESSAGE_ADD, tasklist.getTask(totalTasks-1));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(addInfo);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints the details of task which has just been marked as done."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showDone(TaskList tasklist, int doneNumber) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String doneInfo \u003d String.format(MESSAGE_DONE, tasklist.getTask(doneNumber));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(doneInfo);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Prints the details of task which has just been deleted from the task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showDelete(TaskList tasklist, int deleteNumber) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String deleteInfo \u003d String.format(MESSAGE_DELETE, tasklist.getTask(deleteNumber));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks() - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        String currentStatus \u003d String.format(MESSAGE_CURRENT_STATUS, totalTasks,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                (totalTasks\u003d\u003d1 || totalTasks\u003d\u003d0)? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        showToUser(deleteInfo, currentStatus);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    private String getTaskList(TaskList tasklist) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        final StringBuilder formattedList \u003d new StringBuilder();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int totalTasks \u003d tasklist.getTotalTasks();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        int taskNumber;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for(taskNumber \u003d 0; taskNumber \u003c totalTasks-1; taskNumber++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            formattedList.append(taskNumber + 1).append(\".\").append(tasklist."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "                    getTask(taskNumber)).append(\"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        formattedList.append(taskNumber + 1).append(\".\").append(tasklist.getTask(taskNumber));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        return formattedList.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     * Shows message(s) to the user."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    public void showToUser(String... message) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        for(String m : message) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "            System.out.println(m);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 133
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "todo task1"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\Exceptions\\*.java ..\\src\\main\\java\\Duke\\Task\\*.java  ..\\src\\main\\java\\Duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xieyaoyue"
        },
        "content": "java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "xieyaoyue": 2,
      "-": 19
    }
  }
]
