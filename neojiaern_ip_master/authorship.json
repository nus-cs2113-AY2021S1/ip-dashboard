[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.exception.DukeFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String fileSeparator \u003d System.getProperty(\"file.separator\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String filePath \u003d \".\" + fileSeparator + \"data\" + fileSeparator + \"duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Creates the objects and loads any previously saved TaskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If no previous TaskList is present, a new TaskList is created"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param filePath of duke.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (DukeFileException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Prints greet message"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Loops for user input, processes it and prints result of execution until user exits"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ui.printGreetMsg();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String userInput \u003d ui.getUserInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Command c \u003d parser.parse(userInput);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            CommandResult result \u003d c.execute(tasks, ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printResult(result);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printBlankLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Saves changes made to temp.txt and compares differences with duke.txt"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If different, duke.txt will be replaced, else it will be unchanged"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Exits from program"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            storage.saveTasksToTempFile(tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isEqual \u003d storage.compareFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printResult(storage.save(isEqual));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (DukeFileException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ui.printResult(new CommandResult(e.getMessage()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "             ui.printResult(new CommandResult(\"(Error comparing files.)\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "neojiaern": 79
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Adds a todo, deadline or event task to TaskList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD_T \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD_D \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD_E \u003d \"event\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public AddCommand(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.addTask(taskType, taskDescription);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Prints bye message and allows user to exit program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(INDENTATION + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Changes loop condition for user to exit program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return value of isExit."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Method to be implemented by child classes"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public abstract CommandResult execute(TaskList tasks, Ui ui) ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 16
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Stores result of a command after execution"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String result;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult(String result) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.result \u003d result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Deletes a task from TaskList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected int deleteIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public DeleteCommand(int deleteIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.deleteIndex \u003d deleteIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.deleteTask(deleteIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Marks a task as done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected int doneIndex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public DoneCommand(int doneIndex) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.doneIndex \u003d doneIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.doneTask(doneIndex);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DueCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Lists deadlines and events due on the date specified by user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class DueCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"due\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public DueCommand(LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.findDueTasks(date);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.findTaskByKeyword(keyword);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 20
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Stores error message for incorrect command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public IncorrectCommand(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Lists tasks in TaskList"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.listTasks();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Exception class for file related issues"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class DukeFileException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public DukeFileException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.DueCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.IncorrectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String LIST_EXAMPLE \u003d (INDENTATION + \"list: Display all tasks entered by user.\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: list\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TODO_EXAMPLE \u003d (INDENTATION + \"todo: Adds a todo task.\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: todo study\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DEADLINE_EXAMPLE \u003d (INDENTATION + \"deadline: Adds a deadline task.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /by \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"DATE(YYYY-MM-DD) TIME(HH:mm)\" + System.lineSeparator() + INDENTATION + \"  \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Example: deadline CS2113T assignment /by 2020-10-02 23:59\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String EVENT_EXAMPLE \u003d (INDENTATION + \"event: Adds an event task.\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /at \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"DATE(YYYY-MM-DD) TIME(HH:mm)\" + System.lineSeparator() + INDENTATION + \"  \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Example: event project meeting /at 2020-10-02 17:00\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DELETE_EXAMPLE \u003d (INDENTATION + \"delete: Deletes a task from the list.\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: INDEX_OF_TASK_TO_DELETE\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: delete 2\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DONE_EXAMPLE \u003d (INDENTATION + \"done: Marks a completed task as done.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: INDEX_OF_COMPLETED_TASK\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: done 2\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String FIND_EXAMPLE \u003d (INDENTATION + \"find: finds tasks containing related keyword.\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: KEYWORD\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: find book\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DUE_EXAMPLE \u003d (INDENTATION + \"due: Lists deadlines and events due.\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \" \" + \"Parameters: DUE_DATE(YYYY-MM-DD)\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \" \" + \"Example: due 2020-10-02\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String BYE_EXAMPLE \u003d (INDENTATION + \"bye: Exits the program.\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: bye\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Calls the respective methods for the different commands: list, done, and delete task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return Command based on its type."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command parse(String userInput) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String[] inputParts \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String command \u003d inputParts[0].toLowerCase();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_T:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_D:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_E:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processAddCmd(inputParts);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processListCmd(inputParts);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processDoneCmd(inputParts);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processDelCmd(inputParts);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processFindCmd(inputParts);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case DueCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return processDueCmd(inputParts);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case ByeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(INDENTATION + \"Oh no! This command is invalid, \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + \"please try again.\\n\" + LIST_EXAMPLE + System.lineSeparator() + TODO_EXAMPLE"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + System.lineSeparator() + DEADLINE_EXAMPLE + System.lineSeparator()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + EVENT_EXAMPLE + System.lineSeparator() + DELETE_EXAMPLE"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + System.lineSeparator() + DONE_EXAMPLE + System.lineSeparator() + FIND_EXAMPLE"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + System.lineSeparator() + DUE_EXAMPLE + System.lineSeparator() + BYE_EXAMPLE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process adding of todo, deadline and event tasks"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing type of task and it\u0027s description."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return AddCommand containing type of task and its description or IncorrectCommand if invalid."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processAddCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String taskType \u003d inputParts[0].toLowerCase();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String taskDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new AddCommand(taskType, taskDescription);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The description of \" + taskType + \" cannot be empty.\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case AddCommand.COMMAND_WORD_T:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                message +\u003d TODO_EXAMPLE;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case AddCommand.COMMAND_WORD_D:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                message +\u003d DEADLINE_EXAMPLE;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case AddCommand.COMMAND_WORD_E:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                message +\u003d EVENT_EXAMPLE;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process delete command"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing delete command and index of task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return DeleteCommand containing index of task to delete or IncorrectCommand if invalid."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processDelCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String deleteDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(deleteDescription);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The index for a task cannot be missing.\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DELETE_EXAMPLE;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The index for a task to delete must be an integer.\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DELETE_EXAMPLE;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process done command"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing done command and index of task."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return DoneCommand containing index of task done or IncorrectCommand if invalid."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processDoneCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String doneDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(doneDescription);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The index for a task cannot be missing.\\n\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DONE_EXAMPLE;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The index for a task to delete must be an integer.\\n\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DONE_EXAMPLE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process list command"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing list command."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return ListCommand or IncorrectCommand if invalid."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processListCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (inputParts.length \u003e 1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! There should be no description after list.\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + LIST_EXAMPLE;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processFindCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String keyword \u003d inputParts[1];"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The keyword for find cannot be missing.\\n\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + FIND_EXAMPLE;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Command processDueCmd(String[] inputParts) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String dueDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            LocalDate dueDate \u003d LocalDate.parse(dueDescription);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new DueCommand(dueDate);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The due date cannot be missing.\\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DUE_EXAMPLE;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \"Oh no! The due date specified is in a wrong format.\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + DUE_EXAMPLE;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return new IncorrectCommand(message);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "neojiaern": 199
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.exception.DukeFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Deals with loading and saving tasks from duke.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String fileSeparator \u003d System.getProperty(\"file.separator\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Loads tasks from duke.txt"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return tasks in duke.txt."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @throws DukeFileException when duke.txt is empty."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeFileException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dukeFile \u003d createFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (dukeFile.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION + \"(duke.txt is empty)\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            processFile(dukeFile, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Checks if duke.txt is present, if not create a new one"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return the file duke.txt."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public File createFile() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dukeFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (dukeFile.exists()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return dukeFile;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (!dukeFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                dukeFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            dukeFile.createNewFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(System.lineSeparator() + INDENTATION + \"(File duke.txt could not be created)\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return dukeFile;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Processes the duke.txt file to save the tasks present in it to ArrayList"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param dukeFile duke.txt file."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void processFile(File dukeFile, ArrayList\u003cTask\u003e tasks) throws DukeFileException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Scanner reader \u003d null;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            reader \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + \"(File duke.txt could not be found)\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] dataParts \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (dataParts[0]) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task todoTask \u003d new Todo(dataParts[2]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(todoTask);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task deadlineTask \u003d new Deadline(dataParts[2], dataParts[3]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task eventTask \u003d new Event(dataParts[2], dataParts[3]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                // ignore invalid task types"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (dataParts[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.get(tasks.size()-1).markAsDone();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Saves the current tasks in the list to a temporary file"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks to be saved into temp.txt after changes have been made."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void saveTasksToTempFile(TaskList tasks) throws DukeFileException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        FileWriter tempFile \u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempFile \u003d new FileWriter(\"data/temp.txt\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION + \"(Could not create temp.txt)\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d tasks.getCount(); i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String task \u003d \"\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (tasks.getTask(i-1).hasDueDate) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                task \u003d tasks.getTask(i - 1).printToFile();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                task \u003d tasks.getTask(i - 1).toString();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] taskParts \u003d task.split(\"\\\\]\\\\[\", 2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] descriptionParts \u003d taskParts[1].split(\" \", 2);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int done \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (taskParts[0].replace(\"[\", \"\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d descriptionParts[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] dParts \u003d descriptionParts[1].split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d dParts[0] + \" | \" + dParts[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] eParts \u003d descriptionParts[1].split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d eParts[0] + \" | \" + eParts[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            done \u003d checkStatus(descriptionParts[0]);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String entry \u003d type + \" | \" + done + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tempFile.write(entry);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                throw new DukeFileException(System.lineSeparator() + INDENTATION + \"(Could not write to temp.txt)\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempFile.close();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION + \"(temp.txt could not be closed)\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Checks if status of task is completed to assign it the correct icon"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param status whether task is done or not done."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return status of task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private int checkStatus(String status) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        status \u003d status.replace(\"]\", \"\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (status.equals(TICK)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            done \u003d 1;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Compares duke.txt and temp.txt to find differences"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of whether both files are the same."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @throws IOException if files cannot be read."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @throws DukeFileException if there are errors when comparing files."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean compareFile() throws DukeFileException, IOException {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        BufferedReader dukeReader \u003d null;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        BufferedReader tempReader \u003d null;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            dukeReader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + \"(Error comparing files, duke.txt not found)\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempReader \u003d new BufferedReader(new FileReader(\"data\" + fileSeparator + \"temp.txt\"));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            throw new DukeFileException(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + \"(Error comparing files, temp.txt not found)\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String dukeLine \u003d dukeReader.readLine();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String tempLine \u003d tempReader.readLine();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean isEqual \u003d true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (dukeLine !\u003d null || tempLine !\u003d null) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if(dukeLine \u003d\u003d null || tempLine \u003d\u003d null) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isEqual \u003d false;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }  else if (!dukeLine.equalsIgnoreCase(tempLine)) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isEqual \u003d false;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                dukeLine \u003d dukeReader.readLine();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempLine \u003d tempReader.readLine();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        dukeReader.close();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        tempReader.close();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return isEqual;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If files are different, replace duke.txt with temp.txt to save changes made"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If files are the same, remove temp.txt"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param isEqual whether duke.txt and temp.txt are the same."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of save"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult save(boolean isEqual) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File tempFile \u003d new File(\".\" + fileSeparator + \"data\" + fileSeparator + \"temp.txt\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dukeFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (!isEqual) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isDeleted \u003d dukeFile.delete();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isRenamed \u003d tempFile.renameTo(dukeFile);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (isRenamed \u0026\u0026 isDeleted) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"(Changes have been saved to duke.txt)\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"(Changes have not been saved to duke.txt)\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isDeleted \u003d tempFile.delete();"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (isDeleted) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"(No changes have been made to duke.txt)\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(System.lineSeparator() + INDENTATION"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"(Failed to remove temp.txt)\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 264
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Deadline (String taskName, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        hasDueDate \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        parseDateTime();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void parseDateTime() throws DateTimeParseException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String[] dateTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        date \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        time \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \" \" + time + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Event (String taskName, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        hasDueDate \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        parseDateTime();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void parseDateTime() throws DateTimeParseException, ArrayIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String[] dateTime \u003d at.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        date \u003d LocalDate.parse(dateTime[0]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        time \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \" \" + time + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \" \" + time + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TICK \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String CROSS \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public boolean hasDueDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String printToFile() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return getStatusIcon() + \" \" + taskName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 36
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Deals with operations relating to TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DEADLINE_EXAMPLE \u003d (INDENTATION + \"deadline: Adds a deadline task.\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /by \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"DATE(YYYY-MM-DD) TIME(HH:mm)\" + System.lineSeparator() + INDENTATION + \"  \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Example: deadline CS2113T assignment /by 2020-10-02 23:59\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String EVENT_EXAMPLE \u003d (INDENTATION + \"event: Adds an event task.\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /at \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"DATE(YYYY-MM-DD) TIME(HH:mm)\" + System.lineSeparator() + INDENTATION + \"  \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"Example: event project meeting /at 2020-10-02 17:00\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public int getCount() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Adds task user specified"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param taskType specifies type of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of execution."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult addTask(String taskType, String taskDescription) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_T:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task todoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.add(todoTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_D:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] deadlineParts \u003d taskDescription.split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task deadlineTask \u003d new Deadline(deadlineParts[0], deadlineParts[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String message \u003d INDENTATION + \"Oh no! /by description is missing \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"or incomplete from deadline.\\n\" + DEADLINE_EXAMPLE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String message \u003d INDENTATION + \"Oh no! The date or time specified is in a wrong format.\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + DEADLINE_EXAMPLE;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case AddCommand.COMMAND_WORD_E:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] eventParts \u003d taskDescription.split(\" /at \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task eventTask \u003d new Event(eventParts[0], eventParts[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String message \u003d INDENTATION + \"Oh no! /at description is missing \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + \"or incomplete from event.\\n\" + EVENT_EXAMPLE;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String message \u003d INDENTATION + \"Oh no! The date or time specified is in a wrong format.\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                        + EVENT_EXAMPLE;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                return new CommandResult(message);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d INDENTATION + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + INDENTATION + \"  \" + tasks.get(tasks.size()-1) + \"\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + INDENTATION + \"Now you have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Deletes a task based on index user specified"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param deleteIndex index of task to delete."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of execution."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult deleteTask(int deleteIndex) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String taskMessage \u003d INDENTATION + \" \" + tasks.get(deleteIndex-1).toString();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.remove(deleteIndex-1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"Noted. I\u0027ve removed this task:\\n\" + taskMessage + \"\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + INDENTATION + \"Now you have \" + tasks.size() + \" task(s) in the list.\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"Oh no! This task is not found.\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Marks task specified by user as done based on index"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param doneIndex contains index of completed task in list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of execution."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult doneTask(int doneIndex) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.get(doneIndex-1).markAsDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                    + INDENTATION + \"  \" + tasks.get(doneIndex-1).toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"Oh no! This task is not found.\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Prints tasks present in list"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return result of execution."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult listTasks() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"There is currently no task.\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"Here are the task(s) in your list:\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                result +\u003d \"\\n\" + INDENTATION + i + \".\" + tasks.get(i-1).toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult findTaskByKeyword(String keyword) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        result \u003d INDENTATION + \"Here are the matching task(s) in your list:\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task task \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (task.taskName.contains(keyword)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                result +\u003d \"\\n\" + INDENTATION + count + \".\" + tasks.get(i - 1).toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"There are no task(s) which match the given keyword.\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public CommandResult findDueTasks(LocalDate date) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        result \u003d INDENTATION + \"Here are the tasks due:\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task task \u003d tasks.get(i-1);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (task.hasDueDate \u0026\u0026 task.date.equals(date)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                result +\u003d \"\\n\" + INDENTATION + count + \".\" + tasks.get(i-1).toString();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            result \u003d INDENTATION + \"There are no deadlines or events due on that date.\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return new CommandResult(result);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 185
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Todo (String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        hasDueDate \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 14
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String LINE \u003d INDENTATION"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getUserInput() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(INDENTATION + \"(No previously loaded task from duke.txt)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void printBlankLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void printResult(CommandResult result) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        out.println(result.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void printGreetMsg() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"What can I do for you?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "deadline assignment /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "event project meeting /at tuesday 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list abc"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "blah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done two"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete two"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "neojiaern": 3
    }
  }
]
