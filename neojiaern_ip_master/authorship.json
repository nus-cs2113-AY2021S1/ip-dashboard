[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String INDENTATION \u003d \"    \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String LINE \u003d INDENTATION"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String EVENT_COMMAND \u003d  \"event\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String LIST_EXAMPLE \u003d (INDENTATION + \"list: Display all tasks entered by user.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: list\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TODO_EXAMPLE \u003d (INDENTATION + \"todo: Adds a todo task.\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: todo study\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DEADLINE_EXAMPLE \u003d (INDENTATION + \"deadline: Adds a deadline task.\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /by TIME\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: deadline CS2113T assignment /by Monday\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String EVENT_EXAMPLE \u003d (INDENTATION + \"event: Adds an event task.\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: TASK_DESCRIPTION /at TIME\")"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: event project meeting /at Tuesday 2pm\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DELETE_EXAMPLE \u003d (INDENTATION + \"delete: Deletes a task from the list.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: INDEX_OF_TASK_TO_DELETE\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: delete 2\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String DONE_EXAMPLE \u003d (INDENTATION + \"done: Marks a completed task as done.\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Parameters: INDEX_OF_COMPLETED_TASK\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: done 2\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String BYE_EXAMPLE \u003d (INDENTATION + \"bye: Exits the program.\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            + System.lineSeparator() + INDENTATION + \"  \" + \"Example: bye\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String fileSeparator \u003d System.getProperty(\"file.separator\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String dirPath \u003d \".\" + fileSeparator + \"data\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String filePath \u003d  dirPath + fileSeparator + \"duke.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dukeFile \u003d checkFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        processFile(dukeFile, tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        printGreetMsg();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        processUserInput(userInput, tasks, in);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        saveTasksToTempFile(tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        compareFile(dukeFile);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        printByeMsg();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Checks if duke.txt is present, if not create a new one"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return the file duke.txt."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static File checkFile() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dataDir \u003d new File(dirPath);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File dukeFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean dirExists \u003d dataDir.exists();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean fileExists \u003d dukeFile.exists();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (fileExists \u0026\u0026 dirExists) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            return dukeFile;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else if (!dirExists \u0026\u0026 !fileExists) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            createDataDir(dataDir);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            createDukeFile(dukeFile);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else if (!dirExists) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean dirCreated \u003d dataDir.mkdir();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(dirCreated);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else { // file does not exist"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            createDukeFile(dukeFile);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return dukeFile;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Creates the data directory"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param dataDir data directory."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void createDataDir(File dataDir) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean isCreateDirSuccess \u003d dataDir.mkdir();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (isCreateDirSuccess) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(System.lineSeparator() + INDENTATION + \"(Directory ./data created)\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(System.lineSeparator() + INDENTATION + \"(Directory ./data not created)\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Creates the file duke.txt"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param dukeFile duke.txt file."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void createDukeFile(File dukeFile) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isCreateFileSuccess \u003d dukeFile.createNewFile();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (isCreateFileSuccess) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(File duke.txt created)\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(File duke.txt not created)\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(System.lineSeparator() + INDENTATION + \"(File duke.txt could not be created)\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Processes the duke.txt file to save the tasks present in it to ArrayList"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param dukeFile duke.txt file."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return current number of tasks in the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processFile(File dukeFile, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        Scanner reader \u003d null;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            reader \u003d new Scanner(dukeFile);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(System.lineSeparator() + INDENTATION + \"(File duke.txt could not be found)\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] dataParts \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (dataParts[0]) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task todoTask \u003d new Todo(dataParts[2]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(todoTask);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task deadlineTask \u003d new Deadline(dataParts[2], dataParts[3]);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                Task eventTask \u003d new Event(dataParts[2], dataParts[3]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                // ignore invalid task types"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (dataParts[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tasks.get(tasks.size()-1).markAsDone();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void printGreetMsg() {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Hello! I\u0027m Duke.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"What can I do for you?\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Calls the respective methods for the different commands: list, done and add task"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Unless \"bye\" is entered, continue to take in user input"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param in scanner to take in user input."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processUserInput(String userInput, ArrayList\u003cTask\u003e tasks, Scanner in) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (!userInput.equalsIgnoreCase(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] inputParts \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String command \u003d inputParts[0].toLowerCase();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (command){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case LIST_COMMAND:"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                processListCmd(tasks, inputParts);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case DONE_COMMAND:"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                processDoneCmd(tasks, inputParts);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case TODO_COMMAND:"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case EVENT_COMMAND:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                processAddCmd(tasks, inputParts, command);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case DELETE_COMMAND:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                processDelCmd(tasks, inputParts);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                printExampleInput();"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process delete command"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing delete command and index of task."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processDelCmd(ArrayList\u003cTask\u003e tasks, String[] inputParts) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String deleteDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            deleteTask(deleteDescription, tasks);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Oh no! The index for a task to delete cannot be missing.\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DELETE_EXAMPLE);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process adding of todo, deadline and event tasks"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing type of task and it\u0027s description."
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param command contains either \"todo\"/\"deadline\"/\"event\"."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return the number of tasks in list after addition of new task."
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processAddCmd(ArrayList\u003cTask\u003e tasks, String[] inputParts, String command) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String taskType \u003d inputParts[0];"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String taskDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            addTask(taskType, taskDescription, tasks);"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            printEmptyDescriptionMessage(command);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process done command"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing done command and index of task."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processDoneCmd(ArrayList\u003cTask\u003e tasks, String[] inputParts) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String doneDescription \u003d inputParts[1];"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            doneTask(doneDescription, tasks);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Oh no! The index for a completed task cannot be missing.\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DONE_EXAMPLE);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Process list command"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param inputParts String array containing list command."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void processListCmd(ArrayList\u003cTask\u003e tasks, String[] inputParts) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (inputParts.length \u003e 1) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Oh no! There should be no description after list.\");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LIST_EXAMPLE);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            listTasks(tasks);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Adds task user specified and prints output msg"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param taskType specifies type of task."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param taskDescription description of task."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void addTask(String taskType, String taskDescription, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task todoTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.add(todoTask);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] deadlineParts \u003d taskDescription.split(\" /by \");"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task deadlineTask \u003d new Deadline(deadlineParts[0], deadlineParts[1]);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] eventParts \u003d taskDescription.split(\" /at \");"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            Task eventTask \u003d new Event(eventParts[0], eventParts[1]);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.add(eventTask);"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"  \" + tasks.get(tasks.size()-1));"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void deleteTask(String deleteDescription, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int deleteIndex \u003d Integer.parseInt(deleteDescription);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String message \u003d INDENTATION + \" \" + tasks.get(deleteIndex-1).toString();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.remove(deleteIndex-1);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Now you have \" + tasks.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (deleteDescription \u003d\u003d null) {"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(INDENTATION + \"Oh no! The index for a task to delete cannot be missing.\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(INDENTATION + \"Oh no! This task is not found.\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DELETE_EXAMPLE);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Oh no! The index for a task to delete must be an integer.\");"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DELETE_EXAMPLE);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * prints tasks present in list"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"There is currently no task.\");"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(INDENTATION + i + \".\" + tasks.get(i-1));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Marks task specified by user as done"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Prints output msg"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Handles error when user input is incorrect"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param doneDescription contains index of completed task in list."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void doneTask(String doneDescription, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int doneIndex \u003d Integer.parseInt(doneDescription);"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tasks.get(doneIndex-1).markAsDone();"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"  \" + tasks.get(doneIndex-1));"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (doneDescription \u003d\u003d null) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(INDENTATION + \"Oh no! The index for a completed task cannot be missing.\");"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(INDENTATION + \"Oh no! This task is not found.\");"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DONE_EXAMPLE);"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(LINE);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(INDENTATION + \"Oh no! The index for a completed task must be an integer.\");"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DONE_EXAMPLE);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Prints example of user input when command keyed is invalid"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void printExampleInput() {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Oh no! This command is invalid, please try again.\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LIST_EXAMPLE + System.lineSeparator() + TODO_EXAMPLE + System.lineSeparator()"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + DEADLINE_EXAMPLE + System.lineSeparator() + EVENT_EXAMPLE + System.lineSeparator()"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + DELETE_EXAMPLE + System.lineSeparator() + DONE_EXAMPLE"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                + System.lineSeparator() + BYE_EXAMPLE);"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE + \"\\n\");"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Prints error message for empty description and example during adding of tasks"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param taskType specifies the type of task."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void printEmptyDescriptionMessage(String taskType) {"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Oh no! The description of \" + taskType + \" cannot be empty.\");"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(TODO_EXAMPLE);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(DEADLINE_EXAMPLE);"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(EVENT_EXAMPLE);"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Saves the current tasks in the list to a temporary file"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param tasks an ArrayList to store tasks."
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void saveTasksToTempFile(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        FileWriter tempFile \u003d null;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempFile \u003d new FileWriter(\"data/temp.txt\");"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(\"Could not create temp.txt\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String task \u003d tasks.get(i-1).toString();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] taskParts \u003d task.split(\"\\\\]\\\\[\", 2);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String[] descriptionParts\u003d taskParts[1].split(\" \", 2);"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String type \u003d \"\";"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String description \u003d \"\";"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            int done \u003d 0;"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            switch (taskParts[0].replace(\"[\", \"\")) {"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"T\";"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d descriptionParts[1];"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"D\";"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] dParts \u003ddescriptionParts[1].split(\" \\\\(by: \");"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d dParts[0] + \" | \" + dParts[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                type \u003d \"E\";"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                String[] eParts \u003ddescriptionParts[1].split(\" \\\\(at: \");"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                description \u003d eParts[0] + \" | \" + eParts[1].replace(\")\", \"\");"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            done \u003d checkStatus(descriptionParts[0]);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            String entry \u003d type + \" | \" + done  + \" | \" + description + \"\\n\";"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                tempFile.write(entry);"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(\"Could not write to temp.txt\");"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempFile.close();"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            System.out.println(\"temp.txt could not be closed.\");"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Compares duke.txt and temp.txt to find differences"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If different, replace duke.txt with temp.txt to save changes made"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * If same, remove temp.txt"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param dukeFile duke.txt file."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @throws IOException if files cannot be read."
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private static void compareFile(File dukeFile) throws IOException {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        BufferedReader dukeReader \u003d new BufferedReader(new FileReader(\"data\" + fileSeparator + \"duke.txt\"));"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        BufferedReader tempReader \u003d new BufferedReader(new FileReader(\"data\" + fileSeparator + \"temp.txt\"));"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String dukeLine \u003d dukeReader.readLine();"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        String tempLine \u003d tempReader.readLine();"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        boolean isEqual \u003d true;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        while (dukeLine !\u003d null || tempLine !\u003d null) {"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if(dukeLine \u003d\u003d null || tempLine \u003d\u003d null) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isEqual \u003d false;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }  else if (!dukeLine.equalsIgnoreCase(tempLine)) {"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                isEqual \u003d false;"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            dukeLine \u003d dukeReader.readLine();"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            tempLine \u003d tempReader.readLine();"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        dukeReader.close();"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        tempReader.close();"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        File tempFile \u003d new File(dirPath + fileSeparator + \"temp.txt\");"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (!isEqual) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isDeleted \u003d dukeFile.delete();"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isRenamed \u003d tempFile.renameTo(dukeFile);"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (isRenamed \u0026\u0026 isDeleted) {"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(Changes have been saved to duke.txt)\");"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(Changes have not been saved to duke.txt)\");"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            boolean isDeleted \u003d tempFile.delete();"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            if (isDeleted) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(No changes have been made to duke.txt)\");"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "                System.out.println(System.lineSeparator() + INDENTATION + \"(Failed to remove temp.txt)\");"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            }"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * Checks if status of task is completed to assign it the correct icon"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     *"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @param status whether task is done or not done."
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     * @return status of task."
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "     */"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    private static int checkStatus(String status) {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        int done \u003d 0;"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        status \u003d status.replace(\"]\", \"\");"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        if (status.equals(TICK)) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "            done \u003d 1;"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        }"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static void printByeMsg() {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(INDENTATION + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "neojiaern": 543
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Deadline (String taskName, String by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Event (String taskName, String at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 16
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String TICK \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public static final String CROSS \u003d \"[\\u2718]\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return getStatusIcon() + \" \" + taskName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public Todo (String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "deadline assignment /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "event project meeting /at tuesday 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "event"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list abc"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "blah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done two"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete 9"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete two"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "neojiaern": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "neojiaern"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "neojiaern": 3
    }
  }
]
