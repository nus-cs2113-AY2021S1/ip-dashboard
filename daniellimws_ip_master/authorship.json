[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final int TASKS_CAPACITY \u003d 100;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String AT_ARGUMENT \u003d \"/at \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String BY_ARGUMENT \u003d \"/by \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo \";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String PROMPT \u003d \"\u003e \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String PRE_RESPONSE_WHITESPACE \u003d \"  \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static int taskCount \u003d 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static Task[] tasks \u003d new Task[TASKS_CAPACITY];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printPrompt() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.print(PROMPT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printResponse(String response) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.printf(\"%s%s\\n\", PRE_RESPONSE_WHITESPACE, response);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void welcome() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                \"\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"                 _______\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"               _/       \\\\_\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"              / |       | \\\\\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"             /  |__   __|  \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |__/((o| |o))\\\\__|\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |      | |      |\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |\\\\     |_|     /|\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            | \\\\           / |\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"             \\\\| /  ___  \\\\ |/\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"              \\\\ | / _ \\\\ | /\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"               \\\\_________/\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"                _|_____|_\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"           ____|_________|____\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"          /                   \\\\\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.println(\"Hello. What can I do for you?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printTasks() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (taskCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(\"There are currently no tasks in your list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        for (int i \u003d 0; i \u003c taskCount; ++i) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(String.format(\"%d. %s\", i + 1, tasks[i]));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void handleMarkDone(String cmd) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String[] words \u003d cmd.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            index \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printDoneCmdHelp();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printDoneCmdHelp();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Task task \u003d tasks[index - 1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            task.setAsDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(\"Ok! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(String.format(\"  %s\", task));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.printf(\"Error: Task %d does not exist\", index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.printf(\"Error: Task %d does not exist\", index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printDoneCmdHelp() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: done [task index]\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: done 1\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void handleAddTodo(String cmd) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int descriptionIndex \u003d TODO_COMMAND.length();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description \u003d cmd.substring(descriptionIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(todo);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printTodoCmdHelp();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printTodoCmdHelp() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: todo [description]\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: todo borrow book\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void handleAddDeadline(String cmd) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int descriptionIndex \u003d DEADLINE_COMMAND.length();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int dateIndex \u003d cmd.indexOf(BY_ARGUMENT);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description, date;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            description \u003d cmd.substring(descriptionIndex, dateIndex - 1);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            date \u003d cmd.substring(dateIndex + BY_ARGUMENT.length());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printDeadlineCmdHelp();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(deadline);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printTodoCmdHelp();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printDeadlineCmdHelp() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: deadline [description] /by [when]\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: deadline review pr /by tomorrow\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void handleAddEvent(String cmd) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int descriptionIndex \u003d EVENT_COMMAND.length();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int dateIndex \u003d cmd.indexOf(AT_ARGUMENT);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description, date;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            description \u003d cmd.substring(descriptionIndex, dateIndex - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            date \u003d cmd.substring(dateIndex + AT_ARGUMENT.length());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printEventCmdHelp();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(event);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printTodoCmdHelp();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printEventCmdHelp() {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: event [description] /at [when]\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: event presentation /at tomorrow\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void addTask(Task task) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (taskCount \u003d\u003d TASKS_CAPACITY) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(\"You got too many tasks boss. I won\u0027t add this task. Time to take a rest.\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        tasks[taskCount++] \u003d task;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(String.format(\"Added: %s\", task));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String taskWord \u003d \"task\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (taskCount !\u003d 1) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            taskWord +\u003d \"s\";"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(String.format(\"You now have %d %s in your list.\", taskCount, taskWord));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static boolean handleCommand(String cmd) throws UnknownCommandException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (cmd.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(\"Bye. See you next time.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (cmd.startsWith(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printTasks();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmd.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleMarkDone(cmd);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmd.startsWith(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddTodo(cmd);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmd.startsWith(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddDeadline(cmd);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmd.startsWith(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddEvent(cmd);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        welcome();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        boolean stillRunning \u003d true;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printPrompt();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                stillRunning \u003d handleCommand(in.nextLine().trim());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                printHelp();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(\"\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } while (stillRunning);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        in.close();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static void printHelp() {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Idk what\u0027s that boss.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Available commands are: help, list, todo, deadline, event, done, bye\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Todo:\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printTodoCmdHelp();"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Deadline:\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printDeadlineCmdHelp();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Event:\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printEventCmdHelp();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Done:\");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printDoneCmdHelp();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 250,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d -8130910326024902835L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d 1452597049358726640L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d 4037951695361980047L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d -4014045004293916640L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Task(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event lecture /at tomorrow 8am"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline tutorial /by i dont know"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event nodate"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline nodeadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 17
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java ../src/main/java/duke/task/* ../src/main/java/duke/exception/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "daniellimws": 2
    }
  }
]
