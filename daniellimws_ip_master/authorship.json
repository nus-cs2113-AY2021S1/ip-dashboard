[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### Track tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "This program helps you to keep track of upcoming events, deadlines or any tasks to complete in general."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "At anytime, you can mark a task as done, or delete it from the list. If you have a long list of tasks,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "you can search for a task with a particular keyword too."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### Persistent storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "The program stores the list of tasks locally on your computer using a readable format,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "and it could be transferred to another computer if needed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `todo` - Adds a general task to the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Creates a task with the given description and stores it in the list of existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e todo borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Added: [T][✘] borrow book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  You now have 6 tasks in your list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `event` - Adds an upcoming event to the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Creates an event with the given description and date, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`event [description] /at [when (format: dd/mm/yy hhmm)]`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e event presentation /at 27/09/20 1000"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Added: [E][✘] presentation (at: Sun Sep 27 10:00:00 SGT 2020)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  You now have 7 tasks in your list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `deadline` - Adds a task with a deadline to the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Creates a task with the given description and deadline, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`deadline [description] /by [when (format: dd/mm/yy hhmm)]`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e deadline tutorial /by 27/09/20 1000"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Added: [D][✘] tutorial (at: Sun Sep 27 10:00:00 SGT 2020)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  You now have 7 tasks in your list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Marks a task in the list as done based on the given index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e done 1"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Ok! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    [E][✓] CS2113 lecture (at: Fri Sep 18 16:00:00 SGT 2020)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Deletes a task from the list based on the given index."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e delete 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Ok! I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    [E][✓] CS2113 lecture (at: Fri Sep 18 16:00:00 SGT 2020)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "### `find` - Searches for tasks"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "Searches for tasks that contains the given text."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "`find \u003cfilter\u003e`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "\u003e find lecture"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  Here are the tasks that contains the text \"lecture\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  1. [T][✘] cs1231 lecture"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  2. [T][✘] no lecture"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "  3. [T][✘] skip lecture aaa"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "-": 14,
      "daniellimws": 108
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DATA_DIR \u003d \"data\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String SAVE_PATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Duke(String dataDir, String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        storage \u003d new Storage(dataDir, filePath, taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        parser \u003d new Parser(ui, taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Scanner stdin \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printPrompt();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                parser.handleCommand(stdin.nextLine().trim());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                if (taskList.isModified()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                    storage.saveData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                    taskList.ackModified();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                ui.showUnknownCommandError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } while (!parser.isExit());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        stdin.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Duke duke \u003d new Duke(DATA_DIR, SAVE_PATH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 51,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.UnknownCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Utility to parse the user input and handle it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String AT_ARGUMENT \u003d \"/at \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String BY_ARGUMENT \u003d \"/by \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String HELP_COMMAND \u003d \"help\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a Parser object with a reference to a Ui and TaskList object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Parser(Ui ui, TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets whether the user wanted to exit the program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Whether the user wanted to exit the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Printing out the list of tasks."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleList() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"There are currently no tasks in your list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printResponse(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printTasks(taskList);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Index of the task (starting from 1) to be marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleMarkDone(String args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            index \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printDoneCmdHelp();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Task task \u003d taskList.getTask(index - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            task.setAsDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            taskList.setAsModified();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"Ok! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(String.format(\"  %s\", task));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.printf(\"Error: Task %d does not exist\", index);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Index of the task (starting from 1) to be deleted."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleDelete(String args) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            index \u003d Integer.parseInt(args);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printDeleteCmdHelp();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Task task \u003d taskList.removeTask(index - 1);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"Ok! I\u0027ve deleted this task:\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(String.format(\"  %s\", task));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.printf(\"Error: Task %d does not exist\", index);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Searches for tasks with the given string."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Keyword to search for."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleFind(String args) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String filter \u003d args;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (filter.isEmpty()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printFindCmdHelp();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ArrayList filteredList \u003d (ArrayList) taskList.getTasks().stream().filter((task -\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return task.getDescription().contains(filter);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        })).collect(Collectors.toList());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (filteredList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"Could not find any tasks with this keyword.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printResponse(String.format(\"Here are the tasks that contains the text \\\"%s\\\"\", filter));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printTasks(filteredList);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a new Todo object and adds it to the list."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Description of the task."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleAddTodo(String args) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Todo todo \u003d new Todo(args);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(todo);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException e) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printTodoCmdHelp();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a new Deadline object and adds it to the list."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Description and deadline of the task."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleAddDeadline(String args) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int dateIndex \u003d args.indexOf(BY_ARGUMENT);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description, date;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            description \u003d args.substring(0, dateIndex - 1);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            date \u003d args.substring(dateIndex + BY_ARGUMENT.length());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printDeadlineCmdHelp();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(deadline);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException | ParseException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printDeadlineCmdHelp();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a new Event object and adds it to the list."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param args Description and date of the event."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void handleAddEvent(String args) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int dateIndex \u003d args.indexOf(AT_ARGUMENT);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description, date;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            description \u003d args.substring(0, dateIndex - 1);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            date \u003d args.substring(dateIndex + AT_ARGUMENT.length());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printEventCmdHelp();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            Event event \u003d new Event(description, date);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            addTask(event);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (EmptyDescriptionException | ParseException e) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printEventCmdHelp();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Helper method to add a task to the list."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printResponse(String.format(\"Added: %s\", task));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String taskWord \u003d \"task\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (taskList.size() !\u003d 1) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            taskWord +\u003d \"s\";"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ui.printResponse(String.format(\"You now have %d %s in your list.\", taskList.size(), taskWord));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Parses a command string and delegates to the respective methods."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param cmd Name and arguments of a command."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void handleCommand(String cmd) throws UnknownCommandException {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (cmd.equals(BYE_COMMAND)) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printResponse(\"Bye. See you next time.\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String cmdName \u003d cmd;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String cmdArgs \u003d \"\";"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int spaceIndex \u003d cmd.indexOf(\" \");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (spaceIndex !\u003d -1) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            cmdName \u003d cmd.substring(0, spaceIndex).trim();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            cmdArgs \u003d cmd.substring(spaceIndex + 1).trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        cmdName \u003d cmdName.toLowerCase();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (cmdName.equals(HELP_COMMAND)) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            ui.printHelp();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleList();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleMarkDone(cmdArgs);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddTodo(cmdArgs);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddDeadline(cmdArgs);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleAddEvent(cmdArgs);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleDelete(cmdArgs);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else if (cmdName.equals(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            handleFind(cmdArgs);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 266
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Utility to interact with the filesystem to load and store data for persistent storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private String dataDir;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private String saveFilePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a Storage object with the path to save the data. It also contains a reference to the TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * that stores all the tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param dataDir Directory containing the save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param saveFilePath Path to store the save file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskList List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Storage(String dataDir, String saveFilePath, TaskList taskList) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.dataDir \u003d dataDir;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        ensureDataDir();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.saveFilePath \u003d Paths.get(dataDir, saveFilePath).toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        loadData();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a directory at dataDir if it does not exist in the filesystem."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private void ensureDataDir() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        File directory \u003d new File(dataDir);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Loads the tasks from the indicated file path into the task list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void loadData() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        File saveFile \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Scanner scanner \u003d null;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        int line \u003d 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            scanner \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                taskList.addTask(parseTaskLine(scanner.nextLine()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                line++;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.println(\"Either this is your first time using, or your previously saved data is losted\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.println(String.format(\"Save data is corrupted at line %d.\", line));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.exit(1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Parses a line that contains information about a Task object."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskLine Serialized task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Task represented by the line."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Task parseTaskLine(String taskLine) throws ParseException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String[] tokens \u003d taskLine.split(\",\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String type \u003d tokens[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String description \u003d tokens[2].replace(\"\u003ccm\u003e\",\",\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return new Todo(description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String additionalInfo \u003d tokens[3];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return new Deadline(description, additionalInfo);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            return new Event(description, additionalInfo);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Saves the task list into the save file."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        FileWriter fileWriter;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            fileWriter \u003d new FileWriter(saveFilePath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            for (Task task : taskList.getTasks()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                fileWriter.write(task.serialized() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            System.out.println(\"There is something wrong with saving the tasks data.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 112
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Utility to store the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private boolean isModified;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates an empty TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        isModified \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets whether the list has been recently modified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Whether the list has been recently modified."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public boolean isModified() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return isModified;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Indicate that the list has been recently modified."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void setAsModified() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        isModified \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Acknowledges that the list has been recently modified, and then mark it as"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * not modified."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void ackModified() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        isModified \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets the ArrayList storing the tasks."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return The ArrayList storing the tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets whether the list has been recently modified."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Whether the list has been recently modified."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        setAsModified();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Removes a task from the list based on the given index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param index Index of the task that is to be removed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Task that was removed from the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        setAsModified();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets the number of tasks in the list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Number of tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Gets a task from the list at the given index."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param index Index of the task to be returned."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @return Task at the given index."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 89
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " * Utility class for interacting with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String PROMPT \u003d \"\u003e \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final String PRE_RESPONSE_WHITESPACE \u003d \"  \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Creates a Ui object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Shows the welcome message at startup."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                \"\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"                 _______\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"               _/       \\\\_\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"              / |       | \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"             /  |__   __|  \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |__/((o| |o))\\\\__|\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |      | |      |\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            |\\\\     |_|     /|\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"            | \\\\           / |\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"             \\\\| /  ___  \\\\ |/\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"              \\\\ | / _ \\\\ | /\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"               \\\\_________/\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"                _|_____|_\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"           ____|_________|____\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                        + \"          /                   \\\\\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.println(\"Hello. What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the prompt character."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printPrompt() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.print(PROMPT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Formats a string then prints it out to the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param response The response to be printed to the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printResponse(String response) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        System.out.printf(\"%s%s\\n\", PRE_RESPONSE_WHITESPACE, response);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints out the tasks in a list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskList The task list to be printed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            printResponse(String.format(\"%d. %s\", i + 1, taskList.get(i)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints out the tasks in a list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * @param taskList The task list to be printed."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"delete\" command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printDeleteCmdHelp() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: delete [task index]\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: delete 1\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"done\" command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printDoneCmdHelp() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: done [task index]\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: done 1\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"find\" command."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printFindCmdHelp() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: find [filter]\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: find lecture\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"todo\" command."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printTodoCmdHelp() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: todo [description]\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: todo borrow book\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"deadline\" command."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printDeadlineCmdHelp() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: deadline [description] /by [when (format: dd/mm/yy hhmm)]\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: deadline review pr /by 27/09/20 1000\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints the instructions to use the \"event\" command."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printEventCmdHelp() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Usage: event [description] /at [when (format: dd/mm/yy hhmm)]\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Example: event presentation /at 27/09/20 1000\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Tells the user that the given command is not recognized, and then prints out"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * the help message."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void showUnknownCommandError() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Idk what\u0027s that boss.\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printHelp();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     * Prints out the list of available commands and the instructions to use each command."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void printHelp() {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Available commands are: help, list, todo, deadline, event, done, delete, find, bye\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Todo:\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printTodoCmdHelp();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Deadline:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printDeadlineCmdHelp();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Event:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printEventCmdHelp();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Done:\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printDoneCmdHelp();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Delete:\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printDeleteCmdHelp();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printResponse(\"Find:\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        printFindCmdHelp();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 168
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d -8130910326024902835L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d 1452597049358726640L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 4
    }
  },
  {
    "path": "src/main/java/duke/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private static final long serialVersionUID \u003d -4014045004293916640L;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 6
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private DateFormat df;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Deadline(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        df \u003d new SimpleDateFormat(\"dd/MM/yy HHmm\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d df.parse(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected String getSerializeType() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String serialized() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"%s,%s\", super.serialized(), df.format(date));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private Date date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    private DateFormat df;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Event(String description, String date) throws ParseException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        df \u003d new SimpleDateFormat(\"dd/MM/yy HHmm\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.date \u003d df.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected String getSerializeType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String serialized() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"%s,%s\", super.serialized(), df.format(date));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Task(String description) throws EmptyDescriptionException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "            throw new EmptyDescriptionException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected abstract String getSerializeType();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String serialized() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        String isDoneString \u003d isDone ? \"Y\" : \"N\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"%s,%s,%s\", getSerializeType(), isDoneString,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "                description.replace(\",\", \"\u003ccm\u003e\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    protected String getSerializeType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 17
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "T,Y,borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "E,Y,lecture,29/09/20 0800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "D,Y,tutorial,30/09/20 1600"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "morning"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "help"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "delete computer"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event lecture /at 29/9/20 0800"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline tutorial /by 30/9/20 1600"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "event nodate"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "deadline nodeadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "find lecture"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "find skip"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "daniellimws": 29
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/* ../src/main/java/duke/exception/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daniellimws"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "daniellimws": 2
    }
  }
]
