[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "bqxy": 4
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return (\"[D]\" + super.toString() + \"(by:\" + by + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        Ui.showWelcomeScreen();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        ArrayList\u003cString\u003e tasksText \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        String filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            Storage.readFileContents(filePath, taskList ,tasksText);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            TaskList.listCommand(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String line \u003d in.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String command \u003d Parser.parseCommand(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            isExit \u003d TaskList.executeCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        Ui.showEndScreen();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "bqxy": 32
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected String dayAndTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public Event(String description, String dayAndTime) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.dayAndTime \u003d dayAndTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return (\"[E]\" + super.toString() + \"(at:\" + dayAndTime + \")\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 15
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Parser extends Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static String parseCommand(String line) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (line.equals(\"bye\") || line.equals(\"list\")) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return line;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (line.contains(\"done\") || line.contains(\"deadline\") || line.contains(\"event\") ||"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                line.contains((\"todo\")) || line.contains((\"delete\"))) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return line;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return showWrongCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static String showWrongCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "       return (\"I\u0027m sorry, but I don\u0027t know what that means :-C\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 21
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Storage extends Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void readFileContents(String filePath, ArrayList\u003cTask\u003e storeTasks,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                         ArrayList\u003cString\u003e tasksText) throws FileNotFoundException,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            createFile(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"IO Error\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        File folder \u003d new File(\"./data/\"); // folder directory for duke.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        // Check if folder exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (folder.isDirectory() \u003d\u003d false) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"Folder not found\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        // Read tasks into Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            tasksText.add(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Read Todo tasks into Duke"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                storeTasks.add(new ToDo(words[2]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    storeTasks.get(storeTasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Read Deadline tasks into Duke"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                storeTasks.add(new Deadline(words[2], words[3]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    storeTasks.get(storeTasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Read Event tasks into Duke"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                storeTasks.add(new Event(words[2], words[3]));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                if (words[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    storeTasks.get(storeTasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        fw.write(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void updateFile(ArrayList\u003cString\u003e tasksText, String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(filePath); // reset .txt file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksText.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                writeToFile(filePath, tasksText.get(i));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"IO Error\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void createFile(String filePath) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        File storageFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (storageFile.exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (!storageFile.getParentFile().exists()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            storageFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        storageFile.createNewFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(storageFile.getAbsolutePath());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 82
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return (\"[\" + getStatusIcon() + \"]\" + \" \" + description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 28
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class TaskList extends Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static boolean executeCommand(String command, ArrayList\u003cTask\u003e taskList, String filePath,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                            ArrayList\u003cString\u003e tasksText) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                TaskList.doneCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                TaskList.deadlineCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                TaskList.todoCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                TaskList.eventCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        if (command.contains(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                TaskList.deleteCommand(command, taskList, filePath, tasksText);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void listCommand(ArrayList\u003cTask\u003e storeTasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(\"  Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        for (int i \u003d 0; i \u003c storeTasks.size(); i++) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  \" + (i + 1) + \".\" + storeTasks.get(i));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void doneCommand(String line, ArrayList\u003cTask\u003e storeTasks, String filePath,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                    ArrayList\u003cString\u003e tasksText) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d storeTasks.size()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                storeTasks.get(taskNum - 1).setDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"   \" + taskNum + \".\" + storeTasks.get(taskNum - 1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Update text file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String textLine \u003d tasksText.get(taskNum - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] text \u003d textLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (text[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                String newText \u003d \"T\" + \" | \" + \"1\" + \" | \" + storeTasks.get(taskNum - 1).description;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                tasksText.set(taskNum - 1, newText);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (text[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                String newText \u003d \"D\" + \" | \" + \"1\" + \" | \" + text[2] + \" | \" + text[3];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                tasksText.set(taskNum - 1, newText);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (text[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                String newText \u003d \"E\" + \" | \" + \"1\" + \" | \" + text[2] + \" | \" + text[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                tasksText.set(taskNum - 1, newText);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                Storage.updateFile(tasksText, filePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"Folder not found\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"Please select the appropriate task number on the list\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void deadlineCommand(String line, ArrayList\u003cTask\u003e storeTasks, String filePath,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                        ArrayList\u003cString\u003e tasksText) throws DukeException{"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\"/by\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            words[0] \u003d words[0].replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[0].isBlank()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"For deadline command, the format is\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                        \" \u0027deadline \u003cDETAILS\u003e /by \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (!line.contains(\"/by\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"For deadline command, the format is\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                        \" \u0027deadline \u003cDETAILS\u003e /by \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            storeTasks.add(new Deadline(words[0], words[1]));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"    \" + storeTasks.get(storeTasks.size() - 1));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Now you have \" + storeTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Structuring text to write to file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String text \u003d \"D\" + \" | \" + \"0\" + \" | \" + words[0] + \"|\" + words[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            tasksText.add(text);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                Storage.updateFile(tasksText, filePath);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"Folder not found\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"For deadline command, the format is\" +"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    \" \u0027deadline \u003cDETAILS\u003e /by \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void todoCommand(String line, ArrayList\u003cTask\u003e storeTasks, String filePath,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                    ArrayList\u003cString\u003e tasksText) throws DukeException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\"todo \");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[1].isBlank()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"For todo command, the format is\" + \" \u0027todo \u003cDETAILS\u003e\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            storeTasks.add(new ToDo(words[1]));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"    \" + storeTasks.get(storeTasks.size() - 1));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Now you have \" + storeTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Structuring text to write to file"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String text \u003d \"T\" + \" | \" + \"0\" + \" | \" + storeTasks.get(storeTasks.size() - 1).description;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            tasksText.add(text);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                Storage.updateFile(tasksText, filePath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"Folder not found\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"For todo command, the format is\" + \" \u0027todo \u003cDETAILS\u003e\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void eventCommand(String line, ArrayList\u003cTask\u003e storeTasks, String filePath,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                     ArrayList\u003cString\u003e tasksText) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\"/at\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            words[0] \u003d words[0].replace(\"event \", \"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (words[0].isBlank()) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"For event command, the format is\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                        \" \u0027event \u003cDETAILS\u003e /at \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (!line.contains(\"/at\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"For event command, the format is\" +"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                        \" \u0027event \u003cDETAILS\u003e /at \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            storeTasks.add(new Event(words[0], words[1]));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"    \" + storeTasks.get(storeTasks.size() - 1));"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\"  Now you have \" + storeTasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Structuring text to write to file"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String text \u003d \"E\" + \" | \" + \"0\" + \" | \" + words[0] + \"|\" + words[1];"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            tasksText.add(text);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                Storage.updateFile(tasksText, filePath);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"Folder not found\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"For event command, the format is\" +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                    \" \u0027event \u003cDETAILS\u003e /at \u003cDATE_AND_OR_TIME\u003e\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void deleteCommand(String line, ArrayList\u003cTask\u003e storeTasks, String filePath,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                                      ArrayList\u003cString\u003e tasksText) throws DukeException {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            String[] words \u003d line.split(\" \");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            int taskNum \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            if (taskNum \u003e\u003d 1 \u0026\u0026 taskNum \u003c\u003d storeTasks.size()) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"  Nice! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"   \"  + storeTasks.get(taskNum - 1));"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\" ____________________________________________________________\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                storeTasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                throw new DukeException(\"No such task on the list\");"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            // Update text file"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            tasksText.remove(taskNum - 1);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                Storage.updateFile(tasksText, filePath);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "bqxy"
        },
        "content": "                System.out.println(\"Folder not found\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            throw new DukeException(\"No such task on the list\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 230
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 12
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "public class Ui extends Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    static final String WELCOME_SCREEN \u003d \" ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \"  Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \"  What can I do for you?\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \"\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \" ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    static final String END_SCREEN \u003d \" ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \"  Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "            + \" ____________________________________________________________\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void showWelcomeScreen() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(WELCOME_SCREEN);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    protected static void showEndScreen() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "        System.out.println(END_SCREEN);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "bqxy": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "bqxy"
        },
        "content": "todo exercise"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline sign up class /by June 7th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event conference /at June 8th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "bqxy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event /at 1pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event /by 1pm"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "bqxy"
        },
        "content": "event presentation /by 1pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline /by 1pm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline /at 1pm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "bqxy"
        },
        "content": "deadline homework /at 1pm"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "bqxy"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "bqxy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "bqxy"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "bqxy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "bqxy": 30
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "bqxy"
        },
        "content": "javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "bqxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "bqxy"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin  duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "bqxy": 3
    }
  }
]
