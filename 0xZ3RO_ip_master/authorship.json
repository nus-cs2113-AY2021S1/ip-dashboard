[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### Track tasks "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "This program helps you to keep track of upcoming events, deadlines or any tasks to complete."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "At any point of time, you can mark a task as done, or delete it from the list. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "You can also choose to search for tasks from the list with a keyword that you input in the command line."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### Persistent storage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "The program stores the list of tasks locally on your computer in a text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `todo` - Adds a general task to the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Creates a task with the given description and stores it in the list of existing tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e todo borrow book"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Added: [T][✘] borrow book"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  You now have 1 task in your list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `event` - Adds an upcoming event with the date to the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Creates an event with the given description and date, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`event [description] /at [when (format: yyyy-mm-dd hhmm)]`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e event project meeting /at 29/09/20 1000"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Added: [E][✘] project meeting (at: Oct 15 2019 1000)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  You now have 2 tasks in your list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `deadline` - Adds a task with a deadline to the list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Creates a task with the given description and deadline, then stores it in the list of existing tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`deadline [description] /by [when (format: yyyy-mm-dd hhmm)]`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e deadline return book /by 2019-10-15 1000"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Added: [D][✘] return book (at: Oct 15 2019 1000)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  You now have 3 tasks in your list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Marks a task in the list as done based on the given index."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e done 2"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Ok! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    [E][✓] project meeting (at: Oct 15 2019 1000)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Deletes a task from the list based on the given index."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e delete 1"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Ok! I\u0027ve deleted this task:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    [T][✘] borrow book"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "### `find` - Searches for "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Searches for tasks that contains the given text."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "`find \u003cfilter\u003e`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "\u003e find book"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  Here are the tasks that contains the text \"beef\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "  1. [D][✘] return book (at: Oct 15 2019 1000)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 106,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Handles the different commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Ui.stdout.println(Ui.hLine + \" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\" \" + (i + 1) + \".\" + Duke.tasks.get(i));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Ui.stdout.println(Ui.hLine);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleDone(String echo) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 6) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please specify the task to mark as done.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            int selected \u003d Integer.parseInt(echo.substring(5)) - 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Duke.tasks.get(selected).markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\"   \" + Duke.tasks.get(selected) + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.updateDB();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please specify a valid task to mark as done\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleTodo(String echo) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 6) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Duke.tasks.add(new ToDo(echo.substring(5)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\"   \" + Duke.tasks.get(Duke.tasks.size() - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\" Now you have \" + Duke.tasks.size() + \" tasks in the list.\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.updateDB();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleDL(String echo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 10) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            String[] deadL \u003d echo.substring(9).split(\" /by \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Duke.tasks.add(new Deadline(deadL[0], deadL[1]));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\"   \" + Duke.tasks.get(Duke.tasks.size() - 1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\" Now you have \" + Duke.tasks.size() + \" tasks in the list.\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.updateDB();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please use /by to specify date/time.\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please use the correct date format.\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleEvent(String echo) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 7) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            String[] event \u003d echo.substring(6).split(\" /at \", 2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Duke.tasks.add(new Event(event[0], event[1]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\"   \" + Duke.tasks.get(Duke.tasks.size() - 1));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\" Now you have \" + Duke.tasks.size() + \" tasks in the list.\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.updateDB();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please use /at to specify start/end time.\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please use the correct date format.\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleUnknown() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static void handleDelete(String echo) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 8) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please specify the task to delete.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            int selected \u003d Integer.parseInt(echo.substring(7)) - 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Task removed \u003d Duke.tasks.get(selected);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Duke.tasks.remove(selected);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Noted! I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\"   \" + removed);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(\" Now you have \" + Duke.tasks.size() + \" tasks in the list.\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.updateDB();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" ☹ OOPS!!! Please specify a valid task to delete\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void handleFind(String echo) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (echo.length() \u003c 6) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Please specify the task to find.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            String keyword \u003d echo.substring(5);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + \" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if (Duke.tasks.get(i).getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    Ui.stdout.println(Duke.tasks.get(i));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 146
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Main class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Program starts from here"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Ui.greet();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Storage.loadDB();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Parser.mainTask();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Ui.stdout.println(Ui.hLine + e.getMessage() + \"\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 26,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Parsers all commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Checks if commands are valid"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static void mainTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String echo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        while (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            echo \u003d Duke.sc.nextLine().trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            command \u003d echo.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleDone(echo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleTodo(echo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleDL(echo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleEvent(echo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleDelete(echo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleFind(echo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Command.handleUnknown();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Ui.stdout.println(Ui.hLine + \" Bye! Hope to see you again soon!\\n\" + Ui.hLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 35
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Handles the IO"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Manages the database"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static java.nio.file.Path filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static void loadDB() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        filePath \u003d Paths.get(home, \"Desktop\", \"DB.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        boolean isExistingDirectory \u003d Files.exists(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        if (isExistingDirectory) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            File f \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            Scanner scan;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                scan \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Unable to find database.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String taskToProcess \u003d scan.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String[] subSec \u003d taskToProcess.split(\" \\\\| \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                switch (subSec[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    Duke.tasks.add(new ToDo(subSec[2]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    Duke.tasks.add(new Event(subSec[2], subSec[3]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    Duke.tasks.add(new Deadline(subSec[2], subSec[3]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if (subSec[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    Duke.tasks.get(Duke.tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            File yourFile \u003d new File(String.valueOf(filePath));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                boolean isSuccessful \u003d yourFile.createNewFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if (!isSuccessful) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                throw new DukeException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static void updateDB() throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            FileWriter fw \u003d new FileWriter(String.valueOf(filePath));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                Task task \u003d Duke.tasks.get(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d \"T | \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d (task.getDone() ? \"1\" : \"0\") + \" | \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d task.getDescription();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d \"E | \";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d (task.getDone() ? \"1\" : \"0\") + \" | \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d task.getDescription() + \" | \";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d ((Event) task).getTiming();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d \"D | \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d (task.getDone() ? \"1\" : \"0\") + \" | \";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d task.getDescription() + \" | \";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    toWrite +\u003d ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                fw.write(toWrite + System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            throw new DukeException(\" ☹ OOPS!!! Unable to create database.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 96
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Arraylist to store all the different tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Task get(int selected) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return tasks.get(selected);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public void remove(int selected) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        tasks.remove(selected);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Handles user interaction"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static final PrintWriter stdout \u003d new PrintWriter("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            new OutputStreamWriter(System.out, StandardCharsets.UTF_8), true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static final String hLine \u003d \"──────────────────────────── ⋆⋅☆⋅⋆ ────────────────────────────\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    static void greet() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        stdout.println(hLine + logo + \" Hello! I\u0027m Duke\\n What can I do for you?\\n\" + hLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Handles custom exceptions"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Inherit from Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        date \u003d LocalDate.parse(dueDate.split(\" \")[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String getDueDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                + dueDate.split(\" \")[1] + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Inherit from Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String timing;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Event(String description, String timing) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        date \u003d LocalDate.parse(timing.split(\" \")[0]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String getTiming() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return timing;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                + timing.split(\" \")[1] + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 29
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Task class to inherit from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 37
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " * Inherit from Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadlines.java ..\\src\\main\\java\\Events.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDos.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 1,
      "-": 20
    }
  }
]
