[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static final String hLine \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static final int MAX \u003d 100;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    private static Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(hLine + logo + \" Hello! I\u0027m Duke\\n What can I do for you?\\n\" + hLine);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void mainTask() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String echo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        String command \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        Task[] tasks \u003d new Task[MAX];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        int listSize \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        while (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            echo \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            command \u003d echo.split(\"\\\\s+\")[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            if (command.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(hLine + \" Here are the tasks in your tasks:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                for (int i \u003d 0; i \u003c listSize; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\" \" + (i + 1) + \".\" + tasks[i]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                System.out.println(hLine);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    if (echo.length() \u003c 6) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                        throw new DukeException(\" ☹ OOPS!!! Please specify the task to mark as done.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    int selected \u003d Integer.parseInt(echo.substring(5)) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    tasks[selected].markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\"   \" + tasks[selected] + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (NullPointerException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" ☹ OOPS!!! Please specify a valid task to mark as done\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                            + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    if (echo.length() \u003c 6) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                        throw new DukeException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    tasks[listSize] \u003d new ToDo(echo.substring(5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\"   \" + tasks[listSize]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    listSize++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\" Now you have \" + listSize + \" tasks in the list.\\n\" + hLine);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    if (echo.length() \u003c 10) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                        throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    String[] deadL \u003d echo.substring(9).split(\" /by \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    tasks[listSize] \u003d new Deadline(deadL[0], deadL[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\"   \" + tasks[listSize]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    listSize++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\" Now you have \" + listSize + \" tasks in the list.\\n\" + hLine);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" ☹ OOPS!!! Please use /by to specify date/time.\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                            + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (command.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    if (echo.length() \u003c 7) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                        throw new DukeException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    String[] event \u003d echo.substring(6).split(\" /at \", 2);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    tasks[listSize] \u003d new Event(event[0], event[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\"   \" + tasks[listSize]);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    listSize++;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(\" Now you have \" + listSize + \" tasks in the list.\\n\" + hLine);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + \" ☹ OOPS!!! Please use /at to specify start/end time.\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                            + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            } else if (!command.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                    System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        System.out.println(hLine + \" Bye! Hope to see you again soon!\\n\" + hLine);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            mainTask();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "            System.out.println(hLine + e.getMessage() + \"\\n\" + hLine);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 112,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 7
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 24
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "0xZ3RO"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java ..\\src\\main\\java\\Deadlines.java ..\\src\\main\\java\\Events.java ..\\src\\main\\java\\Task.java ..\\src\\main\\java\\ToDos.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "0xZ3RO": 1,
      "-": 20
    }
  }
]
