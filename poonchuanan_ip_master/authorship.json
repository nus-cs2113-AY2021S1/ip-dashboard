[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "# Duke User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "duke.Duke is an application that keeps track of your completion of daily tasks such as things to do, deadlines and events. "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- [Quick start](#quick-start) "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Adding a Todo task : ``` todo ```](#adding-a-todo-task-todo)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Adding a Deadline task : ``` deadline ```](#adding-a-deadline-task-deadline)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Adding an Event task : ``` event ```](#adding-an-event-task-event)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Listing of all tasks: ``` list ```](#listing-of-all-tasks-list)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Marking task as done ``` done ```](#marking-task-as-done-done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Deleting a task: ``` delete ```](#deleting-a-task-delete)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Finding a task: ``` find ```](#finding-a-task-find)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Saving task list data](#saving-tasklist-data)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    - [Exiting the application: ``` bye ```](#exiting-the-application-bye)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "### Quick Start"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "1. Download Java 11 on your computer."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "2. Download the latest version of Duke.jar from github."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "3. Save the file into a folder to run the program from."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "4. Use the command line navigate to the directory of where Duke.jar is in."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "5. Run the command java -jar Duke.jar."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "6. The application will then start running."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Adding a Todo task: ``` todo ``` "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command adds a todo task to the tasklist."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```todo DESCRIPTION_OF_TASK```"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```todo read book```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[T][✘]  read book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Now you have 1 task(s) in the list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Adding a Deadline task: ``` deadline ```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command adds a deadline task to the tasklist."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```deadline DESCRIPTION_OF_TASK /by DEADLINE```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```deadline submit homework /by 5pm```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[D][✘]  submit homework (by: 5pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Adding an Event task: ``` event ```"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command adds an event to the tasklist."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```event DESCRIPTION_OF_TASK /at EVENT_DATE```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```event play basketball /at wed night```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[E][✘]  play basketball (at: wed night)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Listing of all tasks: ``` list ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command lists all the tasks that are currently in the task list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```list```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```list```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "1. [T][✘]  read book"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "2. [D][✘]  submit homework (by: 5pm)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "3. [E][✘]  play basketball (at: wed night)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Marking task as done ``` done ```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command marks a task in the task list as done by specifying the task number."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```done TASK_NUMBER```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```done 2```"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[D][✓]  submit homework (by: 5pm)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Deleting a task: ``` delete ```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command deletes a task from the task list by specifying the task number."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format:```delete TASK_NUMBER```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```delete 1```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Noted. I\u0027ve removed this task: [T][✘]  read book"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Now you have 2 task(s) in the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Finding a task: ``` find ```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command finds all tasks which contains the specific keyword."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```find KEYWORD```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```find homework```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Here are the matching tasks in your list: "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "2. [D][✘]  submit homework (by: 5pm)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Saving data "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Duke saves the data entered into a text file every time the tasklist is updated. It will also load the saved data every time the application is launched."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "The application stores the data in the following format in a .txt file:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[T][✘]  read book"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[D][✘]  submit homework (by: 5pm)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "[E][✘]  play basketball (at: wed night)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Exiting the application: ``` bye ```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "This command stops the application."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Format: ```bye```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example of usage: ```bye```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "### Tasks legend"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- T: Represents a Todo task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- D: Represents a Deadline task "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- E: Represents an Event task"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "### Task completion legend"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- ✓: Task is done"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "- ✘: Task is not completed"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|Command|Syntax and Examples|"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|-------|-------------------|"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|todo| `todo DESCRIPTION_OF_TASK` \u003cbr\u003e Example: `todo read book`|"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|deadline|`deadline DESCRIPTION_OF_TASK /by TASK_DATE` \u003cbr\u003e Example: `deadline submit homework /by tmr`|"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|event|`event DESCRIPTION_OF_TASK /at TASK_DATE` \u003cbr\u003e Example: `event play basketball /at wed night`|"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|list|`list`|"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|done|`done TASK_NUMBER` \u003cbr\u003e Example: `done 1`|"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|delete|`delete TASK_NUMBER` \u003cbr\u003e Example: `delete 1`|"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|find|`find KEYWORD` \u003cbr\u003e Example: `find read`|"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "|bye|`bye`|"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "poonchuanan": 147
    }
  },
  {
    "path": "src/main/java/duke/Command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Bye command used in user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD\u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public ByeCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the bye command by exiting the program with error 0."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for bye command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBye();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Command class used in user input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Command(String[] arguments) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            execute(arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Runs different functionalities of Duke based on the user\u0027s command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        checkSize(arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Checks the number of arguments for the different commands."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws DukeException if number of arguments is not the same as predetermined number."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void checkSize(String[] arguments) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (arguments.length \u003c getNumberOfArguments()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new DukeException(DukeException.LESS_THAN_SIZE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } else if (arguments.length \u003e getNumberOfArguments()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new DukeException(DukeException.MORE_THAN_SIZE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Gets the number of arguments for a specific command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public abstract int getNumberOfArguments();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 45
    }
  },
  {
    "path": "src/main/java/duke/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the deadline command used in the user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public DeadlineCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the deadline command by adding Deadlines to the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for deadline command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Deadline.addDeadline(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the delete command used in the user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public DeleteCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the deadline command by deleting specific task in the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for delete command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().deleteTask(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Done command in the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public DoneCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Marks the specified task as completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for done command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().markTaskAsDone(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printNumberFormatError(arguments[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 42
    }
  },
  {
    "path": "src/main/java/duke/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the event command used in the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public EventCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the event command by adding the event task to the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for event command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Event.addEvent(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the find command used in the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public FindCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the find command by showing the list of matching tasks in program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for find command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().findTask(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 38
    }
  },
  {
    "path": "src/main/java/duke/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the list command used in the user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public ListCommand(String[] arguments) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the list command by showing the list of tasks in program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for list command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().displayList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 37
    }
  },
  {
    "path": "src/main/java/duke/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the todo command used in the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final int ARGUMENTS_NUM \u003d 2;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public TodoCommand(String[] arguments) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(arguments);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Executes the todo command by adding the todo task to the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param arguments parsed arguments for todo command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void execute(String[] arguments) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            super.execute(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Todo.addTodo(arguments[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getNumberOfArguments() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ARGUMENTS_NUM;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 39
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the main program of Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Creates instances of classes needed for the program to run."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Duke() throws IOException, DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Runs an instance of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints welcome message and runs the program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            storage.loadData();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (FileNotFoundException | DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            storage.createFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String userInput \u003d Duke.getUi().readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Parser.parseInput(userInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static Storage getStorage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static Ui getUi() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static TaskList getTaskList() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "poonchuanan": 59
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Handles error exception in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String EMPTY_LIST \u003d \"empty list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String ILLEGAL_NUMBER \u003d \"illegal number\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String LESS_THAN_SIZE \u003d \"arguments less than expected\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String MORE_THAN_SIZE \u003d \"arguments more than expected\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final String INVALID_DESCRIPTION \u003d \"invalid description\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints out corresponding error messages."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param errorMessage The error found"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        switch(errorMessage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case ILLEGAL_NUMBER:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Please input a valid number\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case EMPTY_LIST:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Oh no the list is empty!\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case LESS_THAN_SIZE:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"☹ OOPS!!! The description cannot be empty.\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case MORE_THAN_SIZE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Oh no the number of arguments is more than expected!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case INVALID_DESCRIPTION:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Oh no the description should not be blank!\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Unknown error detected!\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 39
    }
  },
  {
    "path": "src/main/java/duke/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.DeadlineCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.EventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Command.TodoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Parses the user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Decides which command to execute based on user\u0027s input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param userInput user input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void parseInput(String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String[] arguments \u003d parseArgument(userInput, \" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        switch (arguments[0].toLowerCase()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new TodoCommand(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new DeadlineCommand(arguments);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new EventCommand(arguments);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new DoneCommand(arguments);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new ListCommand(arguments);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new FindCommand(arguments);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new DeleteCommand(arguments);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        case ByeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            new ByeCommand(arguments);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Splits the arguments in based on the divider and limit."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument argument to be parsed"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param divider string used to parse the arguments"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param limit number of times to parse the arguments"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return list of parsed arguments"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String[] parseArgument (String argument, String divider, int limit) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String[] arguments \u003d argument.split(divider, limit);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return arguments;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 69
    }
  },
  {
    "path": "src/main/java/duke/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Handles data storage of task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String itemsPath \u003d projectRoot + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Creates new file \"data.txt\" in data folder"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException On input error."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        // create a folder in your current work space"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        folder.mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        // put the file inside the folder"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File file \u003d new File(folder, \"duke.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        file.createNewFile(); // create the file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Loads task list from duke.txt everytime program is run"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws FileNotFoundException If file does not exist in the first place."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void loadData() throws IOException, DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        // create a File for the given file path"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File f \u003d new File(itemsPath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String eventType \u003d line.substring(1, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String symbol \u003d line.substring(4, 5);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String description \u003d line.substring(7);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            switch (eventType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Todo t \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.getTaskList().addTask(t,false);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                int indexDividerEvent \u003d description.indexOf(\"(at:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String eventTime \u003d description.substring(indexDividerEvent+4).replace(\")\",\"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                description \u003d description.substring(0,indexDividerEvent);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Event e \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.getTaskList().addTask(e,false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                int indexDividerDeadline \u003d description.indexOf(\"(by:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String deadline \u003d description.substring(indexDividerDeadline+4).replace(\")\",\"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                description \u003d description.substring(0,indexDividerDeadline);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Deadline d \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.getTaskList().addTask(d,false);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (symbol.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.getTaskList().getTask(Duke.getTaskList().getSize() - 1).markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Saves task list to duke.txt everytime it is modified"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void saveData() throws IOException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for (int i \u003d 0; i \u003c Duke.getTaskList().getSize(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Task item \u003d Duke.getTaskList().getTask(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if(item \u003d\u003d null){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            textToAdd +\u003d item.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        writeToFile(itemsPath, textToAdd);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Writes task list contents to duke.txt"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param filePath Absolute path of the file to be written"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param textToAdd Contents to be written"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException On input error."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 105
    }
  },
  {
    "path": "src/main/java/duke/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of Deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final String TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of deadline in the instance"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param by deadline due"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws DukeException if wrong number of arguments"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Deadline(String description, String by) throws DukeException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints the full details of deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  deadline type, completion status and description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Adds deadline task to the Tasklist by parsing the arguments."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument description of deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void addDeadline(String argument) throws IOException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String[] arguments \u003d Parser.parseArgument(argument, \" /by \", 0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Task d \u003d new Deadline(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().addTask(d,true);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"The \\\"/by\\\" argument is missing.\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 59
    }
  },
  {
    "path": "src/main/java/duke/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final String TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of event in the instance."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of deadline task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param at date and time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IndexOutOfBoundsException if blank arguments is given"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints the full details of event task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  event type, completion status and description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Add event task to the Tasklist by parsing the arguments."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument description of event"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void addEvent(String argument) throws IOException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String[] arguments \u003d Parser.parseArgument(argument, \" /at \", 0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Task e \u003d new Event(arguments[0], arguments[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getTaskList().addTask(e,true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"The \\\"/at\\\" argument is missing.\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 61
    }
  },
  {
    "path": "src/main/java/duke/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of task in the instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Task(String description) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (description.isBlank()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new DukeException(DukeException.INVALID_DESCRIPTION);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Gets the status of task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Changes the status of task to done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * gets description of task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * returns details of task in a certain format."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return details of task"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String output \u003d \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Gets the appropriate task type of each task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return the string used to represent the task type"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public abstract String getTaskType();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 67
    }
  },
  {
    "path": "src/main/java/duke/Task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the list of tasks stored in the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private ArrayList\u003cTask\u003e Tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Creates new instance of array list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * mark the specific task in list as completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument index number of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws DukeException if number is invalid"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void markTaskAsDone(String argument) throws DukeException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if ((taskNumber \u003c\u003d 0) | (taskNumber \u003e this.getSize())) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new DukeException(\"illegal number\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Task t \u003d this.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Duke.getStorage().saveData();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Duke.getUi().printBorder(\"Nice! I\u0027ve marked this task as done:\\n\" + t.toString() + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Shows the list of tasks in program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws DukeException if the list is empty"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void displayList() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (Tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            throw new DukeException(\"empty list\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String itemList \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for (int i \u003d 0 ; i \u003c this.getSize() ; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            itemList +\u003d (i + 1) + \". \"  +  Tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Duke.getUi().printBorder(\"Here are the tasks in your list:\\n\" + itemList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param item task item to be added"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param isToBeSaved boolean to check whether to save to txt"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void addTask(Task item, boolean isToBeSaved) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Tasks.add(item);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if(isToBeSaved) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Got it. I\u0027ve added this task:\\n\" + item.toString() + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getStorage().saveData();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Deletes task according to index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument the index of task to be deleted"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void deleteTask(String argument) throws IOException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(argument);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Task deletedTask \u003d this.getTask(taskNumber - 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getStorage().saveData();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String remainingTask \u003d \"Now you have \" + this.getSize() + \" tasks in the list\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printBorder(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\n\" + remainingTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printNumberFormatError(argument);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.getUi().printIndexError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Get task by its index"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param index index of task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return task in that index"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return Tasks.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Gets number of items in Tasklist"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return size number"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return Tasks.size();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void findTask(String keyword) throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        TaskList foundItems \u003d new TaskList();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for (Task item : this.Tasks) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String description \u003d item.getDescription();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                foundItems.addTask(item, false);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            foundItems.displayList();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            ;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 123
    }
  },
  {
    "path": "src/main/java/duke/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of Todo task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Todo extends duke.Task.Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static final String TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of Todo in the instance"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of the todo task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Todo(String description) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints the full details of todo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  todo type, completion status and description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[\"+ getTaskType() + \"]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return TASK_TYPE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Add Todo task to the Tasklist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param argument description of event"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws DukeException if argument is wrong/blank"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void addTodo(String argument) throws DukeException, IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        duke.Task.Task t \u003d new Todo(argument);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Duke.getTaskList().addTask(t,true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 49
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * This class deals with the user\u0027s interface."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Creates a new instance of scanner"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Reads the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints top and bottom border around text."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param message text to be displayed to the user"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void printBorder(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String line \u003d \"------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        System.out.print(line + message + line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints greeting message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String welcomeMessage \u003d \"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        printBorder(welcomeMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints exit message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void printBye() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String exitMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        printBorder(exitMessage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints message for index out of bounds."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void printIndexError() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String invalidNumber \u003d \"Please enter the correct range!\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        printBorder(invalidNumber);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Prints message asking for valid index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param Argument the argument that causes the error"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void printNumberFormatError(String Argument) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String invalidNumber \u003d Argument + \" is not a valid number!\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        printBorder(invalidNumber);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 75
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "todo what"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "poonchuanan": 2
    }
  }
]
