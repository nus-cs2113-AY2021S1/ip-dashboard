[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Represents the properties of Deadline task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  deadline type, completion status and description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents main program of Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static final int MAX_TASKS \u003d 100;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static Task[] items \u003d new Task[MAX_TASKS];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static int itemsCount \u003d 0;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String getFirstWord(String word){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String firstWord \u003d word;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if (firstWord.contains(\" \")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            firstWord \u003d firstWord.substring(0, firstWord.indexOf(\" \"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return firstWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Checks if string passed is of single word"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param word string to be passed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return true If wordArray.length \u003d\u003d 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static boolean checkOneWord(String word){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String [] wordArray \u003d word.trim().split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        if(wordArray.length \u003d\u003d 1){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//        String firstWord \u003d getFirstWord(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Save.loadData();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        } catch(FileNotFoundException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Save.createFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        ArrayList\u003cTask\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (input.equals(\"list\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for(Task t:items){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(String.valueOf(items.indexOf(t)+1) + \". \" + t); //index starts from 0"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (input.contains(\"done\")){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    items.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    Save.saveData();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"[\" + items.get(taskNumber - 1).getStatusIcon() + \"] \" + items.get(taskNumber - 1).description);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Task number cannot be empty\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } catch (NullPointerException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Please input a valid number\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (input.contains(\"delete\")){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\"));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Noted. I\u0027ve removed this task: \" + items.get(taskNumber - 1));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    items.remove(items.get(taskNumber - 1));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Task number cannot be empty\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } catch (NullPointerException e){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Please input a valid number\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String searchWord \u003d input.replace(\"find \",\"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                boolean hasResults \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                for (Task t : items) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (t.description.contains(searchWord)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        System.out.println(String.valueOf(items.indexOf(t)+1) + \". \" + t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        hasResults \u003d true;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                if(hasResults \u003d\u003d false){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"No matches found!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                input \u003d in.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//                String [] wordArray \u003d input.trim().split(\" \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                if (input.contains(\"todo\")){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    if (checkOneWord(input)){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        input \u003d in.nextLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        input \u003d input.replace(\"todo \", \"\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        Todo t \u003d new Todo(input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "//                        items[itemsCount] \u003d t;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        items.add(t);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + t);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } else if (input.contains(\"deadline\")){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    int indexDivider \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String dueDate \u003d input.substring(indexDivider+3);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d input.substring(0,indexDivider).replace(\"deadline \", \"\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    Deadline t \u003d new Deadline(input, dueDate);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    items.add(t);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\"+ t);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } else if (input.contains(\"event\")){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    int indexDivider \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    String eventTime \u003d input.substring(indexDivider+3);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d input.substring(0,indexDivider).replace(\"event \", \"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    Event t \u003d new Event(input, eventTime);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    items.add(t);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task:\\n\"+ t);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                } else{"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    input \u003d in.nextLine();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                itemsCount++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Save.saveData();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                System.out.println(\"Now you have \" + items.size() + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                input \u003d in.nextLine();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 9,
      "poonchuanan": 138
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Represents the properties of Event task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  event type, completion status and description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 21
    }
  },
  {
    "path": "src/main/java/Save.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Handles data storage of task list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Save {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String projectRoot \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static String itemsPath \u003d projectRoot + \"/data/duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Creates new file \"data.txt\" in data folder"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException On input error."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void createFile() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        folder.mkdir(); // create a folder in your current work space"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File file \u003d new File(folder, \"duke.txt\"); // put the file inside the folder"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        file.createNewFile(); // create the file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Loads task list from duke.txt everytime program is run"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws FileNotFoundException If file does not exist in the first place."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        File f \u003d new File(itemsPath); // create a File for the given file path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String eventType \u003d line.substring(1, 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String symbol \u003d line.substring(4, 5);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            String description \u003d line.substring(7);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            switch (eventType) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Todo t \u003d new Todo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.items[Duke.itemsCount] \u003d t;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                int indexDividerEvent \u003d description.indexOf(\"(at:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String eventTime \u003d description.substring(indexDividerEvent+4).replace(\")\",\"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                description \u003d description.substring(0,indexDividerEvent);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Event e \u003d new Event(description, eventTime);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.items[Duke.itemsCount] \u003d e;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                int indexDividerDeadline \u003d description.indexOf(\"(by:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                String deadline \u003d description.substring(indexDividerDeadline+4).replace(\")\",\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                description \u003d description.substring(0,indexDividerDeadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Deadline d \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.items[Duke.itemsCount] \u003d d;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if (symbol.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                Duke.items[Duke.itemsCount].markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            Duke.itemsCount++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Saves task list to duke.txt everytime it is modified"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public static void saveData() throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        for(Task t : Duke.items){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            if(t \u003d\u003d null){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "            textToAdd +\u003d t + System.lineSeparator();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        writeToFile(itemsPath, textToAdd);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Writes task list contents to duke.txt"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param filePath Absolute path of the file to be written"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param textToAdd Contents to be written"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @throws IOException On input error."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 94
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of a task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of task in the instance."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of a particular task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Returns status of task (completed or not)."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return tick or cross symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Marks the status of task to done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Returns details of task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 41
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " * Represents the properties of Todo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @param description description of task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * Stores details of Todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     * @return full details of task -  todo type, completion status and description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "poonchuanan"
        },
        "content": "todo what"
      }
    ],
    "authorContributionMap": {
      "poonchuanan": 1
    }
  }
]
