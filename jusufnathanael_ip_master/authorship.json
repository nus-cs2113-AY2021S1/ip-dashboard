[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Duke is a Personal Assistant Chatbot that helps a person to organise and keep track of various tasks,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "optimized for use via a Command Line Interface (CLI)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "The name Duke was chosen in honor of Duke, the Java Mascot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "- Quick start"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "- Features"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Listing all tasks](#listing-all-tasks-list): `list`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Adding a new todo](#adding-a-new-todo-todo): `todo`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Adding a new deadline](#adding-a-new-deadline-deadline): `deadline`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Adding a new event](#adding-a-new-event-event): `event`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Finding tasks by a keyword](#finding-tasks-by-a-keyword-find): `find`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Marking as done](#marking-as-done-done): `done`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Deleting a task](#deleting-a-task-delete): `delete`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Clearing all tasks](#clearing-all-tasks-clear): `clear`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    - [Exiting the program](#exiting-the-program-bye): `bye`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "- Command Summary"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "1. Ensure that you have `Java 11` installed in your Computer."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "2. Download the latest duke.jar from [here](https://github.com/jusufnathanael/ip/releases/tag/v0.2)."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "4. Launch the file using the `java -jar` command (`java -jar duke.jar`)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "5. Refer to the Features section below for details on what type of commands you can enter."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Listing all tasks: `list` "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Shows a list of all current tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "1. [T][✘] Create Zoom account"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Adding a new todo: `todo`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Adds a new todo item to the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `todo \u003cdescription\u003e`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "todo Do CS2113T assignment 1"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "todo Prepare for ST2334 final"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    [T][✘] Do CS2113T assignment 1"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Now you have 1 task in your list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Adding a new deadline: `deadline`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Adds a new deadline to the task list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `deadline \u003cdescription\u003e by: YYYY-MM-DD`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "deadline Finish CS2101 reflection by: 2020-10-09"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "deadline Finish CS2113T team project by: 2020-11-10"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    [D][✘] Finish CS2101 reflection by: 2020-10-09"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Now you have 3 task in your list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Adding a new event: `event`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Adds a new event to the task list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `event \u003cdescription\u003e at: YYYY-MM-DD`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "event Watch concert in YST at: 2020-10-23"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "event CS2113T final exam at: 2020-12-01 "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    [E][✘] Watch concert in YST at: 2020-10-23"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Now you have 5 task in your list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Finding tasks by a keyword: `find`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Finds tasks that contain any of the given keywords."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "- Keywords are case-sensitive."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "find CS2101"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "find 2020-10"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "We found 2 items in the list:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "1. [D][✘] Finish CS2113T team project by: 2020-11-10"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "2. [E][✘] CS2113T final exam at: 2020-12-01 "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Marking as done: `done`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Marks a certain task as done given the index number."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "done 1 (mark the first task as done)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "done 2 (mark the second task as done)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "[✓] Finish CS2101 reflection by: 2020-10-09"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Deleting a task: `delete`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Deletes a task given its index number."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "delete 1 (delete the current first task)"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "delete 2 (delete the current second task)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Got it. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    [T][✓] Finish CS2101 reflection by: 2020-10-09"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Now you have 5 task in your list."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Clearing all tasks: `clear`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Clears all the tasks inside the list."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `clear`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "List cleared! Currently there are no tasks in the list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "#### Exiting the program: `bye`"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Output:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "```"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e\u003cbr\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Command | Format, Examples"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "------- | ----------------"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Bye | `bye`"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Clear | `clear`"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Deadline | `deadline \u003cdescription\u003e by: YYYY-MM-DD`, e.g. `deadline Finish CS1010 Assignment 2 by: 2020-10-10`"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Delete | `delete \u003cindex\u003e`, e.g. `delete 1`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Done | `done \u003cindex\u003e`, e.g. `done 2`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Event | `event \u003cdescription\u003e at: YYYY-MM-DD`, e.g. `event CS1010 Exam at: 2020-11-25`"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Find | `find \u003ckeyword\u003e`, e.g. `find exam`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "List | `list`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "Todo | `todo \u003cdescription\u003e`, e.g. `todo Prepare for CS1010 Exam`"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "_Reference: https://se-education.org/addressbook-level3/UserGuide.html_"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "\u003cbr\u003e"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 183,
      "-": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.InvalidFilePathException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Main class for the application."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises the application and starts the interaction with the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Loads the storage file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param filePath filePath from the main function"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.printCurrentDate();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (InvalidFilePathException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"File does not end with .txt\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            storage.checkFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Executes the main program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String message \u003d in.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                Parser p \u003d new Parser(message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                Command c \u003d p.parseCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                isExit \u003d c.getIsExit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                ui.printCorrectFormat(new Parser(message).getCommand());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"OOPS!!! The input index is out of bound.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"OOPS!!! The input should be a number.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        new Duke(\"data/data.txt\").run();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 79,
      "-": 4
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents an executable command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises a single word command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param command command from the user"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Command (String command){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises command tagged with a description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param command command from the user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message the full input from the user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Command (String command, String message) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param storage IO file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param tasks current list of tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param ui text ui"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (command.equals(BYE)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            this.isExit \u003d tasks.bye();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(LIST)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.list();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(DONE)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                tasks.done(message);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"This task is already finished!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(DELETE)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.delete(message);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                tasks.deadline(message);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                tasks.acknowledge();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"Date should be in format YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(EVENT)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                tasks.event(message);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                tasks.acknowledge();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"Date should be in format YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(TODO)) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.todo(message);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.acknowledge();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(FIND)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.find(message);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(CLEAR)) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            storage.writeToFile(tasks.getTask());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } catch (IOException e){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Cannot write to file.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Reads the data.txt and initialise the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param tasks current list of tasks"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param done indicates whether a task is already done"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void addReadFile(TaskList tasks, int done) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (command.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.deadline(message);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(EVENT)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.event(message);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(TODO)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.todo(message);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (done \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.loadMarkAsDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.printTask();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 133
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Signals an error caused by wrong input format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 7
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidFilePathException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Signals an error caused by invalid file path."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class InvalidFilePathException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Parses user input into specific commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static String message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Parses user input into specific commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param line full user input string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Parser(String line) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (line.contains(\" \")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            command \u003d line.substring(0, line.indexOf(\" \"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            command \u003d line;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        message \u003d line;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Passes the parsed command from the user input for execution."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Command parseCommand() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.LIST:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.LIST);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.DONE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.DONE, message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.DELETE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.DELETE, message);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.CLEAR:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.CLEAR);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.DEADLINE, message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.EVENT, message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.TODO:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.TODO, message);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.FIND:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.FIND, message);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            case Command.BYE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                return new Command(Command.BYE);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 65
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.InvalidFilePathException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents the file used to store the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static String path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws InvalidFilePathException if the input path is invalid"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param filePath filePath from the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Storage(String filePath) throws InvalidFilePathException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        path \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (!path.endsWith(\".txt\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new InvalidFilePathException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Encodes all the tasks into String before writing to the storage file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param tasks current list of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return String consisting all the encoded tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String encodeList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        StringBuilder line \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Task t: tasks){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            char type \u003d t.toString().charAt(1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            int done \u003d t.getIsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String message \u003d t.toString().substring(7);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            line.append(type).append(done).append(\" \").append(message).append(System.lineSeparator());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return line.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Saves the data to the storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws IOException if there were errors when storing the data to the file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param t current list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void writeToFile(ArrayList\u003cTask\u003e t) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        fw.write(encodeList(t));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Decodes the data from the storage file into the same format as the correct user input"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message one line from the storage file"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return formatted input string"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String decodeLine(String message) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        StringBuilder returnMessage \u003d new StringBuilder();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (message.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            returnMessage.append(\"todo \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (message.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            returnMessage.append(\"event \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (message.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            returnMessage.append(\"deadline \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return returnMessage.append(message.substring(3)).toString();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Checks whether the storage file exist or not"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void checkFile() throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (dir.mkdir()){"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"New directory created: \" + dir.getName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File f \u003d new File(\"data/data.txt\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (f.createNewFile()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"New file created: \" + f.getName());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Loaded from the file: \" + f.getName());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Loads the data from the storage file to a new TaskList"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws FileNotFoundException if the storage file is not found"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @return the loaded list of tasks"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        File f \u003d new File(path);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            String message \u003d s.nextLine();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                int done \u003d Integer.parseInt(String.valueOf(message.charAt(1)));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                Parser p \u003d new Parser(decodeLine(message));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                Command c \u003d p.parseCommand();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                c.addReadFile(tasks, done);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(\"Cannot read file!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (tasks.getTask().size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Currently there are no tasks in the list.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(new Ui().DIVIDER);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return tasks.getTask();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 133
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents a deadline in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises the deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message full message from the user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws DateTimeException if the date format is incorrect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Deadline(String message) throws DateTimeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.description \u003d message.substring(message.indexOf(\u0027 \u0027) + 1, message.indexOf(\" by: \"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.by \u003d LocalDate.parse(message.substring(message.indexOf(\"by: \") + 4));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return \"[D]\" + super.toString() + \" by: \" + by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 29
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents an event in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message full message from the user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws DateTimeException if the date format is incorrect"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Event(String message) throws DateTimeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.description \u003d message.substring(message.indexOf(\u0027 \u0027) + 1, message.indexOf(\" at: \"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.at \u003d LocalDate.parse(message.substring(message.indexOf(\"at: \") + 4));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return \"[E]\" + super.toString() + \" at: \" + at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 29
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents a general task in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Get tick or x symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Return whether a task is already done or not in integers"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public int getIsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 44
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents the entire task list. Contains the data of each task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.tasks \u003d t;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public ArrayList\u003cTask\u003e getTask(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void delete(String message) throws NumberFormatException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (message.length() \u003c 8) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int l \u003d Integer.parseInt(message.substring(7)) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.acknowledge(tasks.get(l), \"del\", tasks.size() - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.remove(tasks.get(l));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.printClear();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void done(String message) throws DukeException, NumberFormatException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (message.length() \u003c 6) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new NumberFormatException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int i \u003d Integer.parseInt(message.substring(5)) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (!tasks.get(i).isDone) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            tasks.get(i).markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            ui.printDoneMessage(tasks.get(i).getStatusIcon(), tasks.get(i).getDescription());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void deadline(String message) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.add(new Deadline(message));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void event(String message) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.add(new Event(message));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void todo(String message) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.add(new Todo(message));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void find(String message) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        String keyword \u003d message.substring(5);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.findItem(tasks, keyword);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void acknowledge() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.acknowledge(tasks.get(tasks.size() - 1), \"add\", tasks.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void loadMarkAsDone() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        tasks.get(tasks.size() - 1).markAsDone();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public boolean bye() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ui.printByeMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(tasks.get(tasks.size() - 1));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 95
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Represents a to do item in the task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Initialises the todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message full message from the user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @throws StringIndexOutOfBoundsException if there is no description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Todo(String message) throws StringIndexOutOfBoundsException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.description \u003d message.substring(message.indexOf(\"todo \") + 5);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (this.description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            throw new StringIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 26
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /** A break line to separate commands and outputs */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public final String DIVIDER \u003d \"-------------------------------------------\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            \"--------------------------------------\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /** A line separator */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static final String BREAK \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /** Duke main logo */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Generates and prints the welcome message upon the start of the application."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(LOGO + BREAK + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Generates and prints the goodbye message at the end of the application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printByeMessage(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Generates a message whenever a task is marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param icon tick or cross icon"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printDoneMessage(String icon, String description) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"[\" + icon + \"] \" + description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Generates a message whenever a task is added or deleted."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param message task description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param note add or delete method"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param i total items in the list"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void acknowledge(Task message, String note, int i) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (note.equals(\"add\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"    \" + message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"Now you have \" + i + (i \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Prints all the tasks inside the current list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param t list of task to be printed"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printList(ArrayList\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (t.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Currently there are no tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            for (int i \u003d 0; i \u003c t.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.print(i + 1 + \". \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                System.out.println(t.get(i));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Prints an acknowledgement message when user clear the tasks list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printClear() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"List cleared! Currently there are no tasks in the list.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Find an item according to the input keyword."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param tasks current list of tasks"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param keyword keyword to be found in the task list"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void findItem(ArrayList\u003cTask\u003e tasks, String keyword) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        for (Task t: tasks) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                result.add(t);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"Sorry, we found no item with \\\"\" + keyword + \"\\\" in the list.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"We found \" + count + \" item\" + (count \u003d\u003d 1 ? \"\" : \"s\") + \" in the list:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            this.printList(result);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Prints today\u0027s date."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printCurrentDate() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        System.out.println(\"Current Date: \" + LocalDate.now() + BREAK + DIVIDER);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Generates and prints the message for DukeException from the main class Duke."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * Suggests the correct input format to the user."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     * @param command type of task: deadline/event/todo"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    public void printCorrectFormat(String command) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        if (command.equals(Command.DEADLINE)) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"OOPS!!! Please use this format: \" +"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    \"deadline \u003cdescription\u003e by: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(Command.EVENT)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"OOPS!!! Please use this format: \" +"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    \"event \u003cdescription\u003e at: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        } else if (command.equals(Command.TODO)){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "            System.out.println(\"OOPS!!! Please use this format: \" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "                    \"todo \u003cdescription\u003e\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jusufnathanael"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jusufnathanael": 161
    }
  }
]
