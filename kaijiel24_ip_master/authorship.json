[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "T | 0 | clean room"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "E | 0 | CS lecture  | Thurs 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "D | 1 | CG submission  | Tues 2359"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Path to file data/duke.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public static final String DUKE_TXT \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        TaskListResult result \u003d storage.initialiseTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        taskList \u003d result.taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printOneLine(result.message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return command.execute();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new CommandResult(e.getMessage(), false, null);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Continuously take in input and running the commands until input is BYE then exit"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void runDuke(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Initialise variables to get input from user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Get the first input from user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printPrompt();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // While the input is not \"bye\", add input to array of tasks and get another input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        while (!userInput.equals(parser.BYE)){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            Command command \u003d parser.parseCommand(taskList, userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            CommandResult commandResult \u003d executeCommand(command);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if (commandResult.isUpdated()){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList \u003d commandResult.getTaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                String errorMessage \u003d storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                ui.printMessage(errorMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            ui.printMessage(commandResult.getFeedbackMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            // Get another input"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            ui.printPrompt();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            userInput \u003d in.nextLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printExitLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        new Duke(DUKE_TXT).runDuke();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 74,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Commands Constant"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Regex Constants"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String SPACE_REGEX \u003d \"\\\\s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String START_LINE_REGEX \u003d \"^\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Reads the input of the line to determine the command and run it"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Command parseCommand(TaskList taskList, String userInput){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Get command from the userInput"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String[] splitLine \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String command \u003d splitLine[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Remove command from userInput"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String arguments \u003d userInput.replaceAll(START_LINE_REGEX + command + SPACE_REGEX, \"\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Check the command type then execute the commands"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if(arguments.equals(LIST)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new ListCommand(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(TODO)){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.TODO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DEADLINE)){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(EVENT)){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.EVENT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DELETE) ){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new DeleteCommand(taskList, arguments);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DONE) ) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new MarkAsDoneCommand(taskList, arguments);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new EmptyCommand(taskList);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 60
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.exceptions.FileFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public static final String SPLIT_REGEX \u003d \"\\\\s\\\\|\\\\s\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TODO_REGEX \u003d \"T\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String EVENT_DEADLINE_REGEX \u003d \"[ED]\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\\\\|.+\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final File f;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void loadData(TaskList taskList)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws FileNotFoundException, FileFormatException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        while (s.hasNext()){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String entry \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            // Check if entry is in the correct format"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if(!entry.matches(TODO_REGEX)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                    \u0026\u0026 !entry.matches(EVENT_DEADLINE_REGEX)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                throw new FileFormatException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String[] entrySplit\u003d entry.split(SPLIT_REGEX);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String taskType \u003d entrySplit[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            boolean isDone \u003d entrySplit[1].equals(\"1\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String description \u003d entrySplit[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String atBy \u003d entrySplit.length \u003e\u003d 4 ? entrySplit[3] : \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if (taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } else if (taskType.equals(\"D\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Deadline(description, isDone, atBy));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } else if (taskType.equals(\"E\")){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Event(description, isDone, atBy));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Path pathToFile \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Files.createDirectories(pathToFile.getParent());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskListResult initialiseTaskList(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            loadData(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d message + \"File not found\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                message \u003d message + \"\\n\" + \"New file data/duke.txt created\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } catch (IOException e1){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                message \u003d message + \"\\n\" + \"Error creating new file\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (FileFormatException e){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d message + \"\\n\" + \"File formatting error\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            taskList.clearList();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new TaskListResult(taskList, message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private void _writeToFile(TaskList taskList) throws IOException{"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        for (Task task : taskList.tasks){"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            fw.write(task.saveTask() + \"\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String writeToFile(TaskList taskList){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            _writeToFile(taskList);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return \"Error writing to file\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 110
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Lines to be printed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String GREETING_LINES \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Hello! I\u0027m duke.Duke\" + \"\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String BYE_LINE \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Prints a horizontal dash line"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printDashLine(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.println(\"--------------------------------\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                + \"---------------------------------------\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printOneLine(String line){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (line.isEmpty()){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printDashLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printDashLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printPrompt(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.print(\"  \u003e \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Prints the greet statement"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printGreeting(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(GREETING_LINES);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Prints the exit statement"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printExitLine() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(BYE_LINE);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 45
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskType type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public AddCommand(TaskList taskList, String arguments, TaskType type){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addTodo(arguments);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } else if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addDeadline(arguments);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } else if (type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addEvent(arguments);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, true, taskList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected String arguments;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected Command(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract CommandResult execute() throws Exception;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 16
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String feedbackMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private boolean updated;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult(String feedbackMessage, boolean updated){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.updated \u003d updated;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.feedbackMessage \u003d feedbackMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        taskList \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult(String feedbackMessage, boolean updated, TaskList taskList){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.updated \u003d updated;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.feedbackMessage \u003d feedbackMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getFeedbackMessage(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return feedbackMessage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public boolean isUpdated(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return updated;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList getTaskList(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public DeleteCommand(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.deleteTask(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message,true, taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 17
    }
  },
  {
    "path": "src/main/java/duke/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EmptyCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public EmptyCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, \"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        taskList.doNothing();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(\"\", false, taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 16
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public ListCommand(TaskList taskList){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, \"\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.getList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, false, taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 16
    }
  },
  {
    "path": "src/main/java/duke/command/MarkAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public MarkAsDoneCommand(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.markAsDone(arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, true, taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeadlineException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DEADLINE_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Deadline must follow the format \u003cdescription\u003e /by \u003ctime/date\u003e \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DEADLINE_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteFormatException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DELETED_FORMAT_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Delete must follow the format: delete \u003cindex\u003e\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DELETED_FORMAT_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String OUT_OF_RANGE_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The index given is out of the range of the number of tasks.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return OUT_OF_RANGE_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneAlreadyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneAlreadyException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String COMPLETED_LINE \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The task has already been completed.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return COMPLETED_LINE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneFormatException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DONE_FORMAT_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Done must follow the format: done \u003cindex\u003e\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DONE_FORMAT_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String OUT_OF_RANGE_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The index given is out of the range of the number of tasks.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return OUT_OF_RANGE_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EmptyListException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String EMPTY_LIST_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! List is empty.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return EMPTY_LIST_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EventException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String EVENT_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! duke.tasks.Event must follow the format \u003cdescription\u003e /at \u003ctime/date\u003e \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return EVENT_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/FileFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class FileFormatException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 4
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NothingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class NothingException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String NOT_RECOGNISED_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Command not recognised\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return NOT_RECOGNISED_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class TodoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TODO_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Todo must be followed by \u003cdescription\u003e\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return TODO_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 11
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Deadline (String description, String by){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Deadline (String description, boolean isDone, String by){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"[D][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Event (String description, String at){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Event (String description, boolean isDone, String at){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"[E][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 30
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Mark a task as done based on the index"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Returns String that describes task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract String showTask();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Returns String in the format to be saved"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract String saveTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class TaskList {// duke.tasks.Task variables"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String LIST_INTRO_LINE \u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TASK_ADDED_LINE \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TASK_DELETED_LINE \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TASK_DONE_LINE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String GET_DESCRIPTION_REGEX \u003d \"/.+\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String GET_AT_REGEX \u003d \".+/at \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String GET_BY_REGEX \u003d \".+/by \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DIGITS_REGEX \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DEADLINE_REGEX \u003d \".+/by.+\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String EVENT_REGEX \u003d \".+/at.+\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Print acknowledgement of task added/ deleted depending on line"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getAcknowledgement(String line, int index){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return line + \"\\n  \" + tasks.get(index).showTask();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Print number of tasks left"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getNumOfTask() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Print list of task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getList() throws EmptyListException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String fullList \u003d LIST_INTRO_LINE;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Add each item to listLines"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            fullList \u003d fullList + \"\\n\" +  i + \". \" + tasks.get(i - 1).showTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return fullList;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Adding a duke.tasks.Todo to list of tasks"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addTodo(String userInput) throws TodoException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (userInput.equals(\"todo\") || userInput.equals(\"\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new TodoException();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Create new duke.tasks.Todo instance an add it to end taskList"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Todo(userInput));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Adding a duke.tasks.Deadline to list of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addDeadline(String userInput) throws DeadlineException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Check if line follows the format \"\u003cdescription\u003e /by \u003ctime/date\u003e\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!userInput.matches(DEADLINE_REGEX)){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeadlineException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // get description and by from line"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String description \u003d userInput.replaceAll(GET_DESCRIPTION_REGEX, \"\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String by \u003d userInput.replaceAll(GET_BY_REGEX, \"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Create new duke.tasks.Deadline instance an add it to end taskList"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Adding an duke.tasks.Event to list of tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addEvent(String userInput) throws EventException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Check if userInput follows the format \"\u003cdescription\u003e /at \u003ctime/date\u003e\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!userInput.matches(EVENT_REGEX)){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new EventException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // get description and by from userInput"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String description \u003d userInput.replaceAll(GET_DESCRIPTION_REGEX, \"\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String at \u003d userInput.replaceAll(GET_AT_REGEX, \"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Create new duke.tasks.Event instance an add it to end taskList"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void doNothing () throws NothingException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        throw new NothingException();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Delete task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String deleteTask(String userInput)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws DeleteFormatException, DeleteRangeException {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!userInput.matches(DIGITS_REGEX)){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeleteFormatException();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        int index \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeleteRangeException();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String acknowledgement \u003d getAcknowledgement(TASK_DELETED_LINE, index);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return acknowledgement + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Mark the task at the given index as done"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String markAsDone(String userInput)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws DoneFormatException, DoneAlreadyException, DoneRangeException{"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Check if the command is done and is followed by a number"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // and if the index is within the range of number of tasks"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!userInput.matches(DIGITS_REGEX)){"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneFormatException();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        int index \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (index \u003e\u003d tasks.size()){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneRangeException();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Check if task is already done"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (tasks.get(index).isDone()){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneAlreadyException();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Mark the index as done"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Acknowledge task is done"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_DONE_LINE, index);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void clearList(){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 162
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskListResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class TaskListResult {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskListResult(TaskList taskList, String message){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 13
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 5
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Todo (String description){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Todo (String description, boolean isDone){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "       return \"[T][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event /at noon"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "deadline project /by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "todo swimming"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event basketball /at noon"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "deadline homework /by 4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done something"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event fly kite /at 2345"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete swimming"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 1,
      "-": 37
    }
  }
]
