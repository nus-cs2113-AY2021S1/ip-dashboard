[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "# Duke "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 1,
      "-": 7
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "T | 0 | clean room"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "E | 0 | CS lecture  | Thurs 1200"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "T | 0 | run"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "D | 0 | meeting preparation  | 30/09/2020 1000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "E | 1 | CS2113 Tutorial  | 02/10/2020 1200"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "D | 1 | CG submission  | Tues 2359"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "T | 1 | clean kitchen"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "E | 0 | CS lab  | Fri 1000"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 8
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### List out all the tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "List out all the tasks so that the user can see "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "1. all the tasks currently;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "1. the completion status of each task; and "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "1. the index of each task so to be used for `delete` or `done`."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### Add 3 different types of tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "The 3 different types of tasks that users can add are `Todos`, `Deadlines` and `Events`."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Task | Use Case "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "---- | --------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Todo | Normal Task "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "DeadLine| Task to be done **by** certain time/date "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Event | Task happening **at** certain time/date "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### Delete a task from the list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Tasks that are no longer relevant can be deleted from the list so that the user can focus on"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "more important task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### Mark a task as done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Mark tasks which are already completed as done so that you can keep track of what else needs to be done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### Find tasks from list containing certain terms"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Find tasks from list whose description contains the *search term*. This function is not case specific."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `list` - Shows all the tasks in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Shows all the tasks that are currently in the list along with their completion status"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "1. [T][✘] clean room"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "2. [E][✘] CS lecture  (at: Thurs 1200)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "3. [D][✓] CG submission  (by: Tues 2359)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `todo` - Adds a new Todo task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Adds a new todo task to the list with the given description"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`todo run`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "  [T][✘] run"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `deadline` - Adds a new Deadline task "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Adds a new Deadline task to the list with the given description and date/time"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`deadline meeting preperation \\by 30/09/2020 1000`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "  [D][✘] meeting preperation  (by: 30/09/2020 1000)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `event` - Adds a new Event task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Adds a new Event task to the list with the given description and date/time"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`event CS2113 Tutorial /at 02/10/2020 1200`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "  [E][✘] CS2113 Tutorial  (at: 02/10/2020 1200)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Now you have 6 tasks in the list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `delete` - Deletes a task from the list"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Deletes a task from the list based on the given index of the task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "  [D][✓] CG submission  (by: Tues 2359)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `done` - Marks a task from the list as done"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Marks an undone task from the list as done"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`done 5`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "  [E][✓] CS2113 Tutorial  (at: 02/10/2020 1200)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "### `find` - Find tasks from list"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Finds task from list whose description matches the search term"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "`find cs`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "Here are the tasks in your list that contains \u0027cs\u0027"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "2. [E][✘] CS lecture  (at: Thurs 1200)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "5. [E][✓] CS2113 Tutorial  (at: 02/10/2020 1200)"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "8. [E][✘] CS lab  (at: Fri 1000)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "------------------------------------------------------------"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 135,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.storage.StorageResult;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * \u003ch1\u003eDuke\u003c/h1\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * The Duke program is implements an application that helps user keep track of their"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *  tasks in various forms such as Todos, Deadlines and Events."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * @author Kai Jie"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * @version 0.2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public static final String DUKE_TXT \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Creates a new instance of Ui, Storage and Parser."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Initialises the taskList using Storage initialiseTaskList method"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * and prints message from initialisation."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param filePath path to file data stored in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        StorageResult result \u003d storage.initialiseTaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        taskList \u003d result.getTaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printMessage(result.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Executes the command and returns the result"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param command command from parser"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return result from executing command"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult executeCommand(Command command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return command.execute();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new CommandResult(e.getMessage(), false, null);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * This method is used to runDuke continuously on a loop doing the following things:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * take in a userInput, parse the output through the Parser to get the command to run"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * and run the command. It then writes new taskList to storage if there are any changes"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * and prints the message to for the user"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * The loop is exited when the userInput is \"bye\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void runDuke(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printPrompt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        userInput \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        while (!userInput.equals(parser.BYE)){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            Command command \u003d parser.parseCommand(taskList, userInput);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            CommandResult commandResult \u003d executeCommand(command);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if (commandResult.isUpdated()){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList \u003d commandResult.getTaskList();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                String storageMessage \u003d storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                ui.printMessage(storageMessage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            ui.printMessage(commandResult.getMessage());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            ui.printPrompt();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            userInput \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        ui.printExitLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * This is the main method which creates a new instance of Duke and uses"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      runDuke method."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        new Duke(DUKE_TXT).runDuke();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 112,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents an add command where a new task is added to the existing list of task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskType \u003ccode\u003etype\u003c/code\u003e represents the type of the task to be added"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public AddCommand(TaskList taskList, String arguments, TaskType type){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (type \u003d\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addTodo(arguments);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } else if (type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addDeadline(arguments);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } else if (type \u003d\u003d TaskType.EVENT) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d taskList.addEvent(arguments);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, true, taskList);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskList \u003ccode\u003etaskList\u003c/code\u003e represents the list of task the command works on"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003earguments\u003c/code\u003e represents the arguments for the command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected String arguments;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected Command(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.arguments \u003d arguments;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Executes command based on the given arguments on the list of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return CommandResult containing the final taskList, whether the taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      has been updated through the command and the message to be shown to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      the user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws Exception Various Exceptions when arguments do not fit the command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      specification"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract CommandResult execute() throws Exception;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 31
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents the results after executing a command"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003emessage\u003c/code\u003e represents the message to be shown to the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskList \u003ccode\u003etaskList\u003c/code\u003e represents the list of task after executing the command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * boolean \u003ccode\u003eupdated\u003c/code\u003e represents whether the list of task has been updated"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private boolean updated;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor without taskList */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult(String message, boolean updated){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.updated \u003d updated;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor with taskList */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult(String message, boolean updated, TaskList taskList){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.updated \u003d updated;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Gets message */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Checks whether list of tasks is updated */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public boolean isUpdated(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return updated;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Gets list of task */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList getTaskList(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Represents a delete command where an existing task is deleted from the list */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public DeleteCommand(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.deleteTask(arguments);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message,true, taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 19
    }
  },
  {
    "path": "src/main/java/duke/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Represents an empty command to be executed when the command is not recognised */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EmptyCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public EmptyCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, \"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        taskList.doNothing();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(\"\", false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 18
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *  Represents a find command to find all tasks which have descriptions"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *          that contains the given search term"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public FindCommand(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.findTask(arguments);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 21
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Represents a list command to show all current tasks in list */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public ListCommand(TaskList taskList){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, \"\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.getList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, false);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 19
    }
  },
  {
    "path": "src/main/java/duke/command/MarkAsDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a \"mark as done\" command and changes the status of"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * of an existing, undone task to done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class MarkAsDoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public MarkAsDoneCommand(TaskList taskList, String arguments){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(taskList, arguments);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public CommandResult execute() throws Exception{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d taskList.markAsDone(arguments);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new CommandResult(message, true, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 22
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Used when DeadlineCommand does not follow the format:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      deadline [description] /by [time/date]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeadlineException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String DEADLINE_LINE \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Deadline must follow the format: deadline \u003cdescription\u003e /by \u003ctime/date\u003e \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DEADLINE_LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Used when DeleteCommand does not follow the format:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      delete [index]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteFormatException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String DELETED_FORMAT_LINE \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Delete must follow the format: delete \u003cindex\u003e\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DELETED_FORMAT_LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when the index given in the DeleteCommand is out of range */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DeleteRangeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String OUT_OF_RANGE_LINE \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The index given is out of the range of the number of tasks.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return OUT_OF_RANGE_LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneAlreadyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when task in MarkAsDoneCommand is already completed */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneAlreadyException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String COMPLETED_LINE \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The task has already been completed.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return COMPLETED_LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Used when DoneCommand does not follow the format:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      done [index]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneFormatException extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String DONE_FORMAT_LINE \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Done must follow the format: done \u003cindex\u003e\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return DONE_FORMAT_LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneRangeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class DoneRangeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String OUT_OF_RANGE_LINE \u003d"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The index given is out of the range of the number of tasks.\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return OUT_OF_RANGE_LINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when list to be shown is empty */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EmptyListException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String EMPTY_LIST_LINE \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! List is empty.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return EMPTY_LIST_LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EntryFormatError.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when the entry format does not follow:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      T | [1/0] | [description] OR"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      [E/D] | [1/0] | [description] | [time/date]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EntryFormatError extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Used when EventCommand does not follow the format:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      event [description] /at [time/date]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class EventException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String EVENT_LINE \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Event must follow the format: \u003cdescription\u003e /at \u003ctime/date\u003e \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return EVENT_LINE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 15
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when none of the tasks in the list has a description that contains the search term */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class NotFoundException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String NOT_FOUND_LINE \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! The search term cannot be found.\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return NOT_FOUND_LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NothingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when commands are not recognised */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class NothingException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String NOT_RECOGNISED_LINE \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Command not recognised\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return NOT_RECOGNISED_LINE;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 12
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Used when TodoCommand does not follow the format:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " *      todo [description]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class TodoException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TODO_LINE \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \":( Oh no! Todo must follow the format: todo \u003cdescription\u003e\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return TODO_LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Parses user commands */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Commands Constant"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Regex Constants"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String SPACE_REGEX \u003d \"\\\\s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String START_LINE_REGEX \u003d \"^\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Parses userInput and returns a command to be executed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param taskList List of task to execute command on"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param userInput Input from the user to determin command"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Command parseCommand(TaskList taskList, String userInput){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String[] splitLine \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String command \u003d splitLine[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        final String arguments \u003d userInput.replaceAll(START_LINE_REGEX + command + SPACE_REGEX, \"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if(arguments.equals(LIST)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new ListCommand(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(TODO)){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.TODO);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DEADLINE)){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(EVENT)){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new AddCommand(taskList, arguments, TaskType.EVENT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DELETE) ){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new DeleteCommand(taskList, arguments);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(DONE) ) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new MarkAsDoneCommand(taskList, arguments);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (command.equals(FIND)){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return new FindCommand(taskList, arguments);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new EmptyCommand(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 70
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.exceptions.EntryFormatError;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Reads and writes list of task to file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String FILE_NOT_FOUND_LINE \u003d \"File not found\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String NEW_FILE_CREATED_LINE \u003d \"New file data/duke.txt created\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String CREATE_FILE_ERROR_LINE \u003d \"Error creating new file\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String FILE_FORMAT_ERROR_LINE \u003d \"File formatting error\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String SPLIT_REGEX \u003d \"\\\\s\\\\|\\\\s\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TODO_REGEX \u003d \"T\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String EVENT_DEADLINE_REGEX \u003d \"[ED]\\\\s\\\\|\\\\s[01]\\\\s\\\\|.+\\\\|.+\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String WRITE_ERROR_LINE \u003d \"Error writing to file\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final File f;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Loads user data from file into \u003ccode\u003etaskList\u003c/code\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param taskList List of task to be loaded with data from file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws FileNotFoundException When file does not exist"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws EntryFormatError When the entry format is wrong"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void loadData(TaskList taskList)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws FileNotFoundException, EntryFormatError {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        while (s.hasNext()){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String entry \u003d s.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if(!entry.matches(TODO_REGEX)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                    \u0026\u0026 !entry.matches(EVENT_DEADLINE_REGEX)) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                throw new EntryFormatError();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String[] entrySplit\u003d entry.split(SPLIT_REGEX);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String taskType \u003d entrySplit[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            boolean isDone \u003d entrySplit[1].equals(\"1\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String description \u003d entrySplit[2];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            String atBy \u003d entrySplit.length \u003e\u003d 4 ? entrySplit[3] : \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if (taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } else if (taskType.equals(\"D\")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Deadline(description, isDone, atBy));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } else if (taskType.equals(\"E\")){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                taskList.tasks.add(new Event(description, isDone, atBy));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Creates a data file and its parent directory if it does not already exists"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws IOException When the file path is not available"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void createFile() throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Path pathToFile \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        Files.createDirectories(pathToFile.getParent());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Initialises a new list of task and load data into file if file exists,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      else create new file to write data into later on"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return StorageResult containing \u003ccode\u003etaskList\u003c/code\u003e created"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      and String representing message to be sent back to user"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public StorageResult initialiseTaskList(){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            loadData(taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d message + FILE_NOT_FOUND_LINE;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                createFile();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                message \u003d message + \"\\n\" + NEW_FILE_CREATED_LINE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            } catch (IOException e1){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                message \u003d message + \"\\n\" + CREATE_FILE_ERROR_LINE;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (EntryFormatError e){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            message \u003d message + \"\\n\" + FILE_FORMAT_ERROR_LINE;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            taskList.clearList();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return new StorageResult(taskList, message);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private void _writeToFile(TaskList taskList) throws IOException{"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        FileWriter fw \u003d new FileWriter(f);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        for (Task task : taskList.tasks){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            fw.write(task.saveTask() + \"\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Writes list of task to file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param taskList list of task to write to data"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return String representing message to be shown to user"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String writeToFile(TaskList taskList){"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            _writeToFile(taskList);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return WRITE_ERROR_LINE;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 143
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents the result of getting a taskList from file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskList \u003ccode\u003etaskList\u003c/code\u003e represents the list of task received from the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003emessage\u003c/code\u003e represents the message to be sent back to the user about the result"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class StorageResult {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public StorageResult(TaskList taskList, String message){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Gets taskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList getTaskList(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Gets message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 35
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a Deadline Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskType \u003ccode\u003etaskType\u003c/code\u003e represents the type of task this class is"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003eby\u003c/code\u003e represents the date or time task should be completed by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor without isDone */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Deadline (String description, String by){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor with isDone */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Deadline (String description, boolean isDone, String by){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Gets by*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"[D][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"D | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents an Event Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskType \u003ccode\u003etaskType\u003c/code\u003e represents the type of task this class is"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003eby\u003c/code\u003e represents the date or time task should be happening at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor without isDone */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Event (String description, String at){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor with isDone */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Event (String description, boolean isDone, String at){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Gets at */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getAt(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"[E][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"E | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a Task in the TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * String \u003ccode\u003edescription\u003c/code\u003e represents the description of the task; and"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * boolean \u003ccode\u003eisDone\u003c/code\u003e represents whether the task has been completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor without isDone */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor with isDone */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Task(String description, boolean isDone){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Gets description of task */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Checks whether task is complete */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Marks task as completed */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Mark a task as done based on the index"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Get a message about the details of the task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the details of the task in the format to be shown to user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    // Returns String that describes task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract String showTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Get a formatted message to save to file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the details of the task in the format to be saved"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public abstract String saveTask();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 52
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import duke.exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a list of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * The ArrayList of Task \u003ccode\u003etasks\u003c/code\u003e represents the list of all the tasks available"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String LIST_INTRO_LINE \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TASK_ADDED_LINE \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TASK_DELETED_LINE \u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TASK_DONE_LINE \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public final String FIND_INTRO_LINE \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Here are the tasks in your list that contains \u0027\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String GET_DESCRIPTION_REGEX \u003d \"/.+\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String GET_AT_REGEX \u003d \".+/at \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String GET_BY_REGEX \u003d \".+/by \";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String DIGITS_REGEX \u003d \"\\\\d+\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String DEADLINE_REGEX \u003d \".+/by.+\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String EVENT_REGEX \u003d \".+/at.+\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Gets acknowledgement of task added/ deleted depending on line"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param line Message that a task has been successfully added/ deleted"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param index Index of the task that was added/ deleted"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing an acknowledgement message"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getAcknowledgement(String line, int index){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return line + \"\\n  \" + tasks.get(index).showTask();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Gets the current number of tasks in a list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing a message about then current number of tasks in the list"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getNumOfTask() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"Now you have \" + tasks.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Gets the list of tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing a message about the list of tasks"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws EmptyListException If list.size() \u003d\u003d 0"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String getList() throws EmptyListException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String fullList \u003d LIST_INTRO_LINE;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Add each item to listLines"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            fullList \u003d fullList + \"\\n\" +  i + \". \" + tasks.get(i - 1).showTask();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return fullList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Adds a Todo task to the list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Arguments of the user\u0027s input"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the full message to return to user in the case of a successful addition"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws TodoException when the task description is empty"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addTodo(String arguments) throws TodoException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (arguments.equals(TODO) || arguments.equals(\"\")){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new TodoException();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Todo(arguments));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Adds a Deadline task to the list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Arguments of the user\u0027s input"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the full message to return to user in the case of a successful addition"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DeadlineException when the arguments do not follow the format of"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      description /by time/date"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addDeadline(String arguments) throws DeadlineException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!arguments.matches(DEADLINE_REGEX)){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeadlineException();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String description \u003d arguments.replaceAll(GET_DESCRIPTION_REGEX, \"\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String by \u003d arguments.replaceAll(GET_BY_REGEX, \"\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Deadline(description, by));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Adds a Event task to the list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Arguments of the user\u0027s input"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the full message to return to user in the case of a successful addition"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws EventException when the arguments do not follow the format of"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      description /at time/date"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String addEvent(String arguments) throws EventException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!arguments.matches(EVENT_REGEX)){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new EventException();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String description \u003d arguments.replaceAll(GET_DESCRIPTION_REGEX, \"\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String at \u003d arguments.replaceAll(GET_AT_REGEX, \"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_ADDED_LINE, tasks.size()-1)"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Does nothing other than throw exception. Used in cases where command not recognised"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws NothingException when command not recognised"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void doNothing () throws NothingException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        throw new NothingException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Deletes a task from the list"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Arguments of the user\u0027s input"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the full message to return to user in the case of a successful deletion"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DeleteFormatException when the arguments do not follow the format of a single integer"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DeleteRangeException when the integer from the argument is not within the range of the"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      number of tasks in the list"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String deleteTask(String arguments)"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws DeleteFormatException, DeleteRangeException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!arguments.matches(DIGITS_REGEX)){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeleteFormatException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        int index \u003d Integer.parseInt(arguments) - 1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DeleteRangeException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String acknowledgement \u003d getAcknowledgement(TASK_DELETED_LINE, index);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return acknowledgement + \"\\n\" + getNumOfTask();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Marks a task in the list as done"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Arguments of the user\u0027s input"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the full message to return to user in the case where the task is"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *      successfully marked as done"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DoneFormatException when the arguments do not follow the format of a single integer"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DoneRangeException when the integer from the argument is not within the range of the"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws DoneAlreadyException when the task specified has already been previously marked as done"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String markAsDone(String arguments)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throws DoneFormatException, DoneAlreadyException, DoneRangeException{"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (!arguments.matches(DIGITS_REGEX)){"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneFormatException();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        int index \u003d Integer.parseInt(arguments) - 1;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (index \u003e\u003d tasks.size()){"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneRangeException();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (tasks.get(index).isDone()){"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new DoneAlreadyException();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return getAcknowledgement(TASK_DONE_LINE, index);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Find tasks which have description containing search term"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param arguments Search term to find within tasks\u0027 description"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return a String representing the list of items that contain the search term"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @throws NotFoundException"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String findTask(String arguments) throws NotFoundException {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        String foundList \u003d FIND_INTRO_LINE + arguments + \"\u0027\";"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        int numFound \u003d 0;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        // Add each item to foundList"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            if (tasks.get(i - 1).getDescription().toLowerCase().contains(arguments.toLowerCase())) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                numFound +\u003d 1;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "                foundList \u003d foundList + \"\\n\" + i + \". \" + tasks.get(i - 1).showTask();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (numFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            throw new NotFoundException();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return foundList;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Clears the list of task */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void clearList(){"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 239
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Represents the types of Tasks */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    TODO, EVENT, DEADLINE"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 6
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * Represents a Todo Task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " * TaskType \u003ccode\u003etaskType\u003c/code\u003e represents the type of task this class is"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private TaskType type \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor without isDone */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Todo (String description){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor with isDone */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Todo (String description, boolean isDone){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String showTask(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "       return \"[T][\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \" + description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return \"T | \" + (isDone ? 1 : 0) + \" | \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "/** Displays messages to user */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String GREETING_LINES \u003d"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Hello! I\u0027m Duke\" + \"\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final String BYE_LINE \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private final int MAX_LINE_LENGTH \u003d 60;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Constructor */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Reads user input from command line"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @return String containing userInput"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public String readUserInput(){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private void printDashLine(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.println(\"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    private void printOneLine(String line){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        if (line.isEmpty()){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printDashLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printDashLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Displays the prompt for user input */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printPrompt(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        System.out.print(\"  \u003e \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Displays the greeting message */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printGreeting(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(GREETING_LINES);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /** Displays the exit message */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printExitLine() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(BYE_LINE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * Displays the message"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     * @param message message to be displayed to suer"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "        printOneLine(message);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 68
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event /at noon"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "deadline project /by"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "todo swimming"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event basketball /at noon"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "deadline homework /by 4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done something"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "event fly kite /at 2345"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete swimming"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaijiel24"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kaijiel24": 1,
      "-": 37
    }
  }
]
