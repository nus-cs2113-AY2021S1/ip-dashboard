[
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "# Duke Program"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "## Duke User Guide"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Table of contents"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Quick Start](#quick-start)  "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Add Todo item](#todo---add-a-todo-item)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Add Deadline item](#deadline---add-a-deadline-item)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Add Event item](#event---add-a-event-item)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Print list of Tasks](#list---print-list-of-tasks)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Delete a task item](#delete---delete-an-task-item)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Save tasks to txt file](#save---save-tasks-to-txt-file)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Find tasks with keyword](#find---find-tasks-with-keyword)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Find tasks on date](#occur---find-tasks-on-date)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "  * [Exit program](#bye---exit-program)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [FAQ](#frequently-asked-questions)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "* [Command Summary](#command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Quick Start"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "1. Ensure that **Java 11.0.8** is installed on your Computer."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "2. Download the executable jar file [here](https://github.com/TYS0n1/ip/releases)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "3. Copy the directory address of the folder the jar file is downloaded to on your computer."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "4. Start command prompt and go to the directory of the jar file by typing \u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`cd ADDRESS_COPIED_IN_STEP_3`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "5. Start running the jar file by typing `java -jar ip.jar`."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "6. You should see txt file **taskList.txt** appears in the folder. If it does not, type `bye` and repeat step 4 and 5."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Features "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eNote on formatting of commands "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* Commands written in **UPPERCASE** are parameters to be supplied by you.\u003cbr\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `todo DESCRIPTION`, `DESCRIPTION` is the information about the todo task supplied by you. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eYou need not add type the parameter in uppercase. eg `todo homework` is alright."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When a date parameter is to be supplied by you, **DATE**, "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eyour input can be in the either dd/mm/yy format or dd-mm-yy format. \u003cbr\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. `event abc /at 06/09/2011 00:00` or `event abc /at 06-09-2011 00:00` \u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eAlso, your date input need not be padded with zeros \u003cbr\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. an event entry on the 6th of september 900 AD"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003ecan be entered as: \u003cbr\u003e`event abc /at 6/9/900 00:00` or `event abc /at 06/09/0900 00:00` without errors."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When a time parameter is to be supplied by you, **TIME**,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eyour input needs to follow hh:mn format and be in terms 24 hours."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. an event entry to occur at 1.35pm will be entered as: \u003cbr\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e`event abc /at 06/09/2011 13:35`."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003e* When a number parameter is to be supplied by you, **NUMBER**,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eyour input has to be a number that lies in your task list. \u003cbr\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "\u003eeg. your have 4 tasks in your list. The valid numbers you can input are from 1 to 4. "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `todo` - Add a Todo item"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Adds a task with a simple description. \u003cbr\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`todo homework`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   [T][0] homework"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `deadline` - Add a Deadline item"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Adds a task with a due date and time. \u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `deadline DESCRIPTION /by DATE TIME`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`deadline homework /by 9/9/2020 09:00`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   [D][0] homework (by: Sep 9 2020 09:00)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `event` - Add a Event item"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Adds a task with a due date and time. \u003cbr\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command : `event DESCRIPTION /at DATE TIME`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`event party /at 10/12/2020 20:00`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   [E][0] party (at: Dec 10 2020 20:00)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `list` - Print list of Tasks"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Prints out all current tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `list`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Here are the tasks in your list:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " 1.[D][0] homework (by: Sep 9 2020 09:00)"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " 2.[E][0] party (at: Dec 10 2020 20:00)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `done` - Mark a task as done"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Mark a task from the current list ot tasks as done. \u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `done NUMBER`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   [T][1] homework"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `delete` - Delete an task item"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Delete a task from the current list of tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `delete NUMBER`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Noted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "   [D][0] homework (by: Sep 9 2020 09:00)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Now you have 0 tasks in the list."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `save` - Save tasks to txt file"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Save tasks into a txt file. \u003cbr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Note:** The program automatically saves changes. \u003cbr\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `save`"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`save`"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Nice! I have saved your list."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `find` - Find tasks with keyword"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Based on a keyword you input, the program searches for tasks containing that keyword. \u003cbr\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `find PHRASE`"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`find homework`"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " 1.[T][0] homework"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " 2.[D][0] homework (by: Sep 9 2020 09:00)"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `occur` - Find tasks on date"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Based on a date you input, the program searches for tasks that fall on that date. \u003cbr\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `occur DATE`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`occur 9/9/2020`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Tasks due on: 2020-09-09"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " 1.[D][0] homework (by: Sep 9 2020 09:00)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "#### `bye` - Exit program"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Closes the program. \u003cbr\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Command: `bye`"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " Bye. Hope to see you again soon!\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------------------------------------------------------\u003cbr\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Frequently Asked Questions"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Q:** I can\u0027t find the txt file containing my saved tasks. \u003cbr\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**A:** You did not run the `cd ADDRESS_OF_JAR_FILE` command in the [Quick Start](#quick-start) section. \u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "Use the search bar on your computer to find a txt file called **taskList** to retrieve your saved tasks.\u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "### Command Summary"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**Action** | **Format, Examples**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "------------ | -------------"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**todo**|`todo DESCRIPTION` \u003cbr\u003eexample: `todo homework`"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**deadline**|`deadline DESCRIPTION /by DATE TIME` \u003cbr\u003eexample: `deadline homework /by 02/09/2020 2359`"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**event**|`event DESCRIPTION /at DATE TIME`\u003cbr\u003eexample: `event birthday /at 06/11/2011 1200`"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**list**|`list`"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**done**|`done NUMBER` \u003cbr\u003eexample: `done 1`"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**delete**|`delete NUMBER` \u003cbr\u003eexample: `delete 2`"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**save**|`save`"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**find**|`find PHRASE`\u003cbr\u003eexample: `find homework`"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**occur**|`occur DATE`\u003cbr\u003eexample: `occur 06/11/2011`"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "**exit**|`bye`"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 245,
      "-": 18
    }
  },
  {
    "path": "docs/_config.yml.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "markdown: GFM"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.storage.StorageHandler;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.parser.Parser.parseCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Main class for the Duke Program. Initializes peripheral class during"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * setup. Then runs program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private StorageHandler storageHandler;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Initialize storageHandler and ui classes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Duke(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        storageHandler \u003d new StorageHandler();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Runs the program in a loop until exit code is executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String input \u003d \"empty\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int isRunning \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        while(isRunning \u003d\u003d 1){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isRunning \u003d parseCommand(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Starts the Duke program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param args command prompt input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 45,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/common/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listInputs;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the constants required for displaying information to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String BYE \u003d \" \" + \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SAVED \u003d \" \" + \"Nice! I have saved your list.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String LIST_HEADER \u003d \" \"  + \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String DONE_HEADER \u003d \" \" + \"Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String SEARCH_HEADER \u003d \" \" + \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String OCCUR_HEADER \u003d \" \" + \"Tasks due on: \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String DEADLINE_FORMAT \u003d \" \" + \"Invalid deadline declaration\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"deadline {info} /by {dd/mm/yyyy} {hr:mn}\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EVENT_FORMAT \u003d \" \" + \"Invalid event declaration\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"event {info} /at {dd/mm/yyyy} {hr:mn}\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String OCCUR_FORMAT \u003d \" \" + \"Invalid occur declaration\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"occur {dd/mm/yyyy}\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String INVALID_INPUT_MAIN \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_DONE_INPUT \u003d \" \" + \"☹ OOPS!!! The description of a done cannot be empty.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_TODO_INPUT \u003d \" \" + \"☹ OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_DEADLINE_INPUT \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_EVENT_INPUT \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! The description of a event cannot be empty.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_DELETE_INPUT \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! The description of a delete cannot be empty.\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_FIND_INPUT \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! The description of a find cannot be empty.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String EMPTY_OCCUR_INPUT \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \" \" + \"☹ OOPS!!! The description of a occur cannot be empty.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String VALID_INDEX_RANGE \u003d"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            \"{valid index from 1 to \" + Integer.toString(listInputs.size()) + \"}\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static final String TASK_READ_FAIL \u003d \"Invalid task read.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns a message telling user that the command typed in cannot be empty."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param inputString the command the user has typed in."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a message telling user that the command typed in cannot be empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String emptyDescription(String inputString){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return \" ☹ OOPS!!! The description of a \" + inputString + \" cannot be empty.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 49
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.taskList.TaskListOperations;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the method required for deciding actions for Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Receives command from the user and decides on what action to take."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns an Integer (1 or 0) to tell Duke whether to continue."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Special condition for each commands done, todo, deadline, event, delete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Each command are required to have a space after the command to identify itself to not cause"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * conflict with other commands with similar names."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * For example, \"event\" command creates a event object and adds it to the list. However, if"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * required in the future to create a \"events\" command to return all events on the list, \"event\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * command would be triggered instead of \"events\" due to sequential code. A space would differentiate"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * commands of similar naming."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * A temporary check for these commands without spacing is implemented in case of conflict with"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * marking rubric or algorithm."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return returns returnValue, if 0 tells Duke to shut down."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static int parseCommand(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int returnValue \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.BYE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            returnValue \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(\"list\")){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"done \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.setTaskDone(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(\"save\") \u003d\u003d true) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.saveTasks();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.SAVED);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"todo \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createTodo(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"deadline \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createDeadline(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"event \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createEvent(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"delete \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.deleteTask(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"find \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.findTask(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"occur \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.occuranceTask(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.equals(\"done\") || input.equals(\"todo\") ||"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                input.equals(\"deadline\") || input.equals(\"event\") ||"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                input.equals(\"delete\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.emptyDescription(input));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.INVALID_INPUT_MAIN);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 61
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeStorageDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.taskList.TaskListOperations;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.ui.UserInterface.isPrintMessageEnabled;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.ui.UserInterface.isLoading;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listInputs;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listPath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.createNewFile;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods required for decoding data from the txt file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class DukeStorageDecoder {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Sets Duke into decoding mode and runs decoder."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void getList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isPrintMessageEnabled \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isLoading \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            fileToList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isPrintMessageEnabled \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isLoading \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Reads Task from the txt file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws if no txt file found at listPath."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void fileToList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        File file \u003d new File(listPath); // create a File for the given file path"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Scanner output \u003d new Scanner(file); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        while (output.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            line \u003d output.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            addNewTask(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Decodes and adds Task from txt file to Duke\u0027s Task ArrayList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void addNewTask(String input) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(Messages.TASK_READ_FAIL);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String inputHeader \u003d input.substring(0, 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (inputHeader.equals(\"T \") \u003d\u003d true || inputHeader.equals(\"D \") \u003d\u003d true ||"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                inputHeader.equals(\"E \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            //Successful reading of data"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(Messages.TASK_READ_FAIL);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String inputDoneData \u003d input.substring(2, 8);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (inputDoneData.equals(\"| 1 | \") \u003d\u003d true || inputDoneData.equals(\"| 0 | \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            //Successful reading of data"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(Messages.TASK_READ_FAIL);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String inputData \u003d input.substring(8, input.length());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(\"T \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createTodo(\"todo \" + inputData);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"D \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createDeadline(\"deadline \" + inputData);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.startsWith(\"E \") \u003d\u003d true) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            TaskListOperations.createEvent(\"event \" + inputData);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(Messages.TASK_READ_FAIL);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (inputDoneData.contains(\"1\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            listInputs.get(listInputs.size() - 1).setIsDone(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 93
    }
  },
  {
    "path": "src/main/java/duke/storage/DukeStorageEncoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listInputs;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listPath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods required for encoding data into the txt file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class DukeStorageEncoder {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Writes Tasks\u0027 information into the txt file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IOException if invalid directory path given, listPath."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void writeListToFile() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (listInputs.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            writeEmptyFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        Task task \u003d listInputs.get(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String formatedTaskData;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        formatedTaskData \u003d formatTaskForTxt(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        FileWriter writer \u003d new FileWriter(listPath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.write(formatedTaskData); //Override existing file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 1; i \u003c listInputs.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            task \u003d listInputs.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formatedTaskData \u003d formatTaskForTxt(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            appendToFile(formatedTaskData);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Writes an empty txt file at listPath. Used to delete last"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Task from the txt file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IOException if invalid directory path given, listPath."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void writeEmptyFile() throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        FileWriter writer \u003d new FileWriter(listPath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.write(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Adds a Task\u0027s information into the txt file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IOException if no txt file found at listPath."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void appendToFile(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        FileWriter writer \u003d new FileWriter(listPath, true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.write(textToAppend);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Reformats a Task\u0027s information into a language that the Duke program"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * decoder can understand."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a String of the Task\u0027s reformatted information."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String formatTaskForTxt(Task task){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String outputString;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String taskData \u003d task.getData();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        boolean isTaskDone \u003d task.getIsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String taskDoneString;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (isTaskDone) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            taskDoneString \u003d \"1\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            taskDoneString \u003d \"0\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (task instanceof Event) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputString \u003d \"E | \" + taskDoneString + \" | \" + taskData"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \" /at \" + ((Event) task).getDateDue().toString()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \" \" + ((Event) task).getTimeDue().toString() + \"\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputString \u003d \"D | \" + taskDoneString + \" | \" + taskData +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    \" /by \" + ((Deadline) task).getDateDue().toString()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    + \" \" + ((Deadline) task).getTimeDue().toString() + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (task instanceof Todo){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputString \u003d \"T | \" + taskDoneString  + \" | \" + taskData + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            outputString \u003d \"? | \" + taskDoneString  + \" | \" + taskData + \"\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return outputString;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 99
    }
  },
  {
    "path": "src/main/java/duke/storage/StorageHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.DukeStorageDecoder.getList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and global variables required for setting up file I/O"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * functions of Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class StorageHandler {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Global variable listPath is the directory path of the txt file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * which the Task ArrayList data will be retrieved and stored to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Global variable listInputs is the current Task ArrayList stored in the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String listPath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static ArrayList\u003cTask\u003e listInputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates a directory path of the txt file which the Task ArrayList data"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * will be retrieved and stored to. Then retrieve Tasks from that txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public StorageHandler() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String currentWorkingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        listPath \u003d currentWorkingDir + \"/taskList.txt\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        getList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates a new txt file at the directory given by listPath variable."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws IOException if invalid directory path is given."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void createNewFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            File newFile \u003d new File(listPath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (newFile.createNewFile() \u003d\u003d true) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                //System.out.println(\"A new file created\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"An error occurred.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.println(\"listPath: \" + listPath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 52
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and variables required to store and transmit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * information of Deadline Tasks added to Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalDate dateDue;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private LocalTime timeDue;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Sets Deadline Task variables to respective states."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param stringInput a String input containing data about the Deadline Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param isDoneInput a Boolean input showing whether the Deadline Task is done or not."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dateInput a String input showing the time the Deadline Task is due."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Deadline(String stringInput, boolean isDoneInput, LocalDate dateInput, LocalTime timeInput) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        super(stringInput, isDoneInput);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        dateDue \u003d dateInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        timeDue \u003d timeInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns dateDue variable."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalDate getDateDue() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return dateDue;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public LocalTime getTimeDue() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return timeDue;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns Deadline object as a String of data."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return String containing information of Deadline object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String doneCharacter;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"1\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(\"[D][%s] %s (by: \", doneCharacter, getData()) +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                dateDue.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + timeDue.toString() + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 57
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and variables required to store and transmit"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * information of Event Tasks added to Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Event extends Deadline {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Sets Event Task variables to respective states."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param stringInput a String input containing data about the Event Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param isDoneInput a Boolean input showing whether the Event Task is done or not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dateInput a String input showing the time the Event Task is due."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Event(String stringInput, boolean isDoneInput, LocalDate dateInput, LocalTime timeInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        super(stringInput, isDoneInput, dateInput, timeInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns Deadline object as a String of data."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return String containing information of Event object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String doneCharacter;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"1\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"0\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(\"[E][%s] %s (at: \", doneCharacter, getData()) +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                getDateDue().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \"  + getTimeDue() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and variables required to store and transmit"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * information of Tasks added to Duke program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private String data;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    private static int numberOfTasks \u003d 0;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Sets Task variables to respective states."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param stringInput a String input containing data about the Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param isDoneInput a Boolean input showing whether the Task is done or not."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Task(String stringInput, boolean isDoneInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        data \u003d stringInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isDone \u003d isDoneInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        numberOfTasks++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        taskNumber \u003d numberOfTasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Sets isDone variable to the state of its input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param isDoneInput a Boolean input showing whether the Task is done or not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public void setIsDone(boolean isDoneInput) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isDone \u003d isDoneInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns isDone variable."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns data variable."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return taskNumber;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns Task object as a String of data."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return String containing information of Task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String doneCharacter;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"1\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"0\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(\"[%s] %s\", doneCharacter, data);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 68
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and variables required to store and transmit"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * information of Todo Tasks added to Duke program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Sets Todo Task variables to respective states."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param stringInput a String input containing data about the Todo Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param isDoneInput a Boolean input showing whether the Todo Task is done or not."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public Todo(String stringInput, boolean isDoneInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        super(stringInput, isDoneInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Returns Todo object as a String of data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return String containing information of Todo object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String doneCharacter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (getIsDone() \u003d\u003d true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"1\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            doneCharacter \u003d \"0\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return String.format(\"[T][%s] %s\", doneCharacter, getData());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 35
    }
  },
  {
    "path": "src/main/java/duke/taskList/TaskListOperations.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.taskList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.ui.UserInterface;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.storage.StorageHandler;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listInputs;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.DukeStorageEncoder.writeListToFile;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.ui.UserInterface.isLoading;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.ui.UserInterface.isPrintMessageEnabled;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods for adding, removing, checking as done and saving"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * tasks in Duke Program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class TaskListOperations {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Marks a task as done and saves changes into the txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void setTaskDone(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (listInputs.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(\" List is empty\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_DONE_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(input.substring(5, input.length())) - 1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (taskNumber \u003c listInputs.size() \u0026\u0026 taskNumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                listInputs.get(taskNumber).setIsDone(true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                UserInterface.printDoneStatement(listInputs.get(taskNumber));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                saveTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                UserInterface.printMessage(\" Invalid task number\\n \" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        \"done \" + Messages.VALID_INDEX_RANGE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(\" Invalid index for done operation\\n \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    \"done \" + Messages.VALID_INDEX_RANGE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates a Todo Task, adds it to the current list of Tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * and saves data into the txt file."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void createTodo(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_TODO_INPUT);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int indexAdded \u003d listInputs.size();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String todoData \u003d input.substring(5, input.length());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        listInputs.add(new Todo(todoData, false));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        UserInterface.printAddedTaskMessage(indexAdded);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates a Deadline Task, adds it to the current list of Tasks"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * and saves data into the txt file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void createDeadline(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003d\u003d 9) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_DEADLINE_INPUT);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        input \u003d input.substring(9, input.length());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(\"/by\") \u003d\u003d true || input.contains(\" /by \") \u003d\u003d false) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int indexAdded \u003d listInputs.size();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int separatorIndex \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d input.substring(0, separatorIndex);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String date \u003d input.substring(separatorIndex + 5, input.length());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] dateArray \u003d new String[2];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateArray \u003d date.split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalDate formattedDate;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime formattedTime;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formattedDate \u003d formatDate(dateArray[0]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formattedTime \u003d formatTime(dateArray[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (formattedDate \u003d\u003d null || formattedTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        listInputs.add(new Deadline(data, false, formattedDate, formattedTime));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        UserInterface.printAddedTaskMessage(indexAdded);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Creates a Event Task, adds it to the current list of Tasks"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * and saves data into the txt file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void createEvent(String input) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_EVENT_INPUT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        input \u003d input.substring(6, input.length());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.startsWith(\"/at\") \u003d\u003d true || input.contains(\" /at \") \u003d\u003d false) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EVENT_FORMAT);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int indexAdded \u003d listInputs.size();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int separatorIndex \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String data \u003d input.substring(0, separatorIndex);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String date \u003d input.substring(separatorIndex + 5, input.length());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] dateArray \u003d new String[2];"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        dateArray \u003d date.split(\" \", 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalDate formattedDate;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalTime formattedTime;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formattedDate \u003d formatDate(dateArray[0]);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formattedTime \u003d formatTime(dateArray[1]);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.DEADLINE_FORMAT);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (formattedDate \u003d\u003d null || formattedTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EVENT_FORMAT);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        listInputs.add(new Event(data, false, formattedDate, formattedTime));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        UserInterface.printAddedTaskMessage(indexAdded);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        saveTasks();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Saves the current list of Tasks into a txt file."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void saveTasks() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (isLoading \u003d\u003d true) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isPrintMessageEnabled \u003d false;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            writeListToFile();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            StorageHandler.createNewFile();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            saveTasks();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            isPrintMessageEnabled \u003d true;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Deletes a Task from the current list of Tasks"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * and saves changes into the txt file."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void deleteTask(String input) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (listInputs.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(\" List is empty\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.length() \u003d\u003d 7) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_DELETE_INPUT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(input.substring(7, input.length())) - 1;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (taskNumber \u003c listInputs.size() \u0026\u0026 taskNumber \u003e\u003d 0) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                String taskData \u003d listInputs.get(taskNumber).toString();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                listInputs.remove(taskNumber);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                UserInterface.printDeleteStatement(taskData);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                saveTasks();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                UserInterface.printMessage(\" Invalid task number\\n \" +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        \"delete \" + Messages.VALID_INDEX_RANGE);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(\" Invalid index for delete operation\\n \" +"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    \"delete \" + Messages.VALID_INDEX_RANGE);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Finds Tasks from the current list of Tasks that has the same"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * due date as the input time from the user. Then it prints out"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * the Tasks found."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void occuranceTask(String input){"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (input.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_OCCUR_INPUT);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        input \u003d input.substring(6, input.length());"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalDate targetDate \u003d formatDate(input);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cDeadline\u003e tasksOnTargetDate \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (targetDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.OCCUR_FORMAT);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c listInputs.size(); i++) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (listInputs.get(i) instanceof Deadline \u0026\u0026"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    ((Deadline) listInputs.get(i)).getDateDue().equals(targetDate)) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                tasksOnTargetDate.add((Deadline) listInputs.get(i));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        UserInterface.printOccurences(tasksOnTargetDate, targetDate);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Reformats a String data of date into a LocalDate variable."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dateInput String data to be reformatted into a LocalDate."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a LocalDate variable of the initial input String."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws DateTimeParseException if an invalid String of date is given."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static LocalDate formatDate(String dateInput) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] dateStringArray \u003d new String[3];"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        LocalDate formattedDate;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (isLoading \u003d\u003d true) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateStringArray[0] \u003d dateInput.substring(8,10);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateStringArray[1] \u003d dateInput.substring(5,7);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateStringArray[2] \u003d dateInput.substring(0,4);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dateInput.contains(\"-\")) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateStringArray \u003d formatDateUsingSeparator(dateInput, \"-\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (dateInput.contains(\"/\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            dateStringArray \u003d formatDateUsingSeparator(dateInput, \"/\");"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        dateInput \u003d dateStringArray[2] + \"-\" + dateStringArray[1] + \"-\" + dateStringArray[0];"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            formattedDate \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return formattedDate;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Separates a String data of time into Year, Month and Day."
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param dateInput String data to be separated into Year, Month and Day."
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param separator the type of separator used in dateInput."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @return a String array containing the Year, Month and Day of the input date."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws NumberFormatException if an invalid String of date is given."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static String[] formatDateUsingSeparator(String dateInput, String separator) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String[] dateString \u003d new String[3];"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int[] dateInt \u003d new int[3];"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        int indexSeparator;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c 2; i ++) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            indexSeparator \u003d dateInput.indexOf(separator);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if(indexSeparator \u003d\u003d -1){"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateString[0] \u003d dateInput.substring(0, indexSeparator);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateInt[0] \u003d Integer.parseInt(dateString[0]);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    if(dateInt[0] \u003c 0 \u0026\u0026 dateInt[0] \u003e 31){"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        return null;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }else if(dateInt[0] \u003e 0 \u0026\u0026 dateInt[0] \u003c 10"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                            \u0026\u0026 (dateString[0].equals(\"0\" + Integer.toString(dateInt[0])) \u003d\u003d false)){"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        dateString[0] \u003d \"0\" + dateString[0];"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateInput \u003d dateInput.substring(indexSeparator + 1, dateInput.length());"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateString[1] \u003d dateInput.substring(0, indexSeparator);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateInt[1] \u003d Integer.parseInt(dateString[1]);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    if (dateInt[1] \u003c 0 \u0026\u0026 dateInt[1] \u003e 12) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        return null;"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else if (dateInt[1] \u003e 0 \u0026\u0026 dateInt[1] \u003c 10"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                            \u0026\u0026 (dateString[1].equals(\"0\" + Integer.toString(dateInt[1])) \u003d\u003d false)){"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        dateString[1] \u003d \"0\" + dateString[1];"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateString[2] \u003d dateInput.substring(indexSeparator + 1, dateInput.length());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    dateInt[2] \u003d Integer.parseInt(dateString[2]);"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    if (dateInt[2] \u003c 0 \u0026\u0026 dateInt[2] \u003e 9999) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        return null;"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else if (dateInt[2] \u003e 0 \u0026\u0026 dateInt[2] \u003c 10"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                            \u0026\u0026 (dateString[2].equals(\"000\" + Integer.toString(dateInt[2])) \u003d\u003d false)){"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        dateString[2] \u003d \"000\" + dateString[2];"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else if (dateInt[2] \u003e\u003d 10 \u0026\u0026 dateInt[2] \u003c 100"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                            \u0026\u0026 (dateString[2].equals(\"00\" + Integer.toString(dateInt[2])) \u003d\u003d false)){"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        dateString[2] \u003d \"00\" + dateString[2];"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    } else if (dateInt[2] \u003e\u003d 100 \u0026\u0026 dateInt[2] \u003c 1000"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                            \u0026\u0026 (dateString[2].equals(\"0\" + Integer.toString(dateInt[2])) \u003d\u003d false)){"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                        dateString[2] \u003d \"0\" + dateString[2];"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        return dateString;"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Converts a String data of time into a LocalTime variable."
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param inputTime String data to be converted to LocalTime."
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws StringIndexOutOfBoundsException if an invalid String of time is given."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws DateTimeParseException if an invalid String of time is given."
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @throws NumberFormatException if an invalid String of time is given."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static LocalTime formatTime(String inputTime) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String timeHour \u003d inputTime.substring(0,2);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            String timeMin \u003d inputTime.substring(3,5);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            int intHour \u003d Integer.parseInt(timeHour);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            int intMin \u003d Integer.parseInt(timeMin);"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (intHour \u003c 0 \u0026\u0026 intHour \u003e\u003d 24) {"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            } else if (intMin \u003c 0 \u0026\u0026 intMin \u003e 59){"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return LocalTime.parse(timeHour + \":\" + timeMin);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Finds Tasks from the current list of Tasks that contains the same"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * String as the input time from the user. Then it prints out"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * the Tasks found."
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param input a command the user entered into console."
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void findTask(String input) {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (listInputs.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(\" List is empty\");"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        } else if (input.length() \u003d\u003d 5) {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            UserInterface.printMessage(Messages.EMPTY_FIND_INPUT);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String searchPhrase \u003d input.substring(5, input.length());"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c listInputs.size(); i++) {"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            if (listInputs.get(i).toString().contains(searchPhrase)) {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                matchingTasks.add(listInputs.get(i));"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        UserInterface.printSearchedTasks(matchingTasks);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 405
    }
  },
  {
    "path": "src/main/java/duke/ui/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import duke.common.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "import static duke.storage.StorageHandler.listInputs;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * Holds the methods and global variables required for displaying information"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " * about Duke program to the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Global variable isPrintMessageEnabled used to control printMessage function\u0027s"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * ability to print information to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Global variable isLoading used during setup of the Duke program to hide background"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * methods\u0027 messages from the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static boolean isPrintMessageEnabled;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static boolean isLoading;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Constructor. Sets UserInterface variables to respective states"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * and prints the logo of Duke program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public UserInterface() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isPrintMessageEnabled \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        isLoading \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints message to the user inside dash boxes unless isPrintMessageEnabled is"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * set to false."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param message a message the program displays for the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        if (isPrintMessageEnabled \u003d\u003d false) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out all Tasks found in the Task ArrayList of Duke program."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printList() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(Messages.LIST_HEADER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c listInputs.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.printf(\" %d.%s\\n\", i + 1, listInputs.get(i).toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out all Tasks in the Task ArrayList matching search String."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param matchingTasks a Task ArrayList containing Tasks matching searched String."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printSearchedTasks(ArrayList\u003cTask\u003e matchingTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(Messages.SEARCH_HEADER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.printf(\" %d.%s\\n\", i + 1, matchingTasks.get(i).toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out all Tasks in the Task ArrayList matching input date."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param tasksOnTargetDate a Task ArrayList containing Tasks matching input date."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * @param targetDate a LocalDate the user inputted in the command line."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printOccurences(ArrayList\u003cDeadline\u003e tasksOnTargetDate, LocalDate targetDate) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(Messages.OCCUR_HEADER + targetDate.toString());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksOnTargetDate.size(); i++) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "            System.out.printf(\" %d.%s\\n\", i + 1, tasksOnTargetDate.get(i).toString());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out a message to show Task was added successfully. Then prints out"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * a message showing how many Tasks are there in the Task ArrayList of Duke program."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printAddedTaskMessage(int taskIndex) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String outputMessage \u003d \" Got it. I\u0027ve added this task: \\n\" + \"   \" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                listInputs.get(taskIndex).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \" Now you have \" + Integer.toString(listInputs.size()) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printMessage(outputMessage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out a message to show Task was set as done successfully."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printDoneStatement(Task taskObject) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String outputMessage \u003d Messages.DONE_HEADER + \"\\n\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \"   \" + taskObject.toString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printMessage(outputMessage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out a message to show Task was deleted successfully. Then prints out"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * a message showing how many Tasks are there in the Task ArrayList of Duke program."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printDeleteStatement(String data) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String outputMessage \u003d \" Noted. I\u0027ve removed this task: \\n\" + \"   \" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                data + \"\\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                \" Now you have \" + Integer.toString(listInputs.size()) + \" tasks in the list.\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        printMessage(outputMessage);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     * Prints out an Ascii art for the Duke program and a greeting message."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    public static void printLogo() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\" Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\" What can I do for you?\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 140
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "todo "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "event "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "done "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java ..\\src\\main\\java\\duke\\task\\Task.java ..\\src\\main\\java\\duke\\task\\Todo.java ..\\src\\main\\java\\duke\\task\\Deadline.java ..\\src\\main\\java\\duke\\task\\Event.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TYS0n1"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "TYS0n1": 1,
      "-": 37
    }
  }
]
