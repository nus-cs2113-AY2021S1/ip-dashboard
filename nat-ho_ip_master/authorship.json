[
  {
    "path": "data/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "T | true | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "D | false | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "E | false | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "T | true | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "T | false | borrow new book"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.loadSaveData(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.printAllTasks(ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String fullCommand \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printTextWithDividerLine(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        new Duke(\"data/TaskList.txt\").run();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 52,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddDeadlineCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_DEADLINE \u003d \"Unless you get me another pint, I only recognize:\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.DEADLINE_FORMAT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String DEADLINE_DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddDeadlineCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] deadlineDetails \u003d userInput.split(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String deadlineName \u003d deadlineDetails[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String deadlineBy \u003d deadlineDetails[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            deadline \u003d new Deadline(deadlineName, deadlineBy);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_DEADLINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 40
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_EVENT\u003d \"Unless you download more ram, it\u0027s:\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.EVENT_FORMAT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String EVENT_DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddEventCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] eventDetails \u003d userInput.split(EVENT_DELIMITER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String eventName \u003d eventDetails[0];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String eventAt \u003d eventDetails[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            event \u003d new Event(eventName, eventAt);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_EVENT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(event);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 40
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddToDoCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ToDo  todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_TODO\u003d \"How about giving that task a name?\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.TODO_FORMAT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddToDoCommand(String todoName) throws DukeException{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if(todoName.isEmpty()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_TODO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        todo \u003d new ToDo(todoName);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(todo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 35
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 11
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_EXCEED_ONE_ARGUMENT \u003d \"How about you take it one at a time. Try:\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DELETE_FORMAT;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_DELETE_STRING_PROVIDED \u003d \"I\u0027d  prefer if you have me a number. Try:\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DELETE_FORMAT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_NONEXISTENT_TASK \u003d \"How about you tell me a task that actually exists?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] deleteDetails \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (deleteDetails.length !\u003d 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EXCEED_ONE_ARGUMENT);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            taskNumber \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_DELETE_STRING_PROVIDED);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Task taskToRemove \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteTaskSuccess(taskToRemove, tasks.getTaskCount());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_NONEXISTENT_TASK);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 49
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_DONE_STRING_PROVIDED \u003d \"I\u0027d  prefer if you gave me a number. Try:\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DONE_FORMAT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_NONEXISTENT_TASK \u003d \"How about you tell me a task that actually exists?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DoneCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            taskNumber \u003d Integer.parseInt(userInput) - 1;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_DONE_STRING_PROVIDED);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.getTask(taskNumber).setDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printCompleteTaskSuccess( tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_NONEXISTENT_TASK);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 40
    }
  },
  {
    "path": "src/main/java/duke/command/GoodbyeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class GoodbyeCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String MESSAGE_EMPTY_TASK_LIST \u003d \"Got nothing for you, stop asking me\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printTextWithDividerLine(MESSAGE_EMPTY_TASK_LIST);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.printAllTasks(ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 27
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_BLANK_INPUT \u003d \"Doing nothing is hard, you never know when you\u0027re done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_UNRECOGNISED_COMMAND \u003d \"If only I could add \\\"Read instruction \" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            \"manual\\\". Regardless, here it is: \" + System.lineSeparator() + Messages.ALL_FORMATS;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] userInputArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            userInputArray \u003d new String[]{userInputArray[0], \"\"};"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String command \u003d userInputArray[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String details \u003d userInputArray[1].trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        switch(command){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddToDoCommand(details);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddDeadlineCommand(details);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddEventCommand(details);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new DoneCommand(details);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new DeleteCommand(details);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case GoodbyeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new GoodbyeCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_BLANK_INPUT);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_UNRECOGNISED_COMMAND);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 43
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String MESSAGE_CREATED_FOLDER \u003d \"Data folder created\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String MESSAGE_CREATED_SAVE_FILE \u003d \"Save file TaskList.txt created\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String MESSAGE_CREATE_SAVE_FILE_ERROR \u003d \"Error occurred when creating \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String MESSAGE_LOAD_SUCCESS \u003d \"Tasks successfully loaded\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String MESSAGE_FILE_NOT_FOUND \u003d \"TaskList.txt cannot be found\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String MESSAGE_WRITE_FILE_ERROR \u003d \"Unable to write to file \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String BACKSLASH \u003d \"\\\\\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String FORWARD_SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String SAVE_FILE_DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_STATUS_COMPLETE \u003d \"true\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        filePath \u003d filePath.replace(FORWARD_SLASH, File.separator).replace(BACKSLASH, File.separator);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void loadSaveData(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(MESSAGE_CREATED_FOLDER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(MESSAGE_CREATED_SAVE_FILE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(Messages.DIVIDER_LINE + System.lineSeparator());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(MESSAGE_CREATE_SAVE_FILE_ERROR + file.getName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            readSavedData(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(MESSAGE_FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.getTaskCount() !\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(MESSAGE_LOAD_SUCCESS);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static void addToCurrentTasks(TaskList tasks, Task task, String status) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (status.equals(TASK_STATUS_COMPLETE)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static void readSavedData(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while(reader.hasNextLine()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] taskInfoArray \u003d data.split(TASK_IDENTIFIER_DELIMITER);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            switch(taskInfoArray[0].trim()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_TODO:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ToDo todo \u003d new ToDo(taskInfoArray[2]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, todo, taskInfoArray[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_DEADLINE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskInfoArray[2], taskInfoArray[3]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, deadline, taskInfoArray[1]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_EVENT:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Event event \u003d new Event(taskInfoArray[2], taskInfoArray[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, event, taskInfoArray[1]);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseTaskToSaveFormat(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        switch(task.getType()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return task.getType() + SAVE_FILE_DELIMITER + task.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + task.getDescription();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return d.getType() + SAVE_FILE_DELIMITER + d.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + d.getDescription() + SAVE_FILE_DELIMITER + d.getBy();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return e.getType() + SAVE_FILE_DELIMITER + e.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + e.getDescription() + SAVE_FILE_DELIMITER + e.getAt();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void saveTasksToTile(TaskList tasks) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                fileWriter.write(parseTaskToSaveFormat(task) + System.lineSeparator());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(MESSAGE_WRITE_FILE_ERROR + file.getName());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 121
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \"[D]\" + super.toString() + \" (By: \" + getBy() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \"[E]\" + super.toString() + \" (At: \" + getAt() + \")\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 23
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract char getType();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return getStatusIcon() + getDescription();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 35
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllTasks(UI ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Task task  : tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(tasks.indexOf(task)+1 + \". \" + task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static int getTaskCount() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 44
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 17
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    // Welcome and Goodbye messages"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DIVIDER_LINE \u003d \"____________________________________________\" +"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            \"_____________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DUKE_LOGO \u003d \"  _  _     ___    _____   _____    ___\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" | \\\\| |   /   \\\\  |_   _| |_   _|  / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" | .` |   | - |    | |     | |   | (_) |\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" |_|\\\\_|   |_|_|   _|_|_   _|_|_   \\\\___/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Top of the mornin\u0027 to ya! Name\u0027s Natto\" + System.lineSeparator()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"Need a pint, two, or somethin\u0027 else?\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"What, so everyone\u0027s supposed to sleep every night now?\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + \"You realize that nighttime makes up half of all time?\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    //Task messages"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"Added that one to the list: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Well aren\u0027t you Mr Productive! Checked it off for ya:\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"You\u0027ve removed the task but not my disappointment:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String TODO_FORMAT \u003d \"todo \u003ctodo information\u003e\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DEADLINE_FORMAT \u003d \"deadline \u003cdeadline name\u003e /by \u003cdeadline information\u003e\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EVENT_FORMAT \u003d \"event \u003cevent name\u003e /at \u003cevent information\u003e\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DONE_FORMAT \u003d \"done \u003ctask number\u003e\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_FORMAT \u003d \"delete \u003ctask number\u003e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ALL_FORMATS \u003d TODO_FORMAT + System.lineSeparator() + DEADLINE_FORMAT +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + EVENT_FORMAT + System.lineSeparator() + DONE_FORMAT + System.lineSeparator() +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            DELETE_FORMAT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 31
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printDividerLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(Messages.DIVIDER_LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printTextWithDividerLine (String ... messages) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.DUKE_LOGO, Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_ADD_TASK_SUCCESS + task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printCompleteTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_COMPLETE_TASK_SUCCESS, task.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  void printDeleteTaskSuccess(Task task, int taskCount) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String taskLeft \u003d \"You\u0027ve got \" + taskCount + \" more tasks to delete instead of complete\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_DELETE_TASK_SUCCESS, task.toString(), taskLeft);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllTaskFormat() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.TODO_FORMAT, Messages.DEADLINE_FORMAT,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Messages.EVENT_FORMAT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 56
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline nap"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event sleep"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done everything"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "-": 37
    }
  }
]
