[
  {
    "path": "data/TaskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "T | false | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "D | false | return book | 31/12/2020 0900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "E | false | project meeting | Zoom 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "T | false | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "D | false | finish homework | no idea :/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "D | false | cook dinner for family | 23/09/2020 1700"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 6
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Entry point of Duke application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Sets up the required objects."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param filePath save data filepath"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints welcome message and loads up the data from the storage file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.loadSaveData(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.printAllTasks(ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints goodbye message and exits."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printGoodbyeMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Reads the user command and executes it, until the user issues the exit command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void runLoopUntilExitCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                String fullCommand \u003d ui.readUserCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ui.printTextWithDividerLine(e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Runs the program until termination."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        runLoopUntilExitCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Main method of Duke"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        new Duke(\"data/TaskList.txt\").run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 81,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Adds a Deadline task into TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddDeadlineCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Deadline deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_DEADLINE \u003d \"Unless you get me another pint, I only recognize:\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.DEADLINE_FORMAT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String DEADLINE_DELIMITER \u003d \" /by \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String WRITE_FILE_ERROR \u003d \"Unable to save tasks to file\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command AddDeadlineCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param userInput deadline arguments provided by user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if wrong arguments were provided by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddDeadlineCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] deadlineDetails \u003d userInput.split(DEADLINE_DELIMITER);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String deadlineName \u003d deadlineDetails[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String deadlineBy \u003d deadlineDetails[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            deadline \u003d new Deadline(deadlineName, deadlineBy);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_DEADLINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 54
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Adds a Event task into TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private Event event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_EVENT\u003d \"Unless you download more ram, it\u0027s:\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.EVENT_FORMAT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String EVENT_DELIMITER \u003d \" /at \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String WRITE_FILE_ERROR \u003d \"Unable to save tasks to file\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command AddEventCommand."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param userInput event arguments provided by user"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if wrong arguments were provided by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddEventCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] eventDetails \u003d userInput.split(EVENT_DELIMITER);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String eventName \u003d eventDetails[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String eventAt \u003d eventDetails[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            event \u003d new Event(eventName, eventAt);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_EVENT);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 54
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Adds a Todo task into TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class AddToDoCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private ToDo  todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_ADD_TODO\u003d \"How about giving that task a name?\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.TODO_FORMAT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String WRITE_FILE_ERROR \u003d \"Unable to save tasks to file\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command AddToDoCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param todoName name of the task provided by user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if task name is not provided"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public AddToDoCommand(String todoName) throws DukeException{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if(todoName.isEmpty()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_ADD_TODO);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        todo \u003d new ToDo(todoName);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        ui.printAddTaskSuccess(todo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(WRITE_FILE_ERROR);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 49
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Represents an executable command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param tasks contains list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param ui UI object that manages information input and output to user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param storage storage functions"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if command causes an error/exception"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract void execute(TaskList tasks, UI ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Flag that checks if a command leads to Duke exiting after execution."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Boolean that returns true if exiting and false if not"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Deletes a task from TaskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_EXCEED_ONE_ARGUMENT \u003d \"How about you take it one at a time. Try:\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DELETE_FORMAT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_DELETE_STRING_PROVIDED \u003d \"I\u0027d  prefer if you have me a number. Try:\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DELETE_FORMAT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_NONEXISTENT_TASK \u003d \"How about you tell me a task that actually exists?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command DeleteCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param taskNumber task number provided by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if wrong arguments provided by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DeleteCommand(String taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] deleteDetails \u003d taskNumber.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (deleteDetails.length !\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_EXCEED_ONE_ARGUMENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            this.taskNumber \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_DELETE_STRING_PROVIDED);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Task taskToRemove \u003d tasks.getTask(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDeleteTaskSuccess(taskToRemove, tasks.getTaskCount());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_NONEXISTENT_TASK);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 58
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Marks a task from TaskList as completed"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_DONE_STRING_PROVIDED \u003d \"I\u0027d  prefer if you gave me a number. Try:\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + System.lineSeparator() + Messages.DONE_FORMAT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_NONEXISTENT_TASK \u003d \"How about you tell me a task that actually exists?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command DoneCommand."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param taskNumber task number provided by user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if wrong arguments provided by user"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DoneCommand(String taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            this.taskNumber \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_DONE_STRING_PROVIDED);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.getTask(taskNumber).setDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printCompleteTaskSuccess( tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_NONEXISTENT_TASK);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 49
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Finds tasks in TaskList with a keyword"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_FIND \u003d \"So you want me to find nothing? Try:\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.FIND_FORMAT;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String NO_MATCHING_TASKS \u003d \"Is your list actually that big you need to search? Try:\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + Messages.FIND_FORMAT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Constructor for command FindCommand"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param keyword String provided by user to find related tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException if keyword was not entered by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public FindCommand(String keyword) throws DukeException{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if(keyword.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(ERROR_MESSAGE_FIND);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String searchResult \u003d \"\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        int numberOfMatches \u003d 0;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.getTaskCount(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if(task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                searchResult +\u003d (++numberOfMatches) + (\". \") + (task.toString()) + System.lineSeparator();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if(numberOfMatches \u003e 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printFindTaskSuccess(searchResult.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(NO_MATCHING_TASKS);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 56
    }
  },
  {
    "path": "src/main/java/duke/command/GoodbyeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Prints goodbye message and exits Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class GoodbyeCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        storage.saveTasksToTile(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * List all tasks from TaskList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ListCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String MESSAGE_EMPTY_TASK_LIST \u003d \"Got nothing for you, stop asking me\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void execute(TaskList tasks, UI ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.getTaskCount() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printTextWithDividerLine(MESSAGE_EMPTY_TASK_LIST);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            tasks.printAllTasks(ui);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 29
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Exception for Duke inheriting from Exception class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a DukeException object to throw."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param errorMessage Error message to describe exception"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 15
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Parses user input for Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_BLANK_INPUT \u003d \"Doing nothing is hard, you never know when you\u0027re done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String ERROR_MESSAGE_UNRECOGNISED_COMMAND \u003d \"If only I could add \\\"Read instruction\\\".\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            \"Regardless, here it is: \" + System.lineSeparator() + System.lineSeparator() + Messages.ALL_FORMATS;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses user input into command for execution."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param userInput input entered by user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Command object based on the user input"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @throws DukeException unrecognised input or exception caused during command object creation"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static Command parse(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String[] userInputArray \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (userInputArray.length !\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            userInputArray \u003d new String[]{userInputArray[0], \"\"};"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String command \u003d userInputArray[0].trim().toLowerCase();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String details \u003d userInputArray[1].trim();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        switch(command){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddToDoCommand(details);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddDeadlineCommand(details);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new AddEventCommand(details);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new DoneCommand(details);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new DeleteCommand(details);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new FindCommand(details);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case GoodbyeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return new GoodbyeCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (command.equals(\"\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_BLANK_INPUT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                throw new DukeException(ERROR_MESSAGE_UNRECOGNISED_COMMAND);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses String into a LocalDateTime object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param dateTimeInput String input entered by user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Formatted LocalDateTime object of a task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static LocalDateTime parseStringToDateTime(String dateTimeInput) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return LocalDateTime.parse(dateTimeInput, formatter);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses LocalDateTime object into a formatted String."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param dateTime LocalDateTime object of a task"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Formatted String dateTime of a task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseDateTimeToString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        DateTimeFormatter DateTimeToStringFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mma\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return DateTimeToStringFormatter.format(dateTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 80
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.Messages;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * File operation including loading and saving data"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static File file;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String CREATED_FOLDER \u003d \"Data folder created\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String CREATED_SAVE_FILE \u003d \"Save file TaskList.txt created\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String CREATE_SAVE_FILE_ERROR \u003d \"Error occurred when creating \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String LOAD_SUCCESS \u003d \"Tasks successfully loaded\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public  static final String FILE_NOT_FOUND \u003d \"TaskList.txt cannot be found\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String WRITE_FILE_ERROR \u003d \"Unable to write task to file \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_CREATION_ERROR \u003d \"Error occurred when creating task from saved data\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String LOAD_DATA_ERROR \u003d \"Unable to load saved data\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String BACKSLASH \u003d \"\\\\\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String FORWARD_SLASH \u003d \"/\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_DELIMITER \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String SAVE_FILE_DELIMITER \u003d \" | \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_TODO \u003d \"T\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_DEADLINE \u003d \"D\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_IDENTIFIER_EVENT \u003d \"E\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String TASK_STATUS_COMPLETE \u003d \"true\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a Storage object with the save data filepath."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Saving and loading operation of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param filePath filepath of the save data"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        filePath \u003d filePath.replace(FORWARD_SLASH, File.separator).replace(BACKSLASH, File.separator);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates directory and save file if not found."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Loads data from save file into Duke during startup."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param tasks empty TaskList object used to store Tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void loadSaveData(TaskList tasks) throws DukeException{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(CREATED_FOLDER);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(CREATED_SAVE_FILE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(Messages.DIVIDER_LINE + System.lineSeparator());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(CREATE_SAVE_FILE_ERROR + file.getName());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            readSavedData(tasks, reader);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(FileNotFoundException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.getTaskCount() !\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(LOAD_SUCCESS);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Adds a saved task into TaskList."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param tasks TaskList object used to store Tasks"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task Task object to be added into the list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param status String containing completion status of the task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static void addToCurrentTasks(TaskList tasks, Task task, String status) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (status.equals(TASK_STATUS_COMPLETE)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses save data file and creates respective tasks."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param tasks TaskList object used to store Tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static void readSavedData(TaskList tasks, Scanner reader) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        while(reader.hasNextLine()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String data \u003d reader.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            String[] taskInfoArray \u003d data.split(TASK_IDENTIFIER_DELIMITER);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            switch(taskInfoArray[0].trim()) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_TODO:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                ToDo todo \u003d new ToDo(taskInfoArray[2]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, todo, taskInfoArray[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_DEADLINE:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Deadline deadline \u003d new Deadline(taskInfoArray[2], taskInfoArray[3]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, deadline, taskInfoArray[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            case TASK_IDENTIFIER_EVENT:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                Event event \u003d new Event(taskInfoArray[2], taskInfoArray[3]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                addToCurrentTasks(tasks, event, taskInfoArray[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses a Task into String to be saved."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task Task to be formatted"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String formatted String representation of a task"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static String parseTaskToSaveFormat(Task task) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        switch(task.getType()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return task.getType() + SAVE_FILE_DELIMITER + task.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + task.getDescription();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return d.getType() + SAVE_FILE_DELIMITER + d.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + d.getDescription() + SAVE_FILE_DELIMITER + d.getBy();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return e.getType() + SAVE_FILE_DELIMITER + e.isDone() + SAVE_FILE_DELIMITER"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                    + e.getDescription() + SAVE_FILE_DELIMITER + e.getAt();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Saves current list of tasks into save file."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param tasks TaskList containing all tasks currently in Duke"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static void saveTasksToTile(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                fileWriter.write(parseTaskToSaveFormat(task) + System.lineSeparator());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            throw new DukeException(WRITE_FILE_ERROR + file.getName());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 162
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Represents a Deadline task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Subclass from Task superclass"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private LocalDateTime datetime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static final String DEADLINE_FORMAT_REMINDER \u003d \"I can read date and time if you need me to: \" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() +  \"deadline \u003cdeadline name\u003e /by \u003cday/month/year hourMinutes\u003e\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a Deadline object with description and by."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Parses String by to a LocalDateTime object if possible"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param by deadline of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            datetime \u003d Parser.parseStringToDateTime(by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            // Stores deadline info as String instead of LocalDateTime"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(DEADLINE_FORMAT_REMINDER);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns deadline information."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String containing deadline information"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        //todo return localdatetime if possible"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027D\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"[D]\" + super.toString() + \" (By: \" + Parser.parseDateTimeToString(datetime) + \")\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            return \"[D]\" + super.toString() + \" (By: \" + by + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Represents an Event task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Subclass from task superclass"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates an Event object with description and at."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param at event information"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns event information."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String containing event information"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027E\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \"[E]\" + super.toString() + \" (At: \" + getAt() + \")\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 39
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Represents Superclass of all tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a Task object given a description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param description String description of a task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns status of task in the form of an icon."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return tick(unicode 2713) if completed and cross(unicode 2718) if incomplete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns description of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String containing description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Marks task as completed. Sets isDone to true."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns the completion status of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return true if completed, false if incomplete"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * An abstract method that returns the type identifier for the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Char that identifies the task type"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public abstract char getType();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Format task object into a string."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String representation of a task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return getStatusIcon() + getDescription();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 71
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.ui.UI;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Stores a list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates an empty TaskList object used to store tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Adds a Task object into the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task user created task object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Deletes a Task object from the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param taskNumber integer identifying a specific task in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns a specific Task object from the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param taskNumber integer identifying a specific task in the list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return Task object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns an iterable list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return ArrayList containing Task objects"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *Prints all Task objects stored in list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param ui UI object that manages information input and output to user"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAllTasks(UI ui) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        if (tasks.size() !\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            for (Task task  : tasks) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.out.println(tasks.indexOf(task)+1 + \". \" + task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            ui.printDividerLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Returns current count of Task objects in list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return integer containing size of list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public int getTaskCount() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 81
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Represents a ToDo task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Subclass from Task superclass"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a todo object with description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param description Description of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \u0027T\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Contains Duke\u0027s output response to user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    // Welcome and Goodbye messages"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DIVIDER_LINE \u003d \"____________________________________________\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            \"_____________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DUKE_LOGO \u003d \"  _  _     ___    _____   _____    ___\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" | \\\\| |   /   \\\\  |_   _| |_   _|  / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" | .` |   | - |    | |     | |   | (_) |\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \" |_|\\\\_|   |_|_|   _|_|_   _|_|_   \\\\___/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_WELCOME \u003d \"Top of the mornin\u0027 to ya! Name\u0027s Natto\" + System.lineSeparator()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            + \"Need a pint, two, or somethin\u0027 else?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_GOODBYE \u003d \"What, so everyone\u0027s supposed to sleep every night now?\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + \"You realize that nighttime makes up half of all time?\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    //Task messages"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"Added that one to the list: \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_COMPLETE_TASK_SUCCESS \u003d \"Well aren\u0027t you Mr Productive! Checked it off for ya:\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"You\u0027ve removed the task but not my disappointment:\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    //Command formats"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String TODO_FORMAT \u003d \"todo \u003ctodo information\u003e\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DEADLINE_FORMAT \u003d \"deadline \u003cdeadline name\u003e /by \u003cday/month/year hourMinutes\u003e\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + \"deadline \u003cdeadline name\u003e /by \u003cdeadline information\u003e\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String EVENT_FORMAT \u003d \"event \u003cevent name\u003e /at \u003cevent information\u003e\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DONE_FORMAT \u003d \"done \u003ctask number\u003e\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String DELETE_FORMAT \u003d \"delete \u003ctask number\u003e\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String FIND_FORMAT \u003d \"find \u003ckeyword\u003e\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public static final String ALL_FORMATS \u003d TODO_FORMAT + System.lineSeparator() + DEADLINE_FORMAT +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.lineSeparator() + EVENT_FORMAT + System.lineSeparator() + DONE_FORMAT + System.lineSeparator() +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            DELETE_FORMAT + System.lineSeparator() + FIND_FORMAT;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 37
    }
  },
  {
    "path": "src/main/java/duke/ui/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " * Text UI of Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Creates a UI object with a Scanner."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Reads input entered by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @return String containing user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints a divider line."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printDividerLine() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(Messages.DIVIDER_LINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints Duke response enclosed in divider lines."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param messages Single or multiple String responses"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printTextWithDividerLine (String ... messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "            System.out.println(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printDividerLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        System.out.println(System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints Duke logo and welcome message during startup."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.DUKE_LOGO, Messages.MESSAGE_WELCOME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints goodbye message during exit."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printGoodbyeMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_GOODBYE);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints success message after adding a task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task Task object that was added to Duke"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printAddTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_ADD_TASK_SUCCESS + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints success message after marking a task as completed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task Task object that was marked as done"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printCompleteTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_COMPLETE_TASK_SUCCESS, task.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints success message after deleting a task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param task Task object that was deleted from the list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param taskCount Integer containing number of remaining tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printDeleteTaskSuccess(Task task, int taskCount) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        String taskLeft \u003d \"You\u0027ve got \" + taskCount + \" more tasks to delete instead of complete\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(Messages.MESSAGE_DELETE_TASK_SUCCESS, task.toString(), taskLeft);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * Prints results of search if any matches were found."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     * @param searchResult String containing tasks matching to the keyword if any"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    public void printFindTaskSuccess(String searchResult) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "        printTextWithDividerLine(\"Sherlock Holmes at your service! It was the butler!\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "                System.lineSeparator() + \"Here are my findings: \" + System.lineSeparator() + searchResult);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 102
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nat-ho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline nap"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "event sleep"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done everything"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "if exist ACTUAL.TXT del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 3,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nat-ho"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exception/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nat-ho": 1,
      "-": 37
    }
  }
]
