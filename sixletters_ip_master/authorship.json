[
  {
    "path": "list.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "1 todo songhan"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "1 todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "1 deadline return book /at when"
      }
    ],
    "authorContributionMap": {
      "sixletters": 3
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used to add tasks into the TaskList inside duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Takes in the command once called and creates a new Task appropriately and adds it inside the TaskList."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the AddCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Executes the command of adding the Task into the TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Will throw DukeException if an invalid command has been inputted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Will throw ArrayIndexOutOfBounds or StringIndexOutOfBounds if there is no date or an invalid time has been inputted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Date and time for Event and Deadline must be preceded by /."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @throws DukeException If an invalid command or task is being input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If no date is given for deadline and/or event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @throws StringIndexOutOfBoundsException If no date is given for deadline and/or event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            switch (command.split(\" \")[0]) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            case \"todo\" :"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Task todoItem \u003d new Todo(command.split(\" \", 2)[1]); // temp is an instance of todos"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                tasks.add(todoItem);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                ui.showAdd(tasks,tasks.getTasks().indexOf(todoItem));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            case \"deadline\" :"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Task deadlineItem \u003d new Deadline(command.split(\" \", 2)[1]);// temp1 is an instance of Deadline"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                tasks.add(deadlineItem);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                ui.showAdd(tasks,tasks.getTasks().indexOf(deadlineItem));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            case \"event\" :"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                Task eventItem \u003d new Event(command.split(\" \", 2)[1]);// temp2 is an instance of Deadline"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                tasks.add(eventItem);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                ui.showAdd(tasks,tasks.getTasks().indexOf(eventItem));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            default :"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showError(\"I\u0027m sorry, I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException|StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showError(\"☹ OOPS!!! The description of a todo,event and deadline cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 59
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An abstract parent class of all the commands and functions available to the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "abstract class Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Abstract execute method to be implemented by each individual child of the command class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Method isExit that returns false that will be inherited by the rest of the command classes."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return false The default is false, unless overriden"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 24
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Represents a task with a deadline. For example \"Read book /by 20th june\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Contains A string with the name of the activity inherited from the Task class and deadLineTime of type String which is the time of the deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private String deadlineTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes and creates an instance of Deadline with the activity name and the deadline time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param activity the name and the deadline of the activity preceded by a /by. e.g., Read book /by 20th june."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Deadline(String activity) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.Activity \u003d activity.substring(0,activity.indexOf(\"/\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.deadlineTime \u003d activity.substring(activity.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns the deadline Time of the Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return deadLineTime A string which is the time of the deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getBy(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return deadlineTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns a String with the Listchecker, the name of the activity and the deadline Time e.g., [x] Harris (by:20th june)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return FinalString a String with the type of Task, the status of the task, the name of the task and the deadline of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String listChecker;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[x]\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String FinalString \u003d \"[D]\" + listChecker + \" \" + getActivity() + \"(by: \" + deadlineTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return FinalString;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 43
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used to delete tasks from the TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Takes in the command once called and deletes the specified Task at a specific index."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the DeleteCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Deletes a Task in the TaskList based on a specific Index."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * If Index does no exist in TaskList, ArrayIndexOutOfBoundsException is thrown and handled."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Prints the task that has been deleted as well as the number of items left in the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If an invalid index that is not in range is inputted."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if (Integer.parseInt(command.split(\" \")[1]) \u003c\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                ui.showDelete(tasks, Integer.parseInt(command.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                tasks.remove(Integer.parseInt(command.split(\" \")[1]) - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                ui.showDoesNotExist();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showError(\"There are no elements in the list\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 39
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used to declare tasks in Tasklist as Done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Takes in the command once called and changes the status of the Task at a specific Index as done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the DoneCommand."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user of type String."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Changes the status of a Task at a specified index to done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * If index is out of range, prints a message that tells the user the task being done does not exist."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * prints a done message followed by Task that has been done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (Integer.parseInt(command.split(\" \")[1]) \u003c\u003d tasks.getTasks().size()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            tasks.get(Integer.parseInt(command.split(\" \")[1]) - 1).doIt();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showDone(tasks,Integer.parseInt(command.split(\" \")[1]) - 1 );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showDoesNotExist();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Duke(String filePath){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "       }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        new Duke(\"list.txt\").run();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 33,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return \"Error Error!\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Represents a task with a time. For example \"Team meeting /at 20th june\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Contains A string with the name of the activity inherited from the Task class and eventTime of type String which is the time of the event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private String eventTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes and creates an instance of Event with the activity name and the Event Time."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param activity the name and the time of the activity preceded by a /at e.g., Team meeting /at 20th june."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Event(String activity) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.Activity \u003d activity.substring(0,activity.indexOf(\"/\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.eventTime \u003d activity.substring(activity.indexOf(\"/\") + 4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns the Event Time of the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return EvenTime A string which is the time of the Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getWhen(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns a String with the Listchecker, the name of the activity and the Event Time e.g., [x] Harris (at:20th june)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return FinalString a String with the type of Task, the status of the task, the name of the task and the Event Time of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String listChecker;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[x]\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String FinalString \u003d \"[E]\" + listChecker + \" \" + getActivity() + \"(at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return FinalString;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 41
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used exit the main loop and prints a goodbye message to the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Saves the Current TaskList in a file specified by the Storage class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the ExitCommand."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user of type String."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns and overrides the isExit in Command to return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Command used to exit the main loop by returning true for the method isExit()."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Saves the Tasks in TaskList in a specified file by using storage of Storage CLass."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Prints a goodbye message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        storage.store(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ui.showGoodBye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 39
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used to Find and search for tasks inside the TaskList"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Takes in the command once called and looks for Tasks that match the given word."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the FindCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user of type String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Finds and searches the TaskList for Taks that matches the word inputted by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * e.g. if \"find Book\" is being inputted, tasks with the word book inside the activity name will be printed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        command \u003d command.split(\" \",2)[1];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ArrayList\u003cTask\u003e foundItemsList \u003d new ArrayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        for(int i \u003d 0;i \u003c tasks.size();i++){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            if(tasks.get(i).getActivity().indexOf(command) \u003e -1){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                foundItemsList.add(tasks.getTasks().get(i));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ui.showFind(foundItemsList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 35
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * An extension of Command used to print all the tasks in the TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Initializes a newly created instance of the ListCommand"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param command  The command typed in by the user of type String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Prints the current Items in the TaskList, their status and their type by numerical order with the first one to be added as index 1."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param tasks  The Task-list for the command to be executed on."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param ui The ui of type UI that prints and interacts the intended messages."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @param storage The storage of type Storage that handles the storing of data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 25
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private static String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public static Command parse(String fullCommand){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        command \u003d fullCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else if(command.equals(\"list\")){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else if(command.split(\" \")[0].equals(\"delete\")){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else if (command.split(\" \")[0].equals(\"find\")){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 25
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        File f \u003d new File(\"List.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                String previousTasks \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                int isDoneIndicator \u003d Integer.parseInt(previousTasks.split(\" \", 2)[0]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                previousTasks \u003d previousTasks.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                switch (previousTasks.split(\" \")[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Task todoItem \u003d new Todo(previousTasks.split(\" \", 2)[1]); // temp is an instance of todos"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (isDoneIndicator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        todoItem.doIt();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    toDoList.add(todoItem);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Task deadlineItem \u003d new Deadline(previousTasks.split(\" \", 2)[1]);// temp1 is an instance of Deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (isDoneIndicator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        deadlineItem.doIt();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    toDoList.add(deadlineItem);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    Task eventItem \u003d new Event(previousTasks.split(\" \", 2)[1]);// temp2 is an instance of Deadline"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (isDoneIndicator \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        eventItem.doIt();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    toDoList.add(eventItem);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return toDoList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void store(TaskList Tasks){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            for (Task Element : Tasks.getTasks()) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                String activityDescription \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                if (Element instanceof Todo) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (Element.isDone()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"1 \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"0 \";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d \"todo \";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d Element.getActivity();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                } else if (Element instanceof Event) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (Element.isDone()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"1 \";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"0 \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d \"event \";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d Element.getActivity() + \" /by \" + ((Event) Element).getWhen();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                } else if (Element instanceof Deadline) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    if (Element.isDone()) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"1 \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                        activityDescription +\u003d \"0 \";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d \"deadline \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                    activityDescription +\u003d Element.getActivity() + \"/at \" + ((Deadline) Element).getBy();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                fw.write(activityDescription + System.lineSeparator());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Error, Disconnected\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 96
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Represents a Task with an Activity name e.g., Read Book and a boolean to dictate whether it has been done."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * It is an abstract class that cannot be instantiated."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    protected String Activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private boolean status \u003d false; // 0 represent undone: 1 represents done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Changes the done status of Task to true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void doIt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        status \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns the name of the Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return Actvity The name of the Task of type String."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String getActivity(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return Activity;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns a boolean that is the done status of the Task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return isDone The done status of the Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public boolean isDone(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns a String with the Listchecker and the name of the activity e.g., [x] Harris"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return FinalString the String with the name and the status of the Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String listChecker;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (status) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[x]\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String finalString \u003d listChecker + \" \" + getActivity();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return finalString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 48
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void remove(int index){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void add(Task newTask){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Represents an indefinate task. For example \"Team meeting\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": " * Contains A string with the name of the activity inherited from the Task class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public Todo(String activity) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        this.Activity \u003d activity;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * Returns a String with the Listchecker and the name of the activity e.g., [x] Harris"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     * @return FinalString the String with the name and the status of the Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        String listChecker;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[\\u2713]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            listChecker \u003d \"[x]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return \"[T]\" + listChecker + \" \" + getActivity();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 27
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sixletters"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sixletters"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Error loading file, a new file will be created\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                \" What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showError(String message){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showGoodBye(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showList(TaskList Tasks){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        int k \u003d 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        for (Task  Element: Tasks.getTasks()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(k + \".\" + Element.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            k++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showDelete(TaskList Tasks,int index){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"  \" + Tasks.get(index).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Now you have \" + (Tasks.size() - 1) + \" tasks in the list\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showDoesNotExist(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, that item does not exist\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showDone(TaskList tasks,int index){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(tasks.get(index).toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showAdd(TaskList tasks,int index){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index).toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sixletters"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    public void showFind(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        if(tasks.size() \u003e 0){"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            int k \u003d 1;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            for (Task  Element: tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                System.out.println(k + \".\" + Element.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sixletters"
        },
        "content": "                k++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sixletters"
        },
        "content": "            System.out.println(\"Sorry no such item exists in the current list\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sixletters"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sixletters"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sixletters"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sixletters": 67
    }
  }
]
