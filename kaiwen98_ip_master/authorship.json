[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static int charCount \u003d Constants.MAX_PARTITION_LINE_LEN;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static boolean isListCreated \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static ListTasks list \u003d null;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Packet packet \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] inputParams \u003d new String[Constants.MAX_ARRAY_LEN];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean continueQuery \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        UiManager.drawPartition();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        CommandHandler.handleCommand(Constants.Command.HELLO);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        while (continueQuery){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            CommandHandler.handleCommand(Constants.Command.PROMPT_INPUT);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d in.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            packet \u003d Parser.parseInput(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            switch (packet.getPacketType()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.BYE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                continueQuery \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.SHOW_LIST);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case\"commands\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // Flow through"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"command\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.SHOW_COMMANDS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"done\": ;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.MARK_TASK_DONE, packet);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.INSERT_TASK_TODO, packet);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.INSERT_TASK_EVENT, packet);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.INSERT_TASK_DEADLINE, packet);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            case \"remove\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                CommandHandler.handleCommand(Constants.Command.REMOVE_TASK, packet);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.INVALID_COMMAND);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "kaiwen98": 54
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class to handle command inputs by user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static ListTasks list \u003d new ListTasks();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Validates if the input supplies a description as needed by the command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param packet"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @throws DukeException.InvalidDescription"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void validatePayload(Packet packet) throws DukeException.InvalidDescription {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (packet.getPacketPayload() \u003d\u003d null){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new DukeException.InvalidDescription();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Validates if list is empty"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @throws DukeException.NoList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static void validateList() throws DukeException.NoList {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (list.getNumTasks() \u003d\u003d 0){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            throw new DukeException.NoList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Handles command and prints messages, if any onto console depending on input parameter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param command a string of a simple root word to represent a particular message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param packet an input parameter for the message to print, given the command requires further inputs."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void handleCommand(Constants.Command command, Packet packet){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String customErrorMessage \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        boolean isDrawPartition \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Constants.Error err \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch(command){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case HELLO:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d UiManager.MESSAGE_LOGO;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d UiManager.MESSAGE_HELLO;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d UiManager.MESSAGE_BYE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case ECHO:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d String.format(\"%s\\n\", packet.getPacketPayload());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case PROMPT_INPUT:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"\u003e\u003e\u003e \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            isDrawPartition \u003d false;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_DEADLINE:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            //Fall through"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            //Fall through"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_EVENT:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             *  The exception handling task is split into 2 types."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             *  The first exception type should be detected by the command handler; If the command needs a"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             *  description and the input does not supply any, we throw an exception here."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             *  The second exception type is unique to what the different variants of tasks want,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             *  so we encapsulate the task-unique exception handling within their own class."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "             */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            label: try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                validatePayload(packet);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                Task inputEvent \u003d generateTask(command, packet);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                err \u003d list.addTask(inputEvent);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (err !\u003d Constants.Error.NO_ERROR) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    break label;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output \u003d UiManager.getMessageTaskAdded(inputEvent);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output +\u003d UiManager.getMessageReportNumTasks(list);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (DukeException.InvalidDescription exception) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                customErrorMessage \u003d \"You have not entered a valid description!\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (err !\u003d Constants.Error.NO_ERROR ) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    DukeException.printErrorMessage(Constants.Error.TASK_NOT_CREATED);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case SHOW_LIST:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (list.getNumTasks() \u003d\u003d 0){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.NO_LIST);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output \u003d list.showAllTasks();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case REMOVE_TASK:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case MARK_TASK_DONE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                validatePayload(packet);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                validateList();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                int index \u003d Integer.parseInt(packet.getPacketPayload().trim()) - 1;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                err \u003d handleTaskCommands(list, command, index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                Task outputTask \u003d list.getTaskByIndex(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                output \u003d getMessageTaskCommands(command, outputTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (IndexOutOfBoundsException exception) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (list.getNumTasks() !\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    customErrorMessage \u003d \"Your list number ranges from 1 to\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    customErrorMessage +\u003d String.format(\" %d. Please check your input list number.\\n\", list.getNumTasks());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    customErrorMessage \u003d \"There is only 1 task in your list.\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (DukeException.InvalidDescription exception){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                customErrorMessage \u003d \"You have not entered a valid task number!\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (DukeException.NoList exception) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.NO_LIST);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (NumberFormatException exception){"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                customErrorMessage \u003d \"Non-numeric inputs are not acceptable.\\n\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (err !\u003d Constants.Error.NO_ERROR){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    DukeException.printErrorMessage(Constants.Error.TASK_COMMAND_FAIL);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case SHOW_COMMANDS:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d UiManager.MESSAGE_COMMAND_LIST;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            DukeException.printErrorMessage(Constants.Error.INVALID_COMMAND);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (isDrawPartition){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            UiManager.drawPartition();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void handleCommand(Constants.Command command){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        CommandHandler.handleCommand(command, null);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Since task removal and task completion record is given a generalised treatment in handleCommand(),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * We will use this function to output the corresponding status message."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param command command by user"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param outputTask task to be deleted/ marked as done"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static String getMessageTaskCommands(Constants.Command command, Task outputTask) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (command){"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case MARK_TASK_DONE:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return UiManager.getMessageTaskMarkAsDone(outputTask);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case REMOVE_TASK:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return UiManager.getMessageTaskRemove(outputTask);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Since all variants of tasks are given a generalised treatment in handleCommand(),"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * We will use this function to output the corresponding task to add to list."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param command command by user"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param packet packet that are supplying params and payload of data"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return task with corresponding type"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static Task generateTask(Constants.Command command, Packet packet){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_DEADLINE:"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return new Deadline(packet.getPacketPayload(), packet.getParamMap());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_EVENT:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return new Event(packet.getPacketPayload(), packet.getParamMap());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INSERT_TASK_TODO:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return new ToDo(packet.getPacketPayload());"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Handles commands that are specific to a particular task."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param list lists containing the tasks"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param command command input by user"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param index index of task to be deleted/ marked as done"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return error due to task commands failing if applicable"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private static Constants.Error handleTaskCommands(ListTasks list, Constants.Command command, int index){"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case MARK_TASK_DONE:"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return list.markTaskAsDone(index);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case REMOVE_TASK:"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return list.removeTask(index);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return Constants.Error.OTHER_ERROR;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 206
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Contains constants used in command, error, etc."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final int MAX_ARRAY_LEN \u003d 10;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final int MAX_PARTITION_LINE_LEN \u003d 60;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final int MAX_LIST_LEN \u003d 10;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public enum Error {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        WRONG_ARGUMENTS,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INVALID_COMMAND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        NO_LIST,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        NO_ERROR,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TASK_NOT_CREATED,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TASK_COMMAND_FAIL,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        OTHER_ERROR"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public enum Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        HELLO,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        BYE,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        ECHO,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        PROMPT_INPUT,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INSERT_TASK_DEADLINE,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INSERT_TASK_TODO,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        INSERT_TASK_EVENT,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SHOW_LIST,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SHOW_COMMANDS,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        MARK_TASK_DONE,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        REMOVE_TASK,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        SAVE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 35
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Handles exceptions with regards to input errors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    static class InvalidDescription extends Exception{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    static class NoList extends Exception{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    static class TaskCreateFail extends Exception{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printErrorMessage(Constants.Error error, String customErrorMessage){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        customErrorMessage \u003d customErrorMessage.equals(\"\")? \"\" : \"\\t[NOTE]: \"+ customErrorMessage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch(error){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case NO_LIST:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"No list exists yet. Begin by adding some tasks!\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case WRONG_ARGUMENTS:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"Wrong arguments supplied. Please enter \\\"command\\\" to check acceptable arguments.\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"Command not recognised. Please enter \\\"command\\\" for command list!\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case TASK_NOT_CREATED:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"Due to error in input, the task is not added. Try again.\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case TASK_COMMAND_FAIL:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"Due to error in input, the task command failed. Try again. \\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case NO_ERROR:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Fall through"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.print(output + customErrorMessage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void printErrorMessage(Constants.Error error){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        printErrorMessage(error, \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 44
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class to parse inputs and classify the various segments into relevant data types and structures."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Process input string, tokenising it by a space seperator and removing trailing spaces per token."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param input Input string from users"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return A packet instance with different categories of information sorted out."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static Packet parseInput(String input){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String regex \u003d \"(\\\\s+)(/\\\\w+)(\\\\s+)\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(regex);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Matcher matcher \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // A String buffer is used as placeholder for extracted string fragments from parsing input string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] buffer \u003d new String[]{\"\", \"\", \"\", \"\"};"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Packet packet \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        input +\u003d \" /end \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // Extract command type"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        buffer[0] \u003d input.substring(0, input.indexOf(\" \")).toLowerCase();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // Extract task name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        buffer[1] \u003d (input.substring(input.indexOf(\" \"), input.indexOf(\" /\", 1))).replace(\" \", \" \").trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // Initialize packet with known parameters: command and command payload"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        packet \u003d new Packet(buffer[0]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        packet.setPacketPayload(buffer[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        // Implemented in case future commands with multiple param types are to be implemented"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d input.substring(input.indexOf(\" /\")).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            if (input.equals(\"/end\")) break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Extract param type"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer[2] \u003d input.substring(input.indexOf(\"/\"), input.indexOf(\" \")).toLowerCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Remove param type from input string"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d (input.replaceFirst(\"(/\\\\w+)(\\\\s+)\", \"\\0\")).trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            input \u003d \" \".concat(input).concat(\" \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            // Extract param name"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            matcher \u003d pattern.matcher(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            matcher.find();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            buffer[3] \u003d (input.substring(0, matcher.start())).trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            packet.addParamToMap(buffer[2], buffer[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } while (true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return packet;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 50
    }
  },
  {
    "path": "src/main/java/duke/dukehelper/UiManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class handling all possible console outputs."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.dukehelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class UiManager {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String MESSAGE_LOGO \u003d \"Hello from\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"ROFL:ROFL:ROFL:ROFL:ROFL:ROFL\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"..........___|___.........\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"...L..../.......[`\\\\........\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"..LOL\u003d\u003d\u003d........[__|.......\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"...L....\\\\..........|.......\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \".........\\\\_________/.......\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"...........|...|...........\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"..........————————/........\\n\\n\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String MESSAGE_HELLO \u003d \"Hello! I\u0027m Duke.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\nType \\\"command\\\" to check available commands to try out!\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static final String MESSAGE_COMMAND_LIST \u003d \"\\nThese are implemented commands that you can use.\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n1. bye\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Exit the program\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n2. list\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Show full list of appended tasks\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n3. commands\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Show full list of commands\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n4. done \u003cinteger\u003e\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Mark a task by number \u003cinteger\u003e as done.\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"   @ \u003cinteger\u003e:\\t Task number on the list. Out-of-bounds and negative inputs are not allowed.\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n5. todo \u003cstring\u003e\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Will be interpreted as input tasks. Input task will then be added to the list.\\n \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Tasks added this way are assumed to not be done and recorded accordingly.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n6. event \u003cstring\u003e \u003cparameter type\u003e \u003cparameter 1\u003e \u003cparameter 2\u003e\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\tAdd a task which is happening in the future with specific date and time\\n \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t@ \u003cstring\u003e:\\t Task name.\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t@ \u003cparameter type\u003e:\\t /at\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t\\t# \u003cparameter 1\u003e:\\t Date\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t\\t# \u003cparameter 2\u003e:\\t Time from start to end, no spaces\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n7. deadline \u003cstring\u003e \u003cparameter type\u003e \u003cparameter 1\u003e\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\tAdd a task with a specific deadline\\n \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t@ \u003cstring\u003e:\\t Task name.\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t@ \u003cparameter type\u003e:\\t /by\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t\\t# \u003cparameter 1\u003e:\\t Date w/o time\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\n8. remove \u003cinteger\u003e\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"\\t Remove task by number \u003cinteger\u003e from list.\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            + \"   @ \u003cinteger\u003e:\\t Task number on the list. Out-of-bounds and negative inputs are not allowed.\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getMessageTaskAdded(Task task){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Got it! I\u0027ve added this task:\\n  %s\\n\", task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getMessageReportNumTasks(ListTasks list){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        char isS \u003d list.getNumTasks() \u003e 1? \u0027s\u0027:0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Now, you have %d task%c in the list.\\n\", list.getNumTasks(),isS);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getMessageTaskMarkAsDone(Task outputTask){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\\n\", outputTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static String getMessageTaskRemove(Task outputTask){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"Noted! I\u0027ve removed this task:\\n  %s\\n\", outputTask);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static void drawPartition(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String partitionLine \u003d new String(new char[Constants.MAX_PARTITION_LINE_LEN]).replace(\"\\0\", \"_\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(partitionLine);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 76
    }
  },
  {
    "path": "src/main/java/duke/taskhelper/ListTasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class to collate all the tasks added."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.taskhelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ListTasks {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private int numTasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Non-parameterized class constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ListTasks(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.numTasks \u003d 0;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Retrieves task instance by index on the task array."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param index Number on the task array"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return Corresponding task instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Task getTaskByIndex(int index){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public int getNumTasks(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.numTasks;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Append new tasks into the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param newTask Task that is created beforehand via a separate process."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error addTask(Task newTask){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (newTask.error !\u003d Constants.Error.NO_ERROR){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return newTask.error;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.tasks.add(newTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.numTasks++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Add task to list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param newTaskParam Task name, if the task is to be created by its name, then which it is automatically assumed to be an uncompleted task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return Error code"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error addTask(String newTaskParam){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return addTask(new Task(newTaskParam));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Mark a specific task as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param taskIndex index of the task on the task array."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return Error code"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error markTaskAsDone(int taskIndex){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (taskIndex \u003c 0 || taskIndex \u003e this.numTasks -1){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.tasks.get(taskIndex).setIsDone(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Removes task from list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param taskIndex index of task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return error where applicable"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error removeTask(int taskIndex){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.numTasks--;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * Prints the contents of the list, displaying also its number and whether it is completed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return String representing the contents of the list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String showAllTasks(){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        for (int i \u003d 0; i \u003c this.numTasks; i++){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            output +\u003d String.format(\"%d.%s\\n\", i+1, this.tasks.get(i));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 92
    }
  },
  {
    "path": "src/main/java/duke/taskhelper/Packet.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Organises data from input string into distinct data types and structure."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * For scalability purposes, a hash table is implemented to map param type to its corresponding params."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.taskhelper;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Packet {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String packetType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String packetPayload;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private Hashtable paramMap;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Constructors"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Packet(String taskType, String taskName){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.packetType \u003d taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.packetPayload \u003d taskName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap \u003d new Hashtable();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Packet(String taskType){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this(taskType, null);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param type refers to /.* (eg. /a)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Param refers to string following the param type"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getParam(String paramType){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!paramMap.containsKey(paramType)){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return (String) paramMap.get(paramType);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Set getParamTypes() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return paramMap.keySet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getPacketType(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.packetType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getPacketPayload(){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return this.packetPayload;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Hashtable getParamMap(){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return (Hashtable)this.paramMap.clone();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setPacketPayload(String payload){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.packetPayload \u003d (payload.equals(\"\") ? null : payload);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error addParamToMap(String paramType, String paramString){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap.put(paramType, paramString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 52
    }
  },
  {
    "path": "src/main/java/duke/taskhelper/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Class to handle all possible exceptions due to task creation"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.taskhelper;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class TaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public static class IllegalParam extends Exception{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 9
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Sub-class of Task that takes in a date as deadline of task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.TaskException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Deadline(String taskName, Hashtable paramMap){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(taskName, false, paramMap);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.taskType \u003d Task.TaskType.DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.processParamMap();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Constants.Error handleParams(String paramType) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String token \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch(paramType){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"/by\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (((String) this.paramMap.get(paramType)).length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    throw new TaskException.IllegalParam();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token \u003d (String) this.paramMap.get(paramType);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                this.deadline \u003d token;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                this.taskMessage[0] \u003d String.format(\"(by: %s)\", this.deadline);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (TaskException.IllegalParam exception){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String customErrorMessage \u003d String.format(\"Param %s is expecting 1 string argument: \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        + \"Deadline date. Check your input.\\n\", paramType);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"/sorry\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            super.taskMessage[1] \u003d \"\u003c Sorry, the code is very extra. I\u0027m just trying to learn java. \u003e\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String customErrorMessage \u003d String.format(\"The parameter type %s is not implemented.\\n\", paramType);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 52
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * A subclass of Task that takes in date and time when the event happens"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.taskhelper.TaskException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    private String test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Event(String taskName, Hashtable paramMap){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(taskName, false, paramMap);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.processParamMap();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Checks for param type and corresponding param, and returns error if"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // given param is not recognised."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Constants.Error handleParams(String paramType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String[] token \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        switch(paramType){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"/at\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (((String) this.paramMap.get(paramType)).length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    throw new TaskException.IllegalParam();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                token \u003d ((String) this.paramMap.get(paramType)).split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                this.date \u003d token[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                this.time \u003d token[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                super.taskMessage[0] \u003d String.format(\"(at: %s %s)\", this.date, this.time);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException | TaskException.IllegalParam exception){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                String customErrorMessage \u003d String.format(\"Param %s is expecting 2 string arguments: \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                        + \"Date and Time. Check your input.\\n\", paramType);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                return Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        case \"/sorry\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            super.taskMessage[1] \u003d \"\u003c Sorry, the code is very extra. I\u0027m just trying to learn java. \u003e\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            String customErrorMessage \u003d String.format(\"The parameter type %s is not implemented.\\n\", paramType);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Task class to encapsulate its features and methods."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Acts as super class to ToDo, Event and Deadline classes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Hashtable;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected IsDone isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Hashtable paramMap;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected String[] taskMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Constants.Error error;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    enum TaskType {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TODO(\"[T]\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        DEADLINE(\"[D]\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        EVENT(\"[E]\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        private String literal;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        TaskType(String literal){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.literal \u003d literal;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String toString(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return this.literal;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    enum IsDone {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        DONE(\"[✓]\", true),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        NOT_DONE(\"[✗]\", false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        private String literal;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        private boolean bool;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        IsDone(String literal, boolean bool){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.literal \u003d literal;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.bool \u003d bool;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public String toString(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return this.literal;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        public boolean toBoolean(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            return bool;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // Constructor"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Task(String taskName, boolean isDone, Hashtable paramMap){"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.setIsDone(isDone);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.error \u003d Constants.Error.WRONG_ARGUMENTS;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.taskMessage \u003d new String[Constants.MAX_ARRAY_LEN];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        Arrays.fill(this.taskMessage, \"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (paramMap !\u003d null){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            this.setParamMap(paramMap);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Task(String taskName){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this(taskName, false, null);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public Set getParamTypes(){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return paramMap.keySet();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String getTypeMessage(){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.join(\" \", this.taskMessage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setIsDone(boolean isDone){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.isDone \u003d (isDone) ? IsDone.DONE : IsDone.NOT_DONE;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public void setParamMap(Hashtable paramMap){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap \u003d new Hashtable();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.paramMap \u003d (Hashtable) paramMap.clone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * For each param type in the hash table (Param Map), task to handle the contents accordingly with a corresponding action."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected void processParamMap() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        String customErrorMessage \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        if (!this.paramMap.isEmpty()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            for (Object paramType : this.getParamTypes()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                // If there is at least one valid param type and param to process, no need to dismiss the entire task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                if (this.handleParams((String) paramType) \u003d\u003d Constants.Error.NO_ERROR) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                    this.error \u003d Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            customErrorMessage \u003d \"This command expects a param type-param input, eg. /by Monday etc.\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "            DukeException.printErrorMessage(Constants.Error.WRONG_ARGUMENTS, customErrorMessage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * To be overridden by the variants of tasks, depending on how they should handle the param type given."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @param ParamType"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    // To be overridden by subclasses based on the param types they can receive"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    protected Constants.Error handleParams(String ParamType) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        return String.format(\"%s%s %s %s\", this.taskType, this.isDone, this.taskName, this.getTypeMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 119
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " * Subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "import duke.dukehelper.Constants;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    public ToDo(String taskName){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        super.taskType \u003d Task.TaskType.TODO;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        this.error \u003d Constants.Error.NO_ERROR;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "        System.out.println(\"todo\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "todo hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "deadline walk the dog /by monday 2-6pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "todo goodbye"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "deadline walk the cat /at monday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "event party /at Monday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "event party /at Monday 6-9pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kaiwen98": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kaiwen98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "kaiwen98": 1
    }
  }
]
