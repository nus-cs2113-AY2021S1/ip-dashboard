[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    ____   ____    _____   _____   _    _ "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   |  __| |  _ \\  |_   _| |_   _| | |  | |"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   | |__  | | | |   | |     | |   | |__| |"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   |  __| | | | |   | |     | |   |  __  |"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   | |__  | |_| |  _| |_    | |   | |  | |"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   |____| |____/  |_____|   |_|   |_|  |_|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   Hello, I\u0027m Edith!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   I am a chatbot and I am here to assist you."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   What can I help you with?"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 10,
      "-": 20
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[1. Introduction](#intro)\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[2. Setting Up](#setup)\u003cbr\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[3. Features](#features)\u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[4. Usage](#usage)\u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[5. Command Summary](#summary)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## \u003ca name\u003d\"intro\"\u003e1. Introduction\u003c/a\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Edith is a command line based task manager. Mainly there are 3 classes of tasks (todo, deadline and event). Tasks can be marked as completed, deleted and searched for by inputting a keyword. The details of the tasks are also recorded and stored in a text file called Duke.txt."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## \u003ca name\u003d\"setup\"\u003e2. Setting Up\u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Please refer to the [setting up guide](https://github.com/R-Ramana/ip/blob/master/README.md) for detailed instructions to set up the project on IntelliJ."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## \u003ca name\u003d\"features\"\u003e3. Features\u003c/a\u003e "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### Add Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "As mentioned previously, there are 3 types of tasks:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`deadline`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`event`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`todo`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Add one task at a go. The `deadline` and `event` tasks need to have the time specified."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### List Task(s)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Displays a list of all existing tasks. The following information will be provided"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Task type:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`T` - todo"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`E` - event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`D` - deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Status:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "✓ - Task is marked as done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "✘ - Task is incomplete"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Task ID and description of task (includes the time for `deadline` and `event`)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### Delete Task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Delete one task at a time. Removes task from the local memory as well."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### Mark Task as Done"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Mark one task as completed at a time. All tasks can be marked as done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### Find Task(s)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Search for task(s) by entering a keyword."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### Exit Program"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Stops running the program."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## \u003ca name\u003d\"usage\"\u003e4. Usage\u003c/a\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `todo` - Add todo"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Adds a todo task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`todo TASK_DESCRIPTION`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`todo read Java coding standards`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[T][✘] read Java coding standards"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `event` - Add event"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Adds an event task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`event TASK_DESCRIPTION /at START_TIME`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`event CS2113 Tutorial /at Thursday 2-4pm`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[E][✘] CS2113 Tutorial (at: Thursday 2-4pm)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `deadline` - Add deadline"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Adds a deadline task."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`deadline TASK_DESCRIPTION /by END_TIME`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`deadline complete ip /by Friday`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "[D][✘] complete ip (by: Friday)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `list` - List all tasks"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Removes any specified task. The corresponding task ID must be specified. The task ID can be obtained by the `list` command."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " 1. [T][✘]  read Java coding standards"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " 2. [E][✘]  CS2113 Tutorial  (at: [Thursday 2-4pm])"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " 3. [D][✘]  complete ip  (by: [Friday])"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `delete` - Delete Task"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Removes any specified task. The corresponding task ID (e.g. 1, 2, 3...) must be specified. The task ID can be obtained by the `list` command."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`delete TASK_ID`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "  [E][✘]  CS2113 Tutorial  (at: [Thursday 2-4pm])"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `done` - Mark task as completed"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Marks any specified task as completed. The corresponding task ID (e.g. 1, 2, 3...) must be specified. The task ID can be obtained by the `list` command."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`done TASK_ID`"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "  Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "   [T][✓]  read Java coding standards"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Narrow the search for particular tasks. A keyword has to be entered."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Format:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`find KEYWORD`"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`find ip`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "  Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " 1. [D][✘]  complete ip  (by: [Friday])"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "### `exit` - Exit the program"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Application ends. User has successfully terminated the running of program."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " Bye. I hope I have helped you. See you soon!"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "```"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "## \u003ca name\u003d\"summary\"\u003e5. Command Summary\u003c/a\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Target Action | Example Code"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "------------  | -------------"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Add todo | `tdo read Java coding standards`"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Add event | `event CS2113 Tutorial /at Thursday 2-4pm`"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Add deadline | `deadline complete ip /by Friday`"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "List tasks | `list`"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Mark task as done | `done 2`"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Delete task | `delete 1`"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Find task | `find ip`"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "Exit program | `bye`"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 198,
      "-": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // @@author {R-Ramana}-reused"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Reused from https://stackoverflow.com/questions/4362786/getting-the-default-root-directory-in-java with minor modifications"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static final String ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static final String FILE_NAME \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static final String FILE_PATH \u003d Paths.get(ROOT, FILE_NAME).toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static final boolean FILE_EXISTS \u003d Files.exists(Path.of(FILE_PATH));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Checks if duke.txt exists and reads from the file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Otherwise program creates a new file called duke.txt"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Program runs until user inputs bye"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Otherwise user input is parsed and actions are executed accordingly with respect to the command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if (FILE_EXISTS) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            // if file exists, use the file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            storage.readFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            // else create a new file called duke.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            storage \u003d new Storage(FILE_NAME);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Prints opening message on startup"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                String fullCommand \u003d ui.readInput();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                ui.printHorizontalLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                Command command \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                command.execute(ui);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                isExit \u003d command.getIsExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                ExceptionMessage.printErrorMessage(e.getErrorMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 62,
      "-": 1
    }
  },
  {
    "path": "src/main/java/ip/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private final char command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a char for command (D for deadline and E for Event)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Sets the command, description and time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param command D, E to distinguish what type of task to add"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param duration Start Time if E and End Time if D"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public AddCommand(char command, String description, String duration) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a char for command (T for todo)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Sets the command and description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param command T to set it as a todo task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public AddCommand(char command, String description) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Based on command [T, D, E], add a todo, deadline or event (Refer to TaskManager Class)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Updates the duke.txt file (refer ti Storage Class)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints confirmation message that the task has been added"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @throws DukeException if invalid command"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Solution adapted from https://github.com/hughjazzman/ip/blob/master/src/main/java/ip/commands/AddCommand.java"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        switch(command){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            task \u003d TaskManager.addTodo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            Storage.writeToFile(task.getIsDone(), command, description);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            task \u003d TaskManager.addDeadline(description, duration);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            Storage.writeToFile(task.getIsDone(), command, description, duration);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            task \u003d TaskManager.addEvent(description, duration);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            Storage.writeToFile(task.getIsDone(), command, description, duration);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            throw new DukeException(\"Invalid command. Please try again!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ui.printAddTaskMessage(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 73
    }
  },
  {
    "path": "src/main/java/ip/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Child classes override this method."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Execute respective commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        throw new DukeException(\"Error encountered. Please try again\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Returns the status of isExit (only true if ExitCommand)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return isExit status"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 28
    }
  },
  {
    "path": "src/main/java/ip/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private final int num;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public DeleteCommand(int num) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Checks to ensure ID is within the bounds"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * If so, removes the task, updates the file (duke.txt) and prints out a confirmation message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            task \u003d TaskManager.deleteTask(num);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            Storage.removeLine(task.getDescription());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } catch (IndexOutOfBoundsException | IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printNoTaskIdMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Ui.printDeleteMessage(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 38
    }
  },
  {
    "path": "src/main/java/ip/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private final int taskId;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor to set Task ID"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param taskId Task ID"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public DoneCommand(int taskId) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.taskId \u003d taskId;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Checks to ensure ID is within the bounds"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * If so, it marks the task as completed, update the file (duke.txt) and prints out a confirmation message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Check that id is valid"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            task \u003d TaskManager.markAsDone(taskId);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printNoTaskIdMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Storage.replaceDoneStatus(task.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Ui.printDoneMessage(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 42
    }
  },
  {
    "path": "src/main/java/ip/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints goodbye message if user inputs \"bye\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Ui.printFarewellMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 20
    }
  },
  {
    "path": "src/main/java/ip/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.keyword \u003d keyword.toUpperCase();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Calls the method to filter tasks that contain a keyword and returns that newly narrowed ArrayList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints out the narrowed Task List"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Filters out to ensure no blank keyword is inputted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Ensure no blank keyword when finding for Tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if(keyword.isBlank()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printNoDescriptionExceptionMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d TaskManager.findTasks(keyword);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Ui.printFilterTaskMessage(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 37
    }
  },
  {
    "path": "src/main/java/ip/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private Task Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints list of all available tasks in the ArrayList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param ui User Interface Object"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void execute(Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ui.printListTasksMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 18
    }
  },
  {
    "path": "src/main/java/ip/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.commands.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method makes sense of user inputs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in the whole string and splits the entire input into the command word and description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Calls the respective commands to execute specific actions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param userInput User\u0027s input from the command line"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Command parseCommand(String userInput) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final String BYE_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Prevents empty inputs"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if(userInput.isBlank()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printNoCommandExceptionMessage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Isolate command word"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String[] userInputWords \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String command \u003d userInputWords[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        int taskId \u003d 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case LIST_COMMAND:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case TODO_COMMAND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new AddCommand(\u0027T\u0027, userInputWords[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case EVENT_COMMAND:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String[] eventInfo \u003d parseEvent(userInputWords[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new AddCommand(\u0027E\u0027, eventInfo[0], eventInfo[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case DEADLINE_COMMAND:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String[] deadlineInfo \u003d parseDeadline(userInputWords[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new AddCommand(\u0027D\u0027, deadlineInfo[0], deadlineInfo[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case DELETE_COMMAND:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            if(userInputWords.length \u003c 2) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                throw new DukeException(\"Enter a number. Cannot delete task.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                taskId \u003d getTaskId(userInputWords[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                return new DeleteCommand(taskId);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case DONE_COMMAND:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            if(userInputWords.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                throw new DukeException(\"Enter a number. Cannot mark task as done.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                taskId \u003d getTaskId(userInputWords[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                return new DoneCommand(taskId);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case FIND_COMMAND:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String keyword \u003d userInputWords[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        case BYE_COMMAND:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            throw new DukeException(\"Invalid Command! Please check for typos or try something else.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method makes sense of the description from the user input. Only used for event command."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Splits the description and start duration."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Returns a String[] containing the description and start time."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param userInput Part of user\u0027s input from the command line. Exclude the command word [description and duration]"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Description and Start Time"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // @@author {R-Ramana}-reused"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Reused from https://github.com/prachi2023/ip/blob/A-MoreOOP/src/main/java/duke/Parser.java with minor modifications"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static String[] parseEvent(String userInput) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String[] information \u003d userInput.split(\" /at \", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // ensure start time is stated"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if (!userInput.contains(\"at\")){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printNoDescriptionExceptionMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return information;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method makes sense of the description from the user input. Only used for deadline command."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Splits the description and end duration."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Returns a String[] containing the description and end time."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param userInput Part of user\u0027s input from the command line. Exclude the command word [description and duration]"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Description and End Time"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    // @@author R-Ramana-reused"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    // Reused from https://github.com/prachi2023/ip/blob/A-MoreOOP/src/main/java/duke/Parser.java with minor modifications"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String[] parseDeadline(String userInput) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] information \u003d userInput.split(\" /by \", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        // ensure end time is stated"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!userInput.contains(\"by\")){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            ExceptionMessage.printNoDescriptionExceptionMessage();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        return information;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "     * Takes in the String after the command word when done/delete command is entered."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "     * Converts String to an Integer type and returns the Integer value."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param taskNumber"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Task ID of the task to be deleted/marked as done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private static Integer getTaskId (String taskNumber) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        int taskId \u003d 0;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "            taskId \u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            ExceptionMessage.printNoTaskIdMessage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        return taskId;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 106,
      "-": 31
    }
  },
  {
    "path": "src/main/java/ip/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.ui.exception.ExceptionMessage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * Storage Class is where all methods related to files can be accessed from."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * File is accessed at teh beginning when Duke starts up and only for delete, done, add (e.g. deadline/event) commands"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static String fileName;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param fileName Name of file that is used for storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Storage.fileName \u003d fileName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method is called at the very beginning when Duke runs, if a file exists"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Reads inputs from the file line by line and adds the existing task and status."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Acts like a local storage drive"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // @@author {R-Ramana}-reused"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Reused from https://www.codejava.net/java-se/file-io/how-to-read-and-write-text-file-in-java with minor modifications"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void readFile() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            FileReader file \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                String[] fileLines \u003d line.split(\"\\\\| \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                String taskType \u003d fileLines[0].strip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                String doneStatus \u003d fileLines[1].strip();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    task \u003d TaskManager.addTodo(fileLines[2]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    task \u003d TaskManager.addDeadline(fileLines[2], fileLines[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    task \u003d TaskManager.addEvent(fileLines[2], fileLines[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    throw new DukeException(\"Cannot read file\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                if (doneStatus.contains(\"Y\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } catch (IOException | DukeException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method is called when user adds a new task"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method takes in the status, description, type, and time of the task to be added."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method appends new lines to the existing file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Outputs in the form of TASK_TYPE (T/E/D) | STATUS (Y/N) | DESCRIPTION | DURATION"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * e.g T | Y | Read Book"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * e.g E | N | Tutorial | Today 2-4pm"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param isDone Completed Status of task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param command Type of task to be added (e.g deadline, event)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Description of the task to be added"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param duration Takes in vargs parameter (only applicable for deadline and event) of the end/start time"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // @@author {R-Ramana}-reused"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Reused from https://www.codejava.net/java-se/file-io/how-to-read-and-write-text-file-in-java with minor modifications"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void writeToFile(Boolean isDone, char command, String description, String... duration) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            FileWriter writer \u003d new FileWriter(fileName, true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            char isDoneStatus;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            if(isDone) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                isDoneStatus \u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                isDoneStatus \u003d \u0027N\u0027;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String delimiter \u003d \" | \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            if (command \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                bufferedWriter.write(command + delimiter + isDoneStatus + delimiter + description);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } else if (command \u003d\u003d \u0027E\u0027 || command \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                bufferedWriter.write(command + delimiter + isDoneStatus + delimiter + description + delimiter + Arrays.toString(duration));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method is called when user requests to mark a particular task as done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method takes in the description of the task to be marked as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * duke.txt file is read line by line and is parsed into StringBuffer"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Replaces the status of the task found using the description"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Overwrites duke.txt"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description  Description of the task to be marked as done."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Solution adapted from"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // https://stackoverflow.com/questions/20039980/java-replace-line-in-text-filehttps://stackoverflow.com/questions/20039980/java-replace-line-in-text-file with minor modifications"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void replaceDoneStatus(String description) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(fileName));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            // input the file content from duke.txt to StringBuffer so that the done status can be replaced"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                inputBuffer.append(line);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            String inputStr \u003d inputBuffer.toString();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            inputStr \u003d inputStr.replace(\"| N | \" + description, \"| Y | \" + description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            // write the new string with the replaced line on the duke.txt file"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            FileWriter writer \u003d new FileWriter(fileName);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            bufferedWriter.write(inputStr);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            ExceptionMessage.printErrorMessage(\"Cannot read file.\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method is called when user requests to delete a particular task"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Method takes in the description of the task to be deleted."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Creates a new temporary file called temp.txt"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Reads the lines from duke.txt, and copies it over to temp.txt"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * If the line contains the description it replaces it with an empty String."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Deletes duke.txt and renames temp.txt to duke.txt"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description  Description of the task to be deleted"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Solution adapted from"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // https://stackoverflow.com/questions/45211060/how-to-delete-or-remove-a-specific-line-from-a-text-filehttps://stackoverflow.com/questions/45211060/how-to-delete-or-remove-a-specific-line-from-a-text-file"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void removeLine(String description) throws IOException{"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        File tempFile \u003d new File(\"temp.txt\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        BufferedWriter bufferedWriter \u003d new BufferedWriter(new FileWriter(tempFile));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        FileReader file \u003d new FileReader(fileName);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(file);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String currentLine;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        while((currentLine \u003d bufferedReader.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            if(currentLine.trim().contains(description)){"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                currentLine \u003d \"\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                bufferedWriter.write(currentLine);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                bufferedWriter.write(currentLine + System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        bufferedWriter.close();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        bufferedReader.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // Solution adapted from"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        // https://www.w3schools.com/java/java_files_delete.asphttps://www.w3schools.com/java/java_files_delete.asp"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        File renameFile \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if (renameFile.delete()) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            System.out.println(\"Deleted the file: \" + renameFile.getName());"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        boolean rename \u003d tempFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if(rename) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            System.out.println(\"Created and updated the file: \" + renameFile.getName());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 212
    }
  },
  {
    "path": "src/main/java/ip/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor method"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Sets the description (Extended from Task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param deadline Sets the deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Converts details to a string and returns the details"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Details of Deadline (Description and End Time)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return \" [D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 27
    }
  },
  {
    "path": "src/main/java/ip/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    protected String startTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor method"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Sets the description (Extended from Task)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param startTime Sets the start time for the event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Event(String description, String startTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Converts details to a string and returns the details"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Details of Deadline (Description and Start Time)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return \" [E]\" + super.toString() + \" (at: \" + startTime + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 27
    }
  },
  {
    "path": "src/main/java/ip/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    // Yes and No character representation for isDone status"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public final static String IS_DONE_YES \u003d \"[Y]\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public final static String IS_DONE_NO \u003d \"[N]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Sets description of task and the status of task completion to incomplete (isDone \u003d false)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Sets the description for the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * isDone \u003d true (task is completed)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * isDone \u003d false (task is incomplete)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return completed status of task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Sets isDone \u003d true (task is completed)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return a String representation of tick/cross"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return (isDone ? IS_DONE_YES : IS_DONE_NO);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Converts details to a string and returns the details"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Details of Task (isDone Status + Description + Duration [if any])"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 65
    }
  },
  {
    "path": "src/main/java/ip/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Total number of tasks in the task ArrayList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static int getTasksCount() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a Task parameter to add it to the ArrayList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static Task addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in an integer representing the ID of a task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Removes task from the ArrayList and returns the deleted task parameter"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param id task ID"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Task deleteTask(int id) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Task task \u003d tasks.get(id-1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        tasks.remove(id-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints out all the tasks currently in the ArrayList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void listTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            System.out.println(\" \" + (i+1) + \".\" + tasks.get(i).toString() );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in an integer representing the ID of a task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Marks task as completed and returns the deleted task parameter"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param id task ID"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Task markAsDone(int id) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Task task \u003d tasks.get(id - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a description of the task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Pass task as a new todo task and adds it to the ArrayList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Task Description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task converted to a Todo Class"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Todo addTodo(String description) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return (Todo) addTask(todo);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a description and end time of the task"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Pass task as a new deadline task and adds it to the ArrayList"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Task Description"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param duration Deadline of Task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task converted to a Deadline Class"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Deadline addDeadline(String description, String duration) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, duration);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return (Deadline) addTask(deadline);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Takes in a description and start time of the task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Pass task as a new event task and adds it to the ArrayList"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Task Description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param duration Start Time of Task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return task converted to an Event Class"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static Event addEvent(String description, String duration) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        Event event \u003d new Event(description, duration);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return (Event) addTask(event);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Filters task by keyword inputted by user"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Returns an array list of the resulting filtered task"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param keyword Keyword inputted by user to narrow search"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Filtered task by keyword"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        ArrayList\u003cTask\u003e filteredTask \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                .filter((s) -\u003e s.description.toUpperCase().contains(keyword))"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return filteredTask;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 114
    }
  },
  {
    "path": "src/main/java/ip/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Constructor method"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @param description Sets the description (Extended from Task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Converts details to a string and returns the details"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return Details of the task (Description)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return \" [T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 23
    }
  },
  {
    "path": "src/main/java/ip/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import ip.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * Information is printed out to the user on the command line when commands have been successfully executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private static final Scanner INPUT \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Creates a scanner to read and return user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * @return in.nexLine() user input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String readInput(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return INPUT.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Prints Horizontal lines of length \u003d LINE_COUNT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printHorizontalLine() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        final int LINE_COUNT \u003d 60;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String line \u003d \"_\".repeat(LINE_COUNT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Welcome Address displayed when Duke starts"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printWelcomeMessage() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String logo \u003d \" ____   ____    _____   _____   _    _  \" + System.lineSeparator()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                + \"|  __| |  _ \\\\  |_   _| |_   _| | |  | | \" + System.lineSeparator()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                + \"| |__  | | | |   | |     | |   | |__| | \" + System.lineSeparator()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                + \"|  __| | | | |   | |     | |   |  __  | \" + System.lineSeparator()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                + \"| |__  | |_| |  _| |_    | |   | |  | | \" + System.lineSeparator()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                + \"|____| |____/  |_____|   |_|   |_|  |_| \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String greeting \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                \" Hello, I\u0027m Edith!\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                        \" I am a chatbot and I am here to assist you.\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                        \" What can I help you with?\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Farewell Address to be called when user inputs bye command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printFarewellMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        String bye \u003d \"Bye. I hope I have helped you. See you soon!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(bye);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * To be called when task is added (e.g. Deadline/Event)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printAddTaskMessage(Task task) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task:\\n\" + task + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Now you have \" + TaskManager.getTasksCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Called when user requests to list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printListTasksMessage() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        TaskManager.listTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Mark task as done response. Called if task is successfully marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printDoneMessage(Task completedTask) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\\n \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                completedTask.toString());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Called when user requests to delete task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printDeleteMessage(Task deletedTask) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task:\\n \" +"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                deletedTask.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Now you have \" + TaskManager.getTasksCount() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     * Called when user wants to find task via keyword"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printFilterTaskMessage(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        if(taskList.isEmpty()) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            System.out.println(\" Keyword returns no search result\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "                System.out.println(\" \" + (i+1) + \".\" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 123
    }
  },
  {
    "path": "src/main/java/ip/ui/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.ui.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * Exception class called when exception is caught. Returns the error message thrown (String)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * @return Error Message"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        this.error \u003d errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public String getErrorMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 18
    }
  },
  {
    "path": "src/main/java/ip/ui/exception/ExceptionMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "package ip.ui.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "import static ip.ui.Ui.printHorizontalLine;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * Information is printed out to the user on the command line when commands have NOT been successfully executed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " * Possible cause of error noted in the message"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "public class ExceptionMessage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printNoDescriptionExceptionMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" The description/time is missing. Please try again.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printNoCommandExceptionMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" Please enter an input, I cannot read minds (But I wish I could)!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printNoTaskIdMessage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(\" No/Invalid task ID listed. Unable to clear task.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        printHorizontalLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    public static void printErrorMessage(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 33
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "D | N | complete ip | [Friday]"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "T | Y | read Java coding standards"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "event CS2113 Tutorial /at Thu 2-4pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "deadline complete ip /by Friday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "todo read Java coding standards"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "find read"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "if ! javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "R-Ramana"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "R-Ramana": 2,
      "-": 36
    }
  }
]
