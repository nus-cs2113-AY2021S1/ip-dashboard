[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        List listItem \u003d new List();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Welcome to\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        // if \"Enter key\" is pressed WITHOUT any input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        while(command.isEmpty()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Invalid Input, Please Try Again\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        // This loop is to process the commands input by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        while (!\"bye\".equals(command) \u0026\u0026 !command.trim().equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            if (command.trim().equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.printList(); //object is calling function called printList()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else if (command.contains(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                //This is to get the instruction number"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                String value \u003d command.replace(\"done\", \"\").trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                int instructNum \u003d Integer.parseInt(value);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.instructionCompleted(instructNum-1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                String todoInstruction \u003d command.replace(\"todo\", \"T\").trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.addToDo(todoInstruction);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else if (command.contains(\"deadline\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                String deadlineInstruction \u003d command.replace(\"deadline\", \"D\").trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.addDeadline(deadlineInstruction);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else if (command.contains(\"event\")){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                String eventInstruction \u003d command.replace(\"event\", \"E\").trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.addEvent(eventInstruction);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            //Other general Instructions (Before Level 4)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                System.out.println(\"added: \" + command );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                listItem.addInstruction(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            } */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            while(command.isEmpty()){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                System.out.println(\"Invalid Input, Please Try Again\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MuhammadHoze": 60,
      "-": 9
    }
  },
  {
    "path": "src/main/java/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "public class List {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    private final int MAX_INSTRUCTION \u003d 100;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    private Task[] instruction \u003d new Task[MAX_INSTRUCTION];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    private int index \u003d 0; // Array index"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    private boolean isEmpty \u003d true; // To check if Instruction array is empty"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        for (int i \u003d 0; i \u003c instruction.length; i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            if (instruction[i] \u003d\u003d null) { // to prevent empty array values to show"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                if (isEmpty) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                    System.out.println(\"(List is currently empty)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                if (instruction[i].keyChar.equals(\"T\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                    System.out.println((i + 1) + \". \" + \"[\"+ instruction[i].keyChar + \"]\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                            + \"[\" + instruction[i].getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                            + instruction[i].description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                    System.out.println((i + 1) + \". \" + \"[\" + instruction[i].keyChar + \"]\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                            + \"[\" + instruction[i].getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                            + instruction[i].description + \"(\" + instruction[i].date + \")\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void instructionCompleted(int instructNum) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        if (isEmpty) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Please add instruction first!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            instruction[instructNum].markInstructionAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"[\" + instruction[instructNum].getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                    + \" \" + instruction[instructNum].description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void addToDo (String description) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        Task newToDo \u003d new Task(description);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        instruction[index] \u003d newToDo;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        isEmpty \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"  [\" + instruction[index].keyChar + \"]\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                + \"[\"+ instruction[index].getStatusIcon() + \"]\" + instruction[index].description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" task in the list\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        index++;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void addDeadline(String description){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        Task newDeadline \u003d new Task(description);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        instruction[index] \u003d newDeadline;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        isEmpty \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"  [\" + instruction[index].keyChar + \"]\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                + \"[\"+ instruction[index].getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                + instruction[index].description + \"(\" + instruction[index].date + \")\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" task in the list\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        index++;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void addEvent(String description){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        Task newEvent \u003d new Task(description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        instruction[index] \u003d newEvent;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        isEmpty \u003d false;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"  [\" + instruction[index].keyChar + \"]\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                + \"[\"+ instruction[index].getStatusIcon() + \"]\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "                + instruction[index].description + \"(\" + instruction[index].date + \")\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        if (index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" task in the list\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            System.out.println(\"Now you have \" + (index + 1) + \" tasks in the list\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        System.out.println(\"----------------------------------------\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        index++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MuhammadHoze": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    protected String keyChar; // To identify: ToDo(T), Deadline(D), Event(E)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    //This description is the string command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        this.keyChar \u003d description.substring(0,1);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        if (keyChar.equals(\"T\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            this.description \u003d description.substring(1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            //this.date \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        else if (keyChar.equals(\"D\")){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            this.description \u003d description.substring(1, description.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            this.date \u003d description.replace(\"by\",\"by:\").substring(description.lastIndexOf(\"/\")+1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        else if (keyChar.equals(\"E\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            this.description \u003d description.substring(1, description.lastIndexOf(\"/\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "            this.date \u003d description.replace(\"at\",\"at:\").substring(description.lastIndexOf(\"/\")+1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    public void markInstructionAsDone(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MuhammadHoze"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MuhammadHoze": 34
    }
  }
]
