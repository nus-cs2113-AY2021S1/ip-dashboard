[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "longngng": 1,
      "-": 25
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "# Duke project "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "[1. Introduction](#1-introduction) \u003cbr\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "[2. Quick start](#2-quick-start) \u003cbr\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "[3. Features](#3-features) \u003cbr\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.1 Viewing help](#31-viewing-help-help) \u003cbr\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.2 Adding a todo](#32-adding-a-todo-todo) \u003cbr\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.3 Adding an event](#33-adding-an-event-event) \u003cbr\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.4 Adding a deadline](#34-adding-a-deadline-deadline) \u003cbr\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.5 Listing tasks](#35-listing-all-the-tasks-list) \u003cbr\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.7 Finding tasks](#37-finding-a-task-find) \u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.8 Deleting a task](#38-deleting-a-task-delete) \u003cbr\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;[3.9 Exiting](#39-existing-the-program-bye) \u003cbr\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "[4. Command summary](#4-command-summary)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "## 1. Introduction"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "This is my individual project for CS2113T - Software engineering and OOP at NUS. It is a command line application to help user manage everyday tasks. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "## 2. Quick Start"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "Prerequisites: JRE 11"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. Download the latest jar file from Github."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. Open a shell, for example  *cmd, git bash*"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. Change the directory to the location of the jar file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. Run the program by `java -jar ip.jar`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "1. If the setup is correct, you should see the following greetings:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "   Hello I\u0027m Duke"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "   What can I do for you?"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "## 3. Features"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "**Notes about the command format**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "Words in \u003cUPPER_CASE\u003e are the parameters to be supplied by the user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": " "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.1. Viewing help: `help`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out the available commands with explanations."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": " "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.2. Adding a todo: `todo`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "Adds a todo task to the list of tasks and updates the records."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "The new task added is assumed to be not done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `todo \u003cTODO_DESCRIPTION\u003e`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003e todo read book"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "Got it! I\u0027ve added this task:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "  [T][X] read book"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "Now, you have 1 task in the list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.3. Adding an event `event`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "Adds an event with happening time to the list of tasks and updates the records. "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "The new task added is assumed to be not done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `event \u003cEVENT_DESCRIPTION\u003e /at \u003cEVENT_DATE\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The \u003cEVENT_DATE\u003e must be in the format yyyy-mm-dd."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "* If the \u003cEVENT_DATE\u003e does not follow the standard format above, the event will still be added, but the program will notify the user that the date is not in the standard form."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003eevent oral presentation 1 /at 2020-09-01"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "  [E][✘] oral presentation 1 (at: Sep 1 2020)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.4. Adding a deadline `deadline`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "Adds a task with deadline to the list of tasks and updates the records. "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "The new task added is assumed to be not done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `deadline \u003cDEADLINE_DESCRIPTION\u003e /by \u003cDEADLINE_DATE\u003e`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The \u003cDEADLINE_DATE\u003e must be in the format yyyy-mm-dd."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "* If the \u003cDEADLINE_DATE\u003e does not follow the standard format above, the deadline  will still be added, but the program will notify the user that the date is not in the standard form."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003edeadline return book /by 2020-09-12"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "  [D][✘] return book (by: Sep 12 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.5. Listing all the tasks `list`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out all the existing tasks."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003elist"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "1.[T][✘] read book"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "2.[E][✘] oral presentation 1 (at: Sep 1 2020)"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "3.[D][✘] return book (by: Sep 12 2020)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.6. Mark a task as done `done`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "Marks a task as done and updates the record."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `done \u003cINDEX\u003e`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The index of the task can be read from using `list` command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The index must be a **positive integer** 1, 2, 3, ..."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003edone 1"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": "  [T][✓] read book"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.7. Finding a task `find`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "Lists out all the tasks that contain a keyword"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003efind book"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "longngng"
        },
        "content": "1.[T][✓] read book"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "longngng"
        },
        "content": "2.[D][✘] return book (by: Sep 12 2020)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.8. Deleting a task `delete`"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "longngng"
        },
        "content": "Deletes a task from the list and updates the record."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `delete \u003cINDEX\u003e`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The index of the task can be read from using `list` command."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "longngng"
        },
        "content": "* The index must be a **positive integer** 1, 2, 3, ..."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003eExample"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "longngng"
        },
        "content": "\u003e\u003e\u003edelete 2"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "longngng"
        },
        "content": "Noted! I\u0027ve removed this task:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "longngng"
        },
        "content": "  [E][✘] oral presentation 1 (at: Sep 1 2020)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "longngng"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "longngng"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "longngng"
        },
        "content": "### 3.9. Exiting the program: `bye`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "longngng"
        },
        "content": "Terminates the program and saves the recorded information to *~/data/duke.txt*"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "longngng"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "longngng"
        },
        "content": "## 4. Command summary"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "longngng"
        },
        "content": "Command |Syntax| Command description and example "
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "longngng"
        },
        "content": "------------| ------ | ------------- "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "longngng"
        },
        "content": "help |`help`|prints out the list of available commands and their descriptions"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo |`todo \u003cDESCRIPTION\u003e` |adds a new todo task"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "longngng"
        },
        "content": "event |`event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e` |adds a new event task"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "longngng"
        },
        "content": "deadline |`deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`|adds a new deadline task"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "longngng"
        },
        "content": "list |`list`|lists out the existing tasks"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "longngng"
        },
        "content": "done |`done \u003cINDEX\u003e` |marks a task as done"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "longngng"
        },
        "content": "find |`find \u003cKEYWORD\u003e`|lists out the tasks that contain a keyword"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "longngng"
        },
        "content": "delete |`delete \u003cINDEX\u003e`|deletes a task in the list"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "longngng"
        },
        "content": "bye |`bye`|terminates the program"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "longngng": 155,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.command.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "            tasks  \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Ui.printHello();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Parser.handleCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Ui.printGoodbye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 32,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 5
    }
  },
  {
    "path": "src/main/java/duke/DukeException2.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class DukeException2 extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 4
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Loads the existing list of tasks from file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * If the folder or file do not exist, create it"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void loadExistingList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //If the folder doesn\u0027t exists, create it"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        boolean bool \u003d folder.mkdirs();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //If the file doesn\u0027t exist, create it"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Scanner s \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "            parseTasks(s);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "            //System.out.println(\"File Not Found\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "                //System.out.println(\"New File\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } catch (IOException ioException) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "                ioException.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Reads the existing tasks listed in the file into the ArrayList"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static void parseTasks(Scanner s) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "            String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "            String[] data \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (int i \u003d 0; i \u003c data.length; i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "                data[i] \u003d data[i].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Todo(data[2]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Deadline(data[2], data[3]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Event(data[2], data[3]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Error\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Writes text into output file"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Update the output file when a new task is added, deleted or marked as done"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void updateDataFile() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String file2 \u003d filePath;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String stringOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Event temp \u003d (Event) task;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"E\" + \" | \" + done + \" | \" + temp.getDescription() + \" | \" + temp.getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Deadline temp \u003d (Deadline) task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"D\" + \" | \" + done + \" | \" + temp.getDescription() + \" | \" + temp.getBy() + System.lineSeparator();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Todo temp \u003d (Todo) task;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"T\" + \" | \" + done + \" | \" + temp.getDescription() + System.lineSeparator();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Error\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": "            writeToFile(file2, stringOfTasks);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Return the the list of the task in the file and call the loadExistingList() function."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the list of the task at the beginning when the program is started."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "longngng"
        },
        "content": "        loadExistingList();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 131
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 19
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_BYE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DONE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_FIND,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_HELP,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_UNKNOWN,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_EMPTY;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.DukeException2;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Read in commands from users and process them until the \"bye\" command is input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void handleCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "            CommandType commandType \u003d CommandType.COMMAND_UNKNOWN;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "                commandType \u003d readCommandType(line);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "            switch(commandType) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.printTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.markAsDone(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"Cannot find the index of the task to be deleted\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"Please key in a positive number for the index\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The index is out of bound. Use `list` to check the index of the tasks\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.addTodo(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.addDeadline(line);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The input time is lacking. Type help for more info.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException2 e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The input time is lacking. Type help for more info.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.addEvent(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The input time is lacking. Type help for more info.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException2 e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The input time is lacking. Type help for more info.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.deleteEvent(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"Cannot find the index of the task to be deleted\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"Please key in a positive number for the index\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The index is out of bound. Use `list` to check the index of the tasks\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_FIND:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.findTasks(line);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"The keyword cannot be empty.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_HELP:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "                printCommandList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_EMPTY:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_UNKNOWN:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Unknown command. Type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (commandType \u003d\u003d CommandType.COMMAND_BYE) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static void printCommandList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"Below is the list of available commands:\\n\" +"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"todo\\n\" + \"   `todo \u003cDESCRIPTION\u003e` adds a new todo task\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"event\\n\" + \"   `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e` adds a new event task\\n\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": "                        \"   \u003cDATE\u003e must be in format yyyy-mm-dd\\n\" +"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"deadline\\n\" + \"    `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` adds a new deadline task\\n\" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": "                        \"   \u003cDATE\u003e must be in format yyyy-mm-dd\\n\" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"list\\n\" + \"    `list` lists out the existing tasks\\n\" +"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"done\\n\" + \"    `done \u003cINDEX\u003e` marks a task as done\\n\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"find\\n\" + \"    `find \u003cKEYWORD\u003e` lists out the tasks that contain a keyword\\n\" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"delete\\n\" + \"    `delete \u003cINDEX\u003e` deletes a task in the list\\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"bye\\n\" + \"    `bye` terminates the program\\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"help\\n\" + \"    `help` prints out the list of available commands and their descriptions\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the of type of the input command."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param input  X coordinate of position."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return one type of the command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException If the input command is not in the list of known commands."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static CommandType readCommandType(String input) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String command \u003d (i \u003d\u003d -1) ? input : input.substring(0, i);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"\"):"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_EMPTY;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_BYE;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_LIST;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"todo\"):"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_TODO;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"deadline\"):"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_EVENT;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"done\"):"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DONE;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"delete\"):"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DELETE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"find\"):"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_FIND;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"help\"):"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_HELP;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 161
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.DukeException2;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Deletes a task in the list and update the output file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void deleteEvent(String line) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d Integer.parseInt(line.substring(7));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //System.out.println(\"Index of delete task\" + index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Task tempTask \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tempTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String out \u003d (tasks.size() \u003e 1) ? (\"Now you have \" + tasks.size() + \" tasks in the list.\") :"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "                (\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds a to-do to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException If there is no description for the list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addTodo(String line) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d -1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "            taskDescription \u003d line.substring(i+1).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (taskDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds a deadline to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException if the description is missing"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException2 if the date is missing"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addDeadline(String line) throws DukeException, DukeException2 {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i2 \u003d line.indexOf(\"/by\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription \u003d line.substring(i1+1, i2 - 1).trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if(taskDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDeadline \u003d line.substring(i2+4).trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (taskDeadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException2();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"taskDeadline:\" + taskDeadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"length\" + taskDeadline.length());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Deadline(taskDescription, taskDeadline));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds an event to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException if the description is missing"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException2 if the date is missing"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addEvent(String line) throws DukeException, DukeException2 {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i1 \u003d\u003d -1) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i2 \u003d line.indexOf(\"/at\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription \u003d line.substring(i1+1, i2 - 1).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if(taskDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskTime \u003d line.substring(i2+4).trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (taskTime.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException2();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Event(taskDescription, taskTime));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Prints the notification and the task added"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printAddNotification() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.size()-1));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String out \u003d (tasks.size() \u003e 1) ? (\"Now you have \" + tasks.size() + \" tasks in the list.\") :"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "longngng"
        },
        "content": "                (\"Now you have \" + tasks.size() + \" task in the list.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Marks a task as done and update the output file"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void markAsDone(String line) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d Integer.parseInt(line.substring(5));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.get(index-1).setStatusDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index-1));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Prints the list of the tasks with numbering"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printTasks() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The list of tasks is empty\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.print((index++) + \".\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Lists out all the tasks that contain a keyword"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException if the keyword is missing"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void findTasks(String line) throws DukeException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String keyword \u003d (line.substring(i1)).trim();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (keyword.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "longngng"
        },
        "content": "        foundTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .filter((s) -\u003e s.getDescription()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .contains(keyword))"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (foundTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "longngng"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Task task : foundTasks) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print((index++) + \".\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else if (foundTasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"No match found\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Find error\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 186
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Deadline with description and time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param by the deadline time of the event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The input date is not in standard format. Type help for more info!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (deadlineDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return (\"[D]\" + super.toString() + \" (by: \" + by + \")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return (\"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    //protected LocalTime eventTime \u003d LocalTime.parse(\"08:30\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Deadline with description and time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param time the time that the event will happen"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "            this.eventDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"The input date is not in standard format. Type help for more info!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (eventDate \u003d\u003d null) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return (\"[E]\" + super.toString() + \" (by: \" + time + \")\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return (\"[E]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "longngng": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected static int numOfTask \u003d 0;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public final String TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public final String CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Task with description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d \"Default\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the tick or cross symbols based on whether the task is done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the corresponding icon"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (isDone ? TICK : CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setStatusDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public int getDoneStatus () {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the formatted string of the instance to print"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + this.description );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of To-do with description and time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the to-do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "longngng": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\command\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "longngng": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "longngng": 2,
      "-": 37
    }
  }
]
