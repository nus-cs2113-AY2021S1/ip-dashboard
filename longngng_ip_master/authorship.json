[
  {
    "path": "src/main/java/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_BYE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_LIST,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_DELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_FIND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    COMMAND_UNKNOWN"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Deadline with description and time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param by the deadline time of the event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.deadlineDate \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "                + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 37
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "            tasks  \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Ui.printHello();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Parser.handleCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Ui.printGoodbye();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 24,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Event\u003cd4\u003e extends Task{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    //protected LocalTime eventTime \u003d LocalTime.parse(\"08:30\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Deadline with description and time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param time the time that the event will happen"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.eventDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setTime(String time) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "                + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "longngng": 40
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Read in commands from users and process them until the \"bye\" command is input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected static void handleCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "            CommandType commandType \u003d CommandType.COMMAND_UNKNOWN;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "                commandType \u003d readCommandType(line);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "            switch(commandType) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_BYE:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_LIST:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.printTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DONE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.markAsDone(line);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_TODO:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    TaskList.addTodo(line);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DEADLINE:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.addDeadline(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_EVENT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.addEvent(line);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_DELETE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.deleteEvent(line);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_FIND:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "                TaskList.findTasks(line);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "            case COMMAND_UNKNOWN:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Unknown command. Type \\\"help\\\" for more information\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (commandType \u003d\u003d CommandType.COMMAND_BYE) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the of type of the input command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param input  X coordinate of position."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return one type of the command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException If the input command is not in the list of known commands."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static CommandType readCommandType(String input) throws DukeException{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String command \u003d (i \u003d\u003d -1) ? input : input.substring(0, i);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_BYE;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_LIST;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"todo\"):"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_TODO;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"deadline\"):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DEADLINE;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"event\"):"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_EVENT;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"done\"):"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DONE;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"delete\"):"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_DELETE;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "        case(\"find\"):"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "            return CommandType.COMMAND_FIND;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "            //return CommandType.COMMAND_UNKNOWN;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Loads the existing list of tasks from file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * If the folder or file do not exist, create it"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void loadExistingList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //If the folder doesn\u0027t exists, create it"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        File folder \u003d new File(\"data\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        boolean bool \u003d folder.mkdirs();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //If the file doesn\u0027t exist, create it"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Scanner s \u003d null; // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": "            parseTasks(s);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "            //System.out.println(\"File Not Found\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "            //e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "                //System.out.println(\"New File\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } catch (IOException ioException) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "                ioException.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Reads the existing tasks listed in the file into the ArrayList"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static void parseTasks(Scanner s) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "            String currentLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "            String[] data \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (int i \u003d 0; i \u003c data.length; i++) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "                data[i] \u003d data[i].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (data[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Todo(data[2]));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (data[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Deadline(data[2], data[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (data[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "                tasks.add(new Event(data[2], data[3]));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "                if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "                    tasks.get(tasks.size() - 1).setStatusDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Error\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Writes text into output file"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Update the output file when a new task is added, deleted or marked as done"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void updateDataFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String file2 \u003d filePath;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String stringOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Event temp \u003d (Event) task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"E\" + \" | \" + done + \" | \" + temp.getDescription() + \" | \" + temp.getTime() + System.lineSeparator();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Deadline temp \u003d (Deadline) task;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"D\" + \" | \" + done + \" | \" + temp.getDescription() + \" | \" + temp.getBy() + System.lineSeparator();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "                Todo temp \u003d (Todo) task;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": "                int done \u003d temp.getDoneStatus();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "                stringOfTasks +\u003d \"T\" + \" | \" + done + \" | \" + temp.getDescription() + System.lineSeparator();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(\"Error\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "            writeToFile(file2, stringOfTasks);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Return the the list of the task in the file and call the loadExistingList() function."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the list of the task at the beginning when the program is started."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": "        loadExistingList();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 124
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "    protected static int numOfTask \u003d 0;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of Task with description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d \"Default\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the tick or cross symbols based on whether the task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the corresponding icon"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setDescription(String description) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void setStatusDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public int getDoneStatus () {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return isDone? 1 : 0;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Returns the formatted string of the instance to print"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @return the formatted string"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" + this.description );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) throws DukeException{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Deletes a task in the list and update the output file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void deleteEvent(String line) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d Integer.parseInt(line.substring(7, 8));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "        //System.out.println(\"Index of delete task\" + index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Task tempTask \u003d tasks.get(index - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tempTask);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String out \u003d (tasks.size() \u003e 1) ? (\"Now you have \" + tasks.size() + \" tasks in the list.\") :"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds a to-do to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @throws DukeException If there is no description for the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addTodo(String line) throws DukeException{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription \u003d (i \u003d\u003d -1) ? line : line.substring(i+1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (i \u003d\u003d -1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "longngng"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds a deadline to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addDeadline(String line) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i2 \u003d line.indexOf(\"/by\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription \u003d line.substring(i1+1, i2 - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDeadline \u003d line.substring(i2+4);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Deadline(taskDescription, taskDeadline));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Adds an event to the list of the tasks and update the output file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void addEvent(String line) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i2 \u003d line.indexOf(\"/at\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskDescription \u003d line.substring(i1+1, i2 - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String taskTime \u003d line.substring(i2+4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.add(new Event(taskDescription, taskTime));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "longngng"
        },
        "content": "        printAddNotification();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Prints the notification and the task added"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printAddNotification() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tasks.get(tasks.size()-1));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String out \u003d (tasks.size() \u003e 1) ? (\"Now you have \" + tasks.size() + \" tasks in the list.\") :"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "longngng"
        },
        "content": "                \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(out);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Marks a task as done and update the output file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void markAsDone(String line) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d Integer.parseInt(line.substring(5, 6));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "longngng"
        },
        "content": "        tasks.get(index-1).setStatusDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"  \" + tasks.get(index-1));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "longngng"
        },
        "content": "        Storage.updateDataFile();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Prints the list of the tasks with numbering"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printTasks() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "longngng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.print((index++) + \".\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(task);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void findTasks(String line) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "longngng"
        },
        "content": "        int i1 \u003d line.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "longngng"
        },
        "content": "        String keyword \u003d line.substring(i1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "longngng"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "longngng"
        },
        "content": "        foundTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .filter((s) -\u003e s.getDescription()"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .contains(keyword))"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "longngng"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "longngng"
        },
        "content": "        if (foundTasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "longngng"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "longngng"
        },
        "content": "            for (Task task : foundTasks) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.print((index++) + \".\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "longngng"
        },
        "content": "                System.out.println(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "longngng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else if (foundTasks.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"No match found\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "longngng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "longngng"
        },
        "content": "            System.out.println(\"Find error\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "longngng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 129
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * Initializes an instance of To-do with description and time"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * @param description description of the to-do"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": "     * {@inheritDoc}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "        return (\"[T]\" + super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printGoodbye() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Hello I\u0027m Duke\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "longngng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "longngng"
        },
        "content": "        System.out.println(\"Loading Error\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "longngng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "longngng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "longngng": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "longngng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "longngng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "longngng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "longngng"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "longngng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "longngng"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "longngng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "longngng"
        },
        "content": "bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "longngng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "longngng": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "longngng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "longngng"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "longngng": 2,
      "-": 19
    }
  }
]
